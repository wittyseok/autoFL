{
    "summary": {
        "total": 353,
        "acc@1": 146,
        "acc@2": 172,
        "acc@3": 180,
        "acc@4": 186,
        "acc@5": 194,
        "acc@6": 198,
        "acc@7": 202,
        "acc@8": 204,
        "acc@9": 207,
        "acc@10": 208
    },
    "buggy_methods": {
        "Chart_1": {
            "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems()": {
                "autofl_rank": 1
            }
        },
        "Chart_10": {
            "org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator.generateToolTipFragment(java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Chart_11": {
            "org.jfree.chart.util.ShapeUtilities.equal(java.awt.geom.GeneralPath, java.awt.geom.GeneralPath)": {
                "autofl_rank": 1
            }
        },
        "Chart_12": {
            "org.jfree.chart.plot.MultiplePiePlot.MultiplePiePlot(org.jfree.data.category.CategoryDataset)": {
                "autofl_rank": 1
            }
        },
        "Chart_13": {
            "org.jfree.chart.block.BorderArrangement.arrangeFF(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)": {
                "autofl_rank": 1
            }
        },
        "Chart_14": {
            "org.jfree.chart.plot.XYPlot.removeDomainMarker(int, org.jfree.chart.plot.Marker, org.jfree.chart.util.Layer, boolean)": {
                "autofl_rank": 80
            },
            "org.jfree.chart.plot.XYPlot.removeRangeMarker(int, org.jfree.chart.plot.Marker, org.jfree.chart.util.Layer, boolean)": {
                "autofl_rank": 77
            },
            "org.jfree.chart.plot.CategoryPlot.removeDomainMarker(int, org.jfree.chart.plot.Marker, org.jfree.chart.util.Layer, boolean)": {
                "autofl_rank": 84
            },
            "org.jfree.chart.plot.CategoryPlot.removeRangeMarker(int, org.jfree.chart.plot.Marker, org.jfree.chart.util.Layer, boolean)": {
                "autofl_rank": 1
            }
        },
        "Chart_15": {
            "org.jfree.chart.plot.PiePlot.initialise(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.plot.PiePlot, java.lang.Integer, org.jfree.chart.plot.PlotRenderingInfo)": {
                "autofl_rank": 94
            }
        },
        "Chart_16": {
            "org.jfree.data.category.DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(java.lang.Comparable[], java.lang.Comparable[], java.lang.Number[][], java.lang.Number[][])": {
                "autofl_rank": 2
            },
            "org.jfree.data.category.DefaultIntervalCategoryDataset.setCategoryKeys(java.lang.Comparable[])": {
                "autofl_rank": 4
            }
        },
        "Chart_17": {
            "org.jfree.data.time.TimeSeries.clone()": {
                "autofl_rank": 2
            }
        },
        "Chart_18": {
            "org.jfree.data.DefaultKeyedValues.removeValue(int)": {
                "autofl_rank": 5
            },
            "org.jfree.data.DefaultKeyedValues.removeValue(java.lang.Comparable)": {
                "autofl_rank": 1
            },
            "org.jfree.data.DefaultKeyedValues2D.removeColumn(java.lang.Comparable)": {
                "autofl_rank": 3
            }
        },
        "Chart_19": {
            "org.jfree.chart.plot.CategoryPlot.getDomainAxisIndex(org.jfree.chart.axis.CategoryAxis)": {
                "autofl_rank": 2
            },
            "org.jfree.chart.plot.CategoryPlot.getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)": {
                "autofl_rank": 1
            }
        },
        "Chart_2": {
            "org.jfree.data.general.DatasetUtilities.iterateDomainBounds(org.jfree.data.xy.XYDataset, boolean)": {
                "autofl_rank": 32
            },
            "org.jfree.data.general.DatasetUtilities.iterateRangeBounds(org.jfree.data.xy.XYDataset, boolean)": {
                "autofl_rank": 33
            }
        },
        "Chart_20": {
            "org.jfree.chart.plot.ValueMarker.ValueMarker(double, java.awt.Paint, java.awt.Stroke, java.awt.Paint, java.awt.Stroke, float)": {
                "autofl_rank": 1
            }
        },
        "Chart_21": {
            "org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.add(org.jfree.data.statistics.BoxAndWhiskerItem, java.lang.Comparable, java.lang.Comparable)": {
                "autofl_rank": 3
            },
            "org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds()": {
                "autofl_rank": 1
            }
        },
        "Chart_22": {
            "org.jfree.data.KeyedObjects2D.removeColumn(java.lang.Comparable)": {
                "autofl_rank": 2
            },
            "org.jfree.data.KeyedObjects2D.removeObject(java.lang.Comparable, java.lang.Comparable)": {
                "autofl_rank": 3
            },
            "org.jfree.data.KeyedObjects2D.removeRow(java.lang.Comparable)": {
                "autofl_rank": 28
            },
            "org.jfree.data.KeyedObjects2D.getObject(java.lang.Comparable, java.lang.Comparable)": {
                "autofl_rank": 5
            }
        },
        "Chart_23": {},
        "Chart_24": {
            "org.jfree.chart.renderer.GrayPaintScale.getPaint(double)": {
                "autofl_rank": 1
            }
        },
        "Chart_25": {
            "org.jfree.chart.renderer.category.StatisticalBarRenderer.drawHorizontalItem(java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.statistics.StatisticalCategoryDataset, int, int)": {
                "autofl_rank": 593
            },
            "org.jfree.chart.renderer.category.StatisticalBarRenderer.drawVerticalItem(java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.statistics.StatisticalCategoryDataset, int, int)": {
                "autofl_rank": 2
            }
        },
        "Chart_26": {
            "org.jfree.chart.axis.Axis.drawLabel(java.lang.String, java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge, org.jfree.chart.axis.AxisState, org.jfree.chart.plot.PlotRenderingInfo)": {
                "autofl_rank": 22
            }
        },
        "Chart_3": {
            "org.jfree.data.time.TimeSeries.createCopy(int, int)": {
                "autofl_rank": 1
            }
        },
        "Chart_4": {
            "org.jfree.chart.plot.XYPlot.getDataRange(org.jfree.chart.axis.ValueAxis)": {
                "autofl_rank": 1
            }
        },
        "Chart_5": {
            "org.jfree.data.xy.XYSeries.addOrUpdate(java.lang.Number, java.lang.Number)": {
                "autofl_rank": 1
            }
        },
        "Chart_6": {
            "org.jfree.chart.util.ShapeList.equals(java.lang.Object)": {
                "autofl_rank": 1
            }
        },
        "Chart_7": {
            "org.jfree.data.time.TimePeriodValues.updateBounds(org.jfree.data.time.TimePeriod, int)": {
                "autofl_rank": 4
            }
        },
        "Chart_8": {
            "org.jfree.data.time.Week.Week(java.util.Date, java.util.TimeZone)": {
                "autofl_rank": 4
            }
        },
        "Chart_9": {
            "org.jfree.data.time.TimeSeries.createCopy(org.jfree.data.time.RegularTimePeriod, org.jfree.data.time.RegularTimePeriod)": {
                "autofl_rank": 2
            }
        },
        "Closure_1": {
            "com.google.javascript.jscomp.RemoveUnusedVars.removeUnreferencedFunctionArgs(com.google.javascript.jscomp.Scope)": {
                "autofl_rank": 280
            }
        },
        "Closure_10": {
            "com.google.javascript.jscomp.NodeUtil.mayBeString(com.google.javascript.rhino.Node, boolean)": {
                "autofl_rank": 229
            }
        },
        "Closure_100": {
            "com.google.javascript.jscomp.CheckGlobalThis.shouldReportThis(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 1
            },
            "com.google.javascript.jscomp.CheckGlobalThis.shouldTraverse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 15
            }
        },
        "Closure_101": {
            "com.google.javascript.jscomp.CommandLineRunner.createOptions()": {
                "autofl_rank": 146
            }
        },
        "Closure_102": {
            "com.google.javascript.jscomp.Normalize.process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 580
            }
        },
        "Closure_103": {
            "com.google.javascript.jscomp.DisambiguateProperties.JSTypeSystem.getTypeWithProperty(java.lang.String, com.google.javascript.rhino.jstype.JSType)": {
                "autofl_rank": 481
            },
            "com.google.javascript.jscomp.ControlFlowAnalysis.mayThrowException(com.google.javascript.rhino.Node)": {
                "autofl_rank": 51
            }
        },
        "Closure_104": {
            "com.google.javascript.rhino.jstype.UnionType.meet(com.google.javascript.rhino.jstype.JSType)": {
                "autofl_rank": 138
            }
        },
        "Closure_105": {
            "com.google.javascript.jscomp.FoldConstants.tryFoldStringJoin(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 1
            }
        },
        "Closure_106": {
            "com.google.javascript.rhino.JSDocInfoBuilder.recordBlockDescription(java.lang.String)": {
                "autofl_rank": 572
            },
            "com.google.javascript.jscomp.GlobalNamespace.Name.canCollapseUnannotatedChildNames()": {
                "autofl_rank": 380
            }
        },
        "Closure_107": {
            "com.google.javascript.jscomp.CommandLineRunner.createOptions()": {
                "autofl_rank": 152
            }
        },
        "Closure_108": {
            "com.google.javascript.jscomp.ScopedAliases.Traversal.findAliases(com.google.javascript.jscomp.NodeTraversal)": {
                "autofl_rank": 285
            },
            "com.google.javascript.jscomp.ScopedAliases.Traversal.visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 293
            },
            "com.google.javascript.jscomp.ScopedAliases.Traversal.exitScope(com.google.javascript.jscomp.NodeTraversal)": {
                "autofl_rank": 284
            }
        },
        "Closure_109": {
            "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseContextTypeExpression(com.google.javascript.jscomp.parsing.JsDocToken)": {
                "autofl_rank": 28
            }
        },
        "Closure_11": {
            "com.google.javascript.jscomp.TypeCheck.visitGetProp(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 337
            }
        },
        "Closure_110": {
            "com.google.javascript.jscomp.ScopedAliases.Traversal.findAliases(com.google.javascript.jscomp.NodeTraversal)": {
                "autofl_rank": 232
            }
        },
        "Closure_111": {
            "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter.Anonymous-c12b5e16-6200-40dc-8438-df86e3374a0f.caseTopType(com.google.javascript.rhino.jstype.JSType)": {
                "autofl_rank": 216
            }
        },
        "Closure_112": {
            "com.google.javascript.jscomp.TypeInference.inferTemplatedTypesForCall(com.google.javascript.rhino.Node, com.google.javascript.rhino.jstype.FunctionType)": {
                "autofl_rank": 439
            }
        },
        "Closure_113": {
            "com.google.javascript.jscomp.ProcessClosurePrimitives.processRequireCall(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 221
            }
        },
        "Closure_114": {
            "com.google.javascript.jscomp.NameAnalyzer.FindDependencyScopes.recordAssignment(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 256
            }
        },
        "Closure_115": {
            "com.google.javascript.jscomp.FunctionInjector.canInlineReferenceDirectly(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 198
            }
        },
        "Closure_116": {
            "com.google.javascript.jscomp.FunctionInjector.canInlineReferenceDirectly(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 80
            }
        },
        "Closure_117": {
            "com.google.javascript.jscomp.TypeValidator.getReadableJSTypeName(com.google.javascript.rhino.Node, boolean)": {
                "autofl_rank": 416
            }
        },
        "Closure_118": {
            "com.google.javascript.jscomp.DisambiguateProperties.FindRenameableProperties.handleObjectLit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node)": {
                "autofl_rank": 256
            }
        },
        "Closure_119": {
            "com.google.javascript.jscomp.GlobalNamespace.BuildGlobalNamespace.collect(com.google.javascript.jscomp.JSModule, com.google.javascript.jscomp.Scope, com.google.javascript.rhino.Node)": {
                "autofl_rank": 156
            }
        },
        "Closure_12": {
            "com.google.javascript.jscomp.MaybeReachingVariableUse.hasExceptionHandler(com.google.javascript.rhino.Node)": {
                "autofl_rank": 337
            }
        },
        "Closure_120": {
            "com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection.isAssignedOnceInLifetime()": {
                "autofl_rank": 387
            }
        },
        "Closure_121": {
            "com.google.javascript.jscomp.InlineVariables.InliningBehavior.inlineNonConstants(com.google.javascript.jscomp.Scope.Var, com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection, boolean)": {
                "autofl_rank": 2
            }
        },
        "Closure_122": {
            "com.google.javascript.jscomp.parsing.IRFactory.handleBlockComment(com.google.javascript.rhino.head.ast.Comment)": {
                "autofl_rank": 21
            }
        },
        "Closure_123": {
            "com.google.javascript.jscomp.CodeGenerator.add(com.google.javascript.rhino.Node, com.google.javascript.jscomp.CodeGenerator.Context)": {
                "autofl_rank": 10
            }
        },
        "Closure_124": {
            "com.google.javascript.jscomp.ExploitAssigns.isSafeReplacement(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 14
            }
        },
        "Closure_125": {
            "com.google.javascript.jscomp.TypeCheck.visitNew(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node)": {
                "autofl_rank": 2
            }
        },
        "Closure_126": {
            "com.google.javascript.jscomp.MinimizeExitPoints.tryMinimizeExits(com.google.javascript.rhino.Node, int, java.lang.String)": {
                "autofl_rank": 195
            }
        },
        "Closure_127": {
            "com.google.javascript.jscomp.UnreachableCodeElimination.EliminationPass.tryRemoveUnconditionalBranching(com.google.javascript.rhino.Node)": {
                "autofl_rank": 1
            }
        },
        "Closure_128": {
            "com.google.javascript.jscomp.CodeGenerator.isSimpleNumber(java.lang.String)": {
                "autofl_rank": 49
            }
        },
        "Closure_129": {
            "com.google.javascript.jscomp.PrepareAst.PrepareAnnotations.annotateCalls(com.google.javascript.rhino.Node)": {
                "autofl_rank": 739
            }
        },
        "Closure_13": {
            "com.google.javascript.jscomp.PeepholeOptimizationsPass.traverse(com.google.javascript.rhino.Node)": {
                "autofl_rank": 801
            }
        },
        "Closure_130": {
            "com.google.javascript.jscomp.CollapseProperties.inlineAliases(com.google.javascript.jscomp.GlobalNamespace)": {
                "autofl_rank": 108
            }
        },
        "Closure_131": {
            "com.google.javascript.rhino.TokenStream.isJSIdentifier(java.lang.String)": {
                "autofl_rank": 360
            }
        },
        "Closure_132": {
            "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryMinimizeIf(com.google.javascript.rhino.Node)": {
                "autofl_rank": 256
            }
        },
        "Closure_133": {
            "com.google.javascript.jscomp.parsing.JsDocInfoParser.getRemainingJSDocLine()": {
                "autofl_rank": 5
            }
        },
        "Closure_14": {
            "com.google.javascript.jscomp.ControlFlowAnalysis.computeFollowNode(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowAnalysis)": {
                "autofl_rank": 58
            }
        },
        "Closure_15": {
            "com.google.javascript.jscomp.FlowSensitiveInlineVariables.Anonymous-3ae109f0-7e91-4fc1-b2ed-c2da24d5efa4.apply(com.google.javascript.rhino.Node)": {
                "autofl_rank": 270
            }
        },
        "Closure_16": {
            "com.google.javascript.jscomp.ScopedAliases.Traversal.fixTypeNode(com.google.javascript.rhino.Node)": {
                "autofl_rank": 210
            },
            "com.google.javascript.jscomp.ScopedAliases.AliasedTypeNode.AliasedTypeNode(com.google.javascript.rhino.Node, java.lang.String)": {
                "autofl_rank": 204
            },
            "com.google.javascript.jscomp.ScopedAliases.AliasedTypeNode.applyAlias()": {
                "autofl_rank": 205
            }
        },
        "Closure_17": {
            "com.google.javascript.jscomp.TypedScopeCreator.AbstractScopeBuilder.getDeclaredType(java.lang.String, com.google.javascript.rhino.JSDocInfo, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 406
            }
        },
        "Closure_18": {
            "com.google.javascript.jscomp.Compiler.parseInputs()": {
                "autofl_rank": 156
            }
        },
        "Closure_19": {
            "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.declareNameInScope(com.google.javascript.jscomp.type.FlowScope, com.google.javascript.rhino.Node, com.google.javascript.rhino.jstype.JSType)": {
                "autofl_rank": 492
            }
        },
        "Closure_2": {
            "com.google.javascript.jscomp.TypeCheck.checkInterfaceConflictProperties(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, java.lang.String, java.util.HashMap<java.lang.String, com.google.javascript.rhino.jstype.ObjectType>, java.util.HashMap<java.lang.String, com.google.javascript.rhino.jstype.ObjectType>, com.google.javascript.rhino.jstype.ObjectType)": {
                "autofl_rank": 1
            }
        },
        "Closure_20": {
            "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryFoldSimpleFunctionCall(com.google.javascript.rhino.Node)": {
                "autofl_rank": 253
            }
        },
        "Closure_21": {
            "com.google.javascript.jscomp.CheckSideEffects.visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 72
            }
        },
        "Closure_22": {
            "com.google.javascript.jscomp.CheckSideEffects.visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 1
            }
        },
        "Closure_23": {
            "com.google.javascript.jscomp.PeepholeFoldConstants.tryFoldArrayAccess(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 174
            }
        },
        "Closure_24": {
            "com.google.javascript.jscomp.ScopedAliases.Traversal.findAliases(com.google.javascript.jscomp.NodeTraversal)": {
                "autofl_rank": 1
            }
        },
        "Closure_25": {
            "com.google.javascript.jscomp.TypeInference.traverseNew(com.google.javascript.rhino.Node, com.google.javascript.jscomp.type.FlowScope)": {
                "autofl_rank": 311
            }
        },
        "Closure_26": {
            "com.google.javascript.jscomp.ProcessCommonJSModules.ProcessCommonJsModulesCallback.emitOptionalModuleExportsOverride(com.google.javascript.rhino.Node, java.lang.String)": {
                "autofl_rank": 210
            }
        },
        "Closure_27": {
            "com.google.javascript.rhino.IR.tryCatch(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 4
            },
            "com.google.javascript.rhino.IR.tryFinally(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 1
            }
        },
        "Closure_28": {},
        "Closure_29": {
            "com.google.javascript.jscomp.InlineObjectLiterals.InliningBehavior.isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>)": {
                "autofl_rank": 216
            }
        },
        "Closure_3": {
            "com.google.javascript.jscomp.FlowSensitiveInlineVariables.Candidate.canInline()": {
                "autofl_rank": 1
            },
            "com.google.javascript.jscomp.FlowSensitiveInlineVariables.enterScope(com.google.javascript.jscomp.NodeTraversal)": {
                "autofl_rank": 287
            },
            "com.google.javascript.jscomp.FlowSensitiveInlineVariables.Candidate.Anonymous-fa31263c-4296-4366-a927-32a8b4375e08.apply(com.google.javascript.rhino.Node)": {
                "autofl_rank": 281
            }
        },
        "Closure_30": {
            "com.google.javascript.jscomp.MustBeReachingVariableDef.dependsOnOuterScopeVars(java.lang.String, com.google.javascript.rhino.Node)": {
                "autofl_rank": 296
            },
            "com.google.javascript.jscomp.MustBeReachingVariableDef.Anonymous-10fcd747-9dc9-43b5-bec3-6ac0d668acaf.visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 284
            },
            "com.google.javascript.jscomp.FlowSensitiveInlineVariables.process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 244
            }
        },
        "Closure_31": {
            "com.google.javascript.jscomp.Compiler.parseInputs()": {
                "autofl_rank": 197
            }
        },
        "Closure_32": {
            "com.google.javascript.jscomp.parsing.JsDocInfoParser.extractMultilineTextualBlock(com.google.javascript.jscomp.parsing.JsDocToken, com.google.javascript.jscomp.parsing.JsDocInfoParser.WhitespaceOption)": {
                "autofl_rank": 13
            }
        },
        "Closure_33": {
            "com.google.javascript.rhino.jstype.PrototypeObjectType.matchConstraint(com.google.javascript.rhino.jstype.ObjectType)": {
                "autofl_rank": 1022
            }
        },
        "Closure_34": {
            "com.google.javascript.jscomp.CodeGenerator.add(com.google.javascript.rhino.Node, com.google.javascript.jscomp.CodeGenerator.Context)": {
                "autofl_rank": 5
            }
        },
        "Closure_35": {
            "com.google.javascript.jscomp.TypeInference.inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType, com.google.javascript.rhino.jstype.JSType)": {
                "autofl_rank": 384
            }
        },
        "Closure_36": {
            "com.google.javascript.jscomp.InlineVariables.InliningBehavior.canInline(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference, com.google.javascript.jscomp.ReferenceCollectingCallback.Reference, com.google.javascript.jscomp.ReferenceCollectingCallback.Reference)": {
                "autofl_rank": 724
            }
        },
        "Closure_37": {
            "com.google.javascript.jscomp.parsing.IRFactory.TransformDispatcher.processFunctionNode(com.google.javascript.rhino.head.ast.FunctionNode)": {
                "autofl_rank": 223
            },
            "com.google.javascript.jscomp.NodeTraversal.traverseFunction(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 154
            }
        },
        "Closure_38": {
            "com.google.javascript.jscomp.CodeConsumer.addNumber(double)": {
                "autofl_rank": 26
            }
        },
        "Closure_39": {
            "com.google.javascript.rhino.jstype.PrototypeObjectType.toStringHelper(boolean)": {
                "autofl_rank": 18
            }
        },
        "Closure_4": {
            "com.google.javascript.rhino.jstype.NamedType.resolveInternal(com.google.javascript.rhino.ErrorReporter, com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>)": {
                "autofl_rank": 877
            }
        },
        "Closure_40": {
            "com.google.javascript.jscomp.NameAnalyzer.FindDeclarationsAndSetters.visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 200
            }
        },
        "Closure_41": {
            "com.google.javascript.jscomp.FunctionTypeBuilder.inferParameterTypes(com.google.javascript.rhino.Node, com.google.javascript.rhino.JSDocInfo)": {
                "autofl_rank": 162
            },
            "com.google.javascript.jscomp.FunctionTypeBuilder.inferFromOverriddenFunction(com.google.javascript.rhino.jstype.FunctionType, com.google.javascript.rhino.Node)": {
                "autofl_rank": 160
            }
        },
        "Closure_42": {
            "com.google.javascript.jscomp.parsing.IRFactory.TransformDispatcher.processForInLoop(com.google.javascript.rhino.head.ast.ForInLoop)": {
                "autofl_rank": 20
            }
        },
        "Closure_43": {
            "com.google.javascript.jscomp.TypedScopeCreator.AbstractScopeBuilder.attachLiteralTypes(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node)": {
                "autofl_rank": 418
            },
            "com.google.javascript.jscomp.TypedScopeCreator.AbstractScopeBuilder.visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 441
            }
        },
        "Closure_44": {
            "com.google.javascript.jscomp.CodeConsumer.add(java.lang.String)": {
                "autofl_rank": 7
            }
        },
        "Closure_45": {
            "com.google.javascript.jscomp.RemoveUnusedVars.interpretAssigns()": {
                "autofl_rank": 324
            },
            "com.google.javascript.jscomp.RemoveUnusedVars.Assign.Assign(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, boolean)": {
                "autofl_rank": 317
            }
        },
        "Closure_46": {
            "com.google.javascript.rhino.jstype.RecordType.getLeastSupertype(com.google.javascript.rhino.jstype.JSType)": {
                "autofl_rank": 1
            }
        },
        "Closure_47": {
            "com.google.debugging.sourcemap.SourceMapConsumerV3.getOriginalMappingForEntry(com.google.debugging.sourcemap.SourceMapConsumerV3.Entry)": {
                "autofl_rank": 678
            },
            "com.google.javascript.jscomp.SourceMap.addMapping(com.google.javascript.rhino.Node, com.google.debugging.sourcemap.FilePosition, com.google.debugging.sourcemap.FilePosition)": {
                "autofl_rank": 352
            }
        },
        "Closure_48": {
            "com.google.javascript.jscomp.TypedScopeCreator.AbstractScopeBuilder.maybeDeclareQualifiedName(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.JSDocInfo, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 410
            }
        },
        "Closure_49": {
            "com.google.javascript.jscomp.MakeDeclaredNamesUnique.visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 135
            },
            "com.google.javascript.jscomp.MakeDeclaredNamesUnique.enterScope(com.google.javascript.jscomp.NodeTraversal)": {
                "autofl_rank": 130
            },
            "com.google.javascript.jscomp.MakeDeclaredNamesUnique.shouldTraverse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 134
            }
        },
        "Closure_5": {
            "com.google.javascript.jscomp.InlineObjectLiterals.InliningBehavior.isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>)": {
                "autofl_rank": 214
            }
        },
        "Closure_50": {
            "com.google.javascript.jscomp.PeepholeReplaceKnownMethods.tryFoldArrayJoin(com.google.javascript.rhino.Node)": {
                "autofl_rank": 234
            }
        },
        "Closure_51": {
            "com.google.javascript.jscomp.CodeConsumer.addNumber(double)": {
                "autofl_rank": 33
            }
        },
        "Closure_52": {
            "com.google.javascript.jscomp.CodeGenerator.isSimpleNumber(java.lang.String)": {
                "autofl_rank": 50
            }
        },
        "Closure_53": {
            "com.google.javascript.jscomp.InlineObjectLiterals.InliningBehavior.replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var, com.google.javascript.jscomp.ReferenceCollectingCallback.Reference, java.util.Map<java.lang.String, java.lang.String>)": {
                "autofl_rank": 1
            }
        },
        "Closure_54": {
            "com.google.javascript.jscomp.TypedScopeCreator.AbstractScopeBuilder.maybeDeclareQualifiedName(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.JSDocInfo, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 370
            },
            "com.google.javascript.rhino.jstype.FunctionType.setPrototypeBasedOn(com.google.javascript.rhino.jstype.ObjectType)": {
                "autofl_rank": 667
            },
            "com.google.javascript.rhino.jstype.FunctionType.setPrototype(com.google.javascript.rhino.jstype.PrototypeObjectType)": {
                "autofl_rank": 666
            }
        },
        "Closure_55": {
            "com.google.javascript.jscomp.FunctionRewriter.isReduceableFunctionExpression(com.google.javascript.rhino.Node)": {
                "autofl_rank": 193
            }
        },
        "Closure_56": {
            "com.google.javascript.jscomp.SourceFile.getLine(int)": {
                "autofl_rank": 6
            }
        },
        "Closure_57": {
            "com.google.javascript.jscomp.ClosureCodingConvention.extractClassNameIfGoog(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Closure_58": {
            "com.google.javascript.jscomp.LiveVariablesAnalysis.computeGenKill(com.google.javascript.rhino.Node, java.util.BitSet, java.util.BitSet, boolean)": {
                "autofl_rank": 2
            }
        },
        "Closure_59": {
            "com.google.javascript.jscomp.Compiler.initOptions(com.google.javascript.jscomp.CompilerOptions)": {
                "autofl_rank": 340
            }
        },
        "Closure_6": {
            "com.google.javascript.jscomp.TypeValidator.expectCanAssignToPropertyOf(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.jstype.JSType, com.google.javascript.rhino.jstype.JSType, com.google.javascript.rhino.Node, java.lang.String)": {
                "autofl_rank": 336
            },
            "com.google.javascript.jscomp.TypeValidator.expectCanAssignTo(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.jstype.JSType, com.google.javascript.rhino.jstype.JSType, java.lang.String)": {
                "autofl_rank": 335
            }
        },
        "Closure_60": {
            "com.google.javascript.jscomp.NodeUtil.getPureBooleanValue(com.google.javascript.rhino.Node)": {
                "autofl_rank": 1
            }
        },
        "Closure_61": {
            "com.google.javascript.jscomp.NodeUtil.functionCallHasSideEffects(com.google.javascript.rhino.Node, com.google.javascript.jscomp.AbstractCompiler)": {
                "autofl_rank": 178
            }
        },
        "Closure_62": {
            "com.google.javascript.jscomp.LightweightMessageFormatter.format(com.google.javascript.jscomp.JSError, boolean)": {
                "autofl_rank": 1
            }
        },
        "Closure_64": {
            "com.google.javascript.jscomp.Compiler.Anonymous-5770e25d-2a08-48b8-84d7-ffd9f0401730.call()": {
                "autofl_rank": 226
            },
            "com.google.javascript.jscomp.Compiler.toSource(com.google.javascript.rhino.Node, com.google.javascript.jscomp.SourceMap)": {
                "autofl_rank": 8
            }
        },
        "Closure_65": {
            "com.google.javascript.jscomp.CodeGenerator.strEscape(java.lang.String, char, java.lang.String, java.lang.String, java.lang.String, java.nio.charset.CharsetEncoder)": {
                "autofl_rank": 43
            }
        },
        "Closure_66": {
            "com.google.javascript.jscomp.TypeCheck.visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 236
            }
        },
        "Closure_67": {
            "com.google.javascript.jscomp.AnalyzePrototypeProperties.ProcessProperties.isPrototypePropertyAssign(com.google.javascript.rhino.Node)": {
                "autofl_rank": 20
            }
        },
        "Closure_68": {
            "com.google.javascript.jscomp.parsing.JsDocInfoParser.parse()": {
                "autofl_rank": 1
            },
            "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseFunctionType(com.google.javascript.jscomp.parsing.JsDocToken)": {
                "autofl_rank": 18
            },
            "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseBasicTypeExpression(com.google.javascript.jscomp.parsing.JsDocToken)": {
                "autofl_rank": 17
            }
        },
        "Closure_69": {
            "com.google.javascript.jscomp.TypeCheck.visitCall(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node)": {
                "autofl_rank": 290
            }
        },
        "Closure_7": {
            "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor.caseObjectType(com.google.javascript.rhino.jstype.ObjectType)": {
                "autofl_rank": 110
            }
        },
        "Closure_70": {
            "com.google.javascript.jscomp.TypedScopeCreator.LocalScopeBuilder.declareArguments(com.google.javascript.rhino.Node)": {
                "autofl_rank": 305
            }
        },
        "Closure_71": {
            "com.google.javascript.jscomp.CheckAccessControls.checkPropertyVisibility(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 43
            }
        },
        "Closure_72": {
            "com.google.javascript.jscomp.FunctionToBlockMutator.makeLocalNamesUnique(com.google.javascript.rhino.Node, boolean)": {
                "autofl_rank": 197
            }
        },
        "Closure_73": {
            "com.google.javascript.jscomp.CodeGenerator.strEscape(java.lang.String, char, java.lang.String, java.lang.String, java.lang.String, java.nio.charset.CharsetEncoder)": {
                "autofl_rank": 48
            }
        },
        "Closure_74": {
            "com.google.javascript.jscomp.PeepholeFoldConstants.tryFoldComparison(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 161
            }
        },
        "Closure_75": {
            "com.google.javascript.jscomp.NodeUtil.isStrWhiteSpaceChar(int)": {
                "autofl_rank": 176
            },
            "com.google.javascript.jscomp.NodeUtil.getStringNumberValue(java.lang.String)": {
                "autofl_rank": 174
            }
        },
        "Closure_76": {
            "com.google.javascript.jscomp.DeadAssignmentsElimination.isVariableStillLiveWithinExpression(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, java.lang.String)": {
                "autofl_rank": 163
            },
            "com.google.javascript.jscomp.DeadAssignmentsElimination.isVariableReadBeforeKill(com.google.javascript.rhino.Node, java.lang.String)": {
                "autofl_rank": 162
            }
        },
        "Closure_77": {
            "com.google.javascript.jscomp.CodeGenerator.strEscape(java.lang.String, char, java.lang.String, java.lang.String, java.lang.String, java.nio.charset.CharsetEncoder)": {
                "autofl_rank": 37
            }
        },
        "Closure_78": {
            "com.google.javascript.jscomp.PeepholeFoldConstants.performArithmeticOp(int, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 1
            }
        },
        "Closure_79": {
            "com.google.javascript.jscomp.VarCheck.createSynthesizedExternVar(java.lang.String)": {
                "autofl_rank": 404
            },
            "com.google.javascript.jscomp.Normalize.process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 470
            }
        },
        "Closure_8": {
            "com.google.javascript.jscomp.CollapseVariableDeclarations.GatherCollapses.canBeRedeclared(com.google.javascript.rhino.Node, com.google.javascript.jscomp.Scope)": {
                "autofl_rank": 105
            }
        },
        "Closure_80": {
            "com.google.javascript.jscomp.NodeUtil.evaluatesToLocalValue(com.google.javascript.rhino.Node, com.google.common.base.Predicate<com.google.javascript.rhino.Node>)": {
                "autofl_rank": 195
            },
            "com.google.javascript.jscomp.NodeUtil.isBooleanResultHelper(com.google.javascript.rhino.Node)": {
                "autofl_rank": 193
            }
        },
        "Closure_81": {
            "com.google.javascript.jscomp.parsing.IRFactory.TransformDispatcher.processFunctionNode(com.google.javascript.jscomp.mozilla.rhino.ast.FunctionNode)": {
                "autofl_rank": 15
            }
        },
        "Closure_82": {
            "com.google.javascript.rhino.jstype.JSType.isEmptyType()": {
                "autofl_rank": 1
            }
        },
        "Closure_83": {
            "com.google.javascript.jscomp.CommandLineRunner.Flags.BooleanOptionHandler.parseArguments(org.kohsuke.args4j.spi.Parameters)": {
                "autofl_rank": 9
            }
        },
        "Closure_84": {
            "com.google.javascript.jscomp.parsing.IRFactory.TransformDispatcher.processAssignment(com.google.javascript.jscomp.mozilla.rhino.ast.Assignment)": {
                "autofl_rank": 13
            }
        },
        "Closure_85": {
            "com.google.javascript.jscomp.UnreachableCodeElimination.tryRemoveUnconditionalBranching(com.google.javascript.rhino.Node)": {
                "autofl_rank": 3
            },
            "com.google.javascript.jscomp.UnreachableCodeElimination.computeFollowing(com.google.javascript.rhino.Node)": {
                "autofl_rank": 187
            }
        },
        "Closure_86": {
            "com.google.javascript.jscomp.NodeUtil.evaluatesToLocalValue(com.google.javascript.rhino.Node, com.google.common.base.Predicate<com.google.javascript.rhino.Node>)": {
                "autofl_rank": 7
            }
        },
        "Closure_87": {
            "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.isFoldableExpressBlock(com.google.javascript.rhino.Node)": {
                "autofl_rank": 182
            }
        },
        "Closure_88": {
            "com.google.javascript.jscomp.DeadAssignmentsElimination.isVariableReadBeforeKill(com.google.javascript.rhino.Node, java.lang.String)": {
                "autofl_rank": 151
            }
        },
        "Closure_89": {
            "com.google.javascript.jscomp.GlobalNamespace.Name.canCollapseUnannotatedChildNames()": {
                "autofl_rank": 159
            },
            "com.google.javascript.jscomp.CollapseProperties.updateSimpleDeclaration(java.lang.String, com.google.javascript.jscomp.GlobalNamespace.Name, com.google.javascript.jscomp.GlobalNamespace.Ref)": {
                "autofl_rank": 620
            }
        },
        "Closure_9": {
            "com.google.javascript.jscomp.ProcessCommonJSModules.normalizeSourceName(java.lang.String)": {
                "autofl_rank": 2
            }
        },
        "Closure_90": {
            "com.google.javascript.jscomp.FunctionTypeBuilder.ThisTypeValidator.apply(com.google.javascript.rhino.jstype.JSType)": {
                "autofl_rank": 141
            },
            "com.google.javascript.rhino.jstype.FunctionType.resolveInternal(com.google.javascript.rhino.ErrorReporter, com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>)": {
                "autofl_rank": 698
            }
        },
        "Closure_91": {
            "com.google.javascript.jscomp.CheckGlobalThis.shouldTraverse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 1
            }
        },
        "Closure_92": {
            "com.google.javascript.jscomp.ProcessClosurePrimitives.ProvidedName.replace()": {
                "autofl_rank": 1
            }
        },
        "Closure_94": {
            "com.google.javascript.jscomp.NodeUtil.isValidDefineValue(com.google.javascript.rhino.Node, java.util.Set<java.lang.String>)": {
                "autofl_rank": 76
            }
        },
        "Closure_95": {
            "com.google.javascript.jscomp.TypedScopeCreator.AbstractScopeBuilder.defineSlot(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.jstype.JSType, boolean)": {
                "autofl_rank": 290
            }
        },
        "Closure_96": {
            "com.google.javascript.jscomp.TypeCheck.visitParameterList(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.jstype.FunctionType)": {
                "autofl_rank": 2
            }
        },
        "Closure_97": {
            "com.google.javascript.jscomp.PeepholeFoldConstants.tryFoldShift(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 1
            }
        },
        "Closure_98": {
            "com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection.isAssignedOnceInLifetime()": {
                "autofl_rank": 261
            },
            "com.google.javascript.jscomp.ReferenceCollectingCallback.BasicBlock.BasicBlock(com.google.javascript.jscomp.ReferenceCollectingCallback.BasicBlock, com.google.javascript.rhino.Node)": {
                "autofl_rank": 242
            }
        },
        "Closure_99": {
            "com.google.javascript.jscomp.CheckGlobalThis.shouldTraverse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)": {
                "autofl_rank": 11
            }
        },
        "Lang_1": {
            "org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Lang_10": {
            "org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder, java.lang.String, boolean)": {
                "autofl_rank": 21
            }
        },
        "Lang_11": {
            "org.apache.commons.lang3.RandomStringUtils.random(int, int, int, boolean, boolean, char[], java.util.Random)": {
                "autofl_rank": 1
            }
        },
        "Lang_12": {
            "org.apache.commons.lang3.RandomStringUtils.random(int, int, int, boolean, boolean, char[], java.util.Random)": {
                "autofl_rank": 1
            }
        },
        "Lang_13": {
            "org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.resolveClass(java.io.ObjectStreamClass)": {
                "autofl_rank": 1
            },
            "org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.ClassLoaderAwareObjectInputStream(java.io.InputStream, java.lang.ClassLoader)": {
                "autofl_rank": 6
            }
        },
        "Lang_14": {
            "org.apache.commons.lang3.StringUtils.equals(java.lang.CharSequence, java.lang.CharSequence)": {
                "autofl_rank": 1
            }
        },
        "Lang_15": {
            "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.Class<?>, java.lang.Class<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)": {
                "autofl_rank": 1
            },
            "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)": {
                "autofl_rank": 25
            }
        },
        "Lang_16": {
            "org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Lang_17": {
            "org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence, java.io.Writer)": {
                "autofl_rank": 7
            }
        },
        "Lang_18": {
            "org.apache.commons.lang3.time.FastDateFormat.parsePattern()": {
                "autofl_rank": 52
            }
        },
        "Lang_19": {
            "org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence, int, java.io.Writer)": {
                "autofl_rank": 1
            }
        },
        "Lang_20": {
            "org.apache.commons.lang3.StringUtils.join(java.lang.Object[], char, int, int)": {
                "autofl_rank": 1
            },
            "org.apache.commons.lang3.StringUtils.join(java.lang.Object[], java.lang.String, int, int)": {
                "autofl_rank": 5
            }
        },
        "Lang_21": {
            "org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar, java.util.Calendar)": {
                "autofl_rank": 1
            }
        },
        "Lang_22": {
            "org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, int)": {
                "autofl_rank": 2
            }
        },
        "Lang_23": {},
        "Lang_24": {
            "org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Lang_25": {},
        "Lang_26": {
            "org.apache.commons.lang3.time.FastDateFormat.format(java.util.Date)": {
                "autofl_rank": 1
            }
        },
        "Lang_27": {
            "org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Lang_28": {
            "org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence, int, java.io.Writer)": {
                "autofl_rank": 1
            }
        },
        "Lang_29": {
            "org.apache.commons.lang3.SystemUtils.toJavaVersionInt(java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Lang_3": {
            "org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Lang_30": {
            "org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence, char[])": {
                "autofl_rank": 2
            },
            "org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence, char[])": {
                "autofl_rank": 4
            },
            "org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence, char[])": {
                "autofl_rank": 1
            },
            "org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.String, java.lang.String)": {
                "autofl_rank": 3
            },
            "org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence, java.lang.String)": {
                "autofl_rank": 8
            },
            "org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence, char[])": {
                "autofl_rank": 10
            }
        },
        "Lang_31": {
            "org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence, char[])": {
                "autofl_rank": 1
            }
        },
        "Lang_32": {
            "org.apache.commons.lang3.builder.HashCodeBuilder.Anonymous-08bb65e2-404a-4824-8df5-cce668e43b77.initialValue()": {
                "autofl_rank": 14
            },
            "org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(java.lang.Object)": {
                "autofl_rank": 11
            },
            "org.apache.commons.lang3.builder.HashCodeBuilder.register(java.lang.Object)": {
                "autofl_rank": 12
            },
            "org.apache.commons.lang3.builder.HashCodeBuilder.unregister(java.lang.Object)": {
                "autofl_rank": 13
            }
        },
        "Lang_33": {
            "org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])": {
                "autofl_rank": 1
            }
        },
        "Lang_34": {
            "org.apache.commons.lang3.builder.ToStringStyle.getRegistry()": {
                "autofl_rank": 1
            },
            "org.apache.commons.lang3.builder.ToStringStyle.isRegistered(java.lang.Object)": {
                "autofl_rank": 28
            }
        },
        "Lang_35": {
            "org.apache.commons.lang3.ArrayUtils.add(T[], T)": {
                "autofl_rank": 1
            }
        },
        "Lang_36": {
            "org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)": {
                "autofl_rank": 1
            },
            "org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)": {
                "autofl_rank": 2
            }
        },
        "Lang_37": {
            "org.apache.commons.lang3.ArrayUtils.addAll(T[], T...)": {
                "autofl_rank": 1
            }
        },
        "Lang_38": {
            "org.apache.commons.lang3.time.FastDateFormat.format(java.util.Calendar, java.lang.StringBuffer)": {
                "autofl_rank": 1
            }
        },
        "Lang_39": {
            "org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String, java.lang.String[], java.lang.String[], boolean, int)": {
                "autofl_rank": 2
            }
        },
        "Lang_4": {
            "org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence, int, java.io.Writer)": {
                "autofl_rank": 2
            },
            "org.apache.commons.lang3.text.translate.LookupTranslator.LookupTranslator(java.lang.CharSequence[]...)": {
                "autofl_rank": 1
            }
        },
        "Lang_40": {
            "org.apache.commons.lang.StringUtils.containsIgnoreCase(java.lang.String, java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Lang_41": {
            "org.apache.commons.lang.ClassUtils.getShortClassName(java.lang.String)": {
                "autofl_rank": 1
            },
            "org.apache.commons.lang.ClassUtils.getPackageName(java.lang.String)": {
                "autofl_rank": 2
            }
        },
        "Lang_42": {
            "org.apache.commons.lang.Entities.escape(java.io.Writer, java.lang.String)": {
                "autofl_rank": 5
            }
        },
        "Lang_43": {
            "org.apache.commons.lang.text.ExtendedMessageFormat.appendQuotedString(java.lang.String, java.text.ParsePosition, java.lang.StringBuffer, boolean)": {
                "autofl_rank": 1
            }
        },
        "Lang_44": {
            "org.apache.commons.lang.NumberUtils.createNumber(java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Lang_45": {
            "org.apache.commons.lang.WordUtils.abbreviate(java.lang.String, int, int, java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Lang_46": {
            "org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(java.io.Writer, java.lang.String, boolean)": {
                "autofl_rank": 2
            },
            "org.apache.commons.lang.StringEscapeUtils.escapeJava(java.lang.String)": {
                "autofl_rank": 1
            },
            "org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(java.lang.String, boolean)": {
                "autofl_rank": 3
            }
        },
        "Lang_47": {
            "org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object, int, char)": {
                "autofl_rank": 1
            },
            "org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object, int, char)": {
                "autofl_rank": 3
            }
        },
        "Lang_48": {
            "org.apache.commons.lang.builder.EqualsBuilder.append(java.lang.Object, java.lang.Object)": {
                "autofl_rank": 1
            }
        },
        "Lang_49": {
            "org.apache.commons.lang.math.Fraction.reduce()": {
                "autofl_rank": 1
            }
        },
        "Lang_5": {
            "org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Lang_50": {
            "org.apache.commons.lang.time.FastDateFormat.getDateInstance(int, java.util.TimeZone, java.util.Locale)": {
                "autofl_rank": 24
            },
            "org.apache.commons.lang.time.FastDateFormat.getDateTimeInstance(int, int, java.util.TimeZone, java.util.Locale)": {
                "autofl_rank": 26
            }
        },
        "Lang_51": {
            "org.apache.commons.lang.BooleanUtils.toBoolean(java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Lang_52": {
            "org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(java.io.Writer, java.lang.String, boolean)": {
                "autofl_rank": 1
            }
        },
        "Lang_53": {
            "org.apache.commons.lang.time.DateUtils.modify(java.util.Calendar, int, boolean)": {
                "autofl_rank": 1
            }
        },
        "Lang_54": {
            "org.apache.commons.lang.LocaleUtils.toLocale(java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Lang_55": {
            "org.apache.commons.lang.time.StopWatch.stop()": {
                "autofl_rank": 3
            }
        },
        "Lang_56": {},
        "Lang_57": {
            "org.apache.commons.lang.LocaleUtils.isAvailableLocale(java.util.Locale)": {
                "autofl_rank": 1
            }
        },
        "Lang_58": {
            "org.apache.commons.lang.math.NumberUtils.createNumber(java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Lang_59": {
            "org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object, int, char)": {
                "autofl_rank": 1
            }
        },
        "Lang_6": {
            "org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence, java.io.Writer)": {
                "autofl_rank": 3
            }
        },
        "Lang_60": {
            "org.apache.commons.lang.text.StrBuilder.contains(char)": {
                "autofl_rank": 1
            }
        },
        "Lang_61": {
            "org.apache.commons.lang.text.StrBuilder.indexOf(java.lang.String, int)": {
                "autofl_rank": 3
            }
        },
        "Lang_62": {
            "org.apache.commons.lang.Entities.unescape(java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Lang_63": {
            "org.apache.commons.lang.time.DurationFormatUtils.formatPeriod(long, long, java.lang.String, boolean, java.util.TimeZone)": {
                "autofl_rank": 5
            },
            "org.apache.commons.lang.time.DurationFormatUtils.reduceAndCorrect(java.util.Calendar, java.util.Calendar, int, int)": {
                "autofl_rank": 2
            },
            "org.apache.commons.lang.time.DurationFormatUtils.format(org.apache.commons.lang.time.DurationFormatUtils.Token[], int, int, int, int, int, int, int, boolean)": {
                "autofl_rank": 6
            }
        },
        "Lang_64": {
            "org.apache.commons.lang.enums.ValuedEnum.compareTo(java.lang.Object)": {
                "autofl_rank": 1
            }
        },
        "Lang_65": {
            "org.apache.commons.lang.time.DateUtils.modify(java.util.Calendar, int, boolean)": {
                "autofl_rank": 2
            }
        },
        "Lang_7": {
            "org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)": {
                "autofl_rank": 1
            },
            "org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)": {
                "autofl_rank": 4
            }
        },
        "Lang_8": {
            "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule.appendTo(java.lang.StringBuffer, java.util.Calendar)": {
                "autofl_rank": 6
            },
            "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule.TimeZoneNameRule(java.util.TimeZone, java.util.Locale, int)": {
                "autofl_rank": 43
            }
        },
        "Lang_9": {
            "org.apache.commons.lang3.time.FastDateParser.init()": {
                "autofl_rank": 15
            }
        },
        "Math_1": {
            "org.apache.commons.math3.fraction.Fraction.Fraction(double, double, int, int)": {
                "autofl_rank": 24
            },
            "org.apache.commons.math3.fraction.BigFraction.BigFraction(double, double, int, int)": {
                "autofl_rank": 3
            }
        },
        "Math_10": {
            "org.apache.commons.math3.analysis.differentiation.DSCompiler.atan2(double[], int, double[], int, double[], int)": {
                "autofl_rank": 2
            }
        },
        "Math_100": {
            "org.apache.commons.math.estimation.AbstractEstimator.getCovariances(org.apache.commons.math.estimation.EstimationProblem)": {
                "autofl_rank": 1
            }
        },
        "Math_101": {
            "org.apache.commons.math.complex.ComplexFormat.parse(java.lang.String, java.text.ParsePosition)": {
                "autofl_rank": 1
            }
        },
        "Math_102": {
            "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(double[], long[])": {
                "autofl_rank": 1
            }
        },
        "Math_103": {
            "org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(double)": {
                "autofl_rank": 1
            }
        },
        "Math_104": {},
        "Math_105": {
            "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors()": {
                "autofl_rank": 1
            }
        },
        "Math_106": {
            "org.apache.commons.math.fraction.ProperFractionFormat.parse(java.lang.String, java.text.ParsePosition)": {
                "autofl_rank": 5
            }
        },
        "Math_11": {
            "org.apache.commons.math3.distribution.MultivariateNormalDistribution.density(double[])": {
                "autofl_rank": 1
            }
        },
        "Math_12": {},
        "Math_13": {
            "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.squareRoot(org.apache.commons.math3.linear.RealMatrix)": {
                "autofl_rank": 55
            }
        },
        "Math_14": {
            "org.apache.commons.math3.optim.nonlinear.vector.Weight.Weight(double[])": {
                "autofl_rank": 35
            }
        },
        "Math_15": {
            "org.apache.commons.math3.util.FastMath.pow(double, double)": {
                "autofl_rank": 1
            }
        },
        "Math_16": {
            "org.apache.commons.math3.util.FastMath.cosh(double)": {
                "autofl_rank": 1
            }
        },
        "Math_17": {
            "org.apache.commons.math3.dfp.Dfp.multiply(int)": {
                "autofl_rank": 4
            }
        },
        "Math_18": {
            "org.apache.commons.math3.optimization.direct.CMAESOptimizer.FitnessFunction.encode(double[])": {
                "autofl_rank": 115
            },
            "org.apache.commons.math3.optimization.direct.CMAESOptimizer.FitnessFunction.decode(double[])": {
                "autofl_rank": 114
            }
        },
        "Math_19": {
            "org.apache.commons.math3.optimization.direct.CMAESOptimizer.checkParameters()": {
                "autofl_rank": 12
            }
        },
        "Math_2": {
            "org.apache.commons.math3.distribution.HypergeometricDistribution.getNumericalMean()": {
                "autofl_rank": 7
            }
        },
        "Math_20": {
            "org.apache.commons.math3.optimization.direct.CMAESOptimizer.FitnessFunction.repairAndDecode(double[])": {
                "autofl_rank": 102
            }
        },
        "Math_21": {
            "org.apache.commons.math3.linear.RectangularCholeskyDecomposition.RectangularCholeskyDecomposition(org.apache.commons.math3.linear.RealMatrix, double)": {
                "autofl_rank": 1
            }
        },
        "Math_22": {
            "org.apache.commons.math3.distribution.UniformRealDistribution.isSupportUpperBoundInclusive()": {
                "autofl_rank": 2
            },
            "org.apache.commons.math3.distribution.FDistribution.isSupportLowerBoundInclusive()": {
                "autofl_rank": 1
            }
        },
        "Math_23": {
            "org.apache.commons.math3.optimization.univariate.BrentOptimizer.doOptimize()": {
                "autofl_rank": 2
            }
        },
        "Math_24": {
            "org.apache.commons.math3.optimization.univariate.BrentOptimizer.doOptimize()": {
                "autofl_rank": 2
            }
        },
        "Math_25": {
            "org.apache.commons.math3.optimization.fitting.HarmonicFitter.ParameterGuesser.guessAOmega()": {
                "autofl_rank": 1
            }
        },
        "Math_26": {
            "org.apache.commons.math3.fraction.Fraction.Fraction(double, double, int, int)": {
                "autofl_rank": 2
            }
        },
        "Math_27": {
            "org.apache.commons.math3.fraction.Fraction.percentageValue()": {
                "autofl_rank": 1
            }
        },
        "Math_28": {
            "org.apache.commons.math3.optimization.linear.SimplexSolver.getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau, int)": {
                "autofl_rank": 15
            }
        },
        "Math_29": {
            "org.apache.commons.math3.linear.OpenMapRealVector.ebeMultiply(org.apache.commons.math3.linear.RealVector)": {
                "autofl_rank": 38
            },
            "org.apache.commons.math3.linear.OpenMapRealVector.ebeDivide(org.apache.commons.math3.linear.RealVector)": {
                "autofl_rank": 39
            }
        },
        "Math_3": {
            "org.apache.commons.math3.util.MathArrays.linearCombination(double[], double[])": {
                "autofl_rank": 1
            }
        },
        "Math_30": {
            "org.apache.commons.math3.stat.inference.MannWhitneyUTest.calculateAsymptoticPValue(double, int, int)": {
                "autofl_rank": 1
            }
        },
        "Math_31": {
            "org.apache.commons.math3.util.ContinuedFraction.evaluate(double, double, int)": {
                "autofl_rank": 1
            }
        },
        "Math_32": {
            "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties()": {
                "autofl_rank": 1
            }
        },
        "Math_33": {
            "org.apache.commons.math3.optimization.linear.SimplexTableau.dropPhase1Objective()": {
                "autofl_rank": 28
            }
        },
        "Math_34": {
            "org.apache.commons.math3.genetics.ListPopulation.iterator()": {
                "autofl_rank": 1
            }
        },
        "Math_35": {
            "org.apache.commons.math3.genetics.ElitisticListPopulation.ElitisticListPopulation(java.util.List<org.apache.commons.math3.genetics.Chromosome>, int, double)": {
                "autofl_rank": 1
            },
            "org.apache.commons.math3.genetics.ElitisticListPopulation.ElitisticListPopulation(int, double)": {
                "autofl_rank": 2
            }
        },
        "Math_36": {
            "org.apache.commons.math.fraction.BigFraction.floatValue()": {
                "autofl_rank": 2
            },
            "org.apache.commons.math.fraction.BigFraction.doubleValue()": {
                "autofl_rank": 7
            }
        },
        "Math_37": {
            "org.apache.commons.math.complex.Complex.tan()": {
                "autofl_rank": 2
            },
            "org.apache.commons.math.complex.Complex.tanh()": {
                "autofl_rank": 1
            }
        },
        "Math_38": {
            "org.apache.commons.math.optimization.direct.BOBYQAOptimizer.prelim(double[], double[])": {
                "autofl_rank": 32
            }
        },
        "Math_39": {
            "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(org.apache.commons.math.ode.ExpandableStatefulODE, double)": {
                "autofl_rank": 4
            }
        },
        "Math_4": {
            "org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(org.apache.commons.math3.geometry.euclidean.threed.SubLine, boolean)": {
                "autofl_rank": 14
            }
        },
        "Math_40": {
            "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.doSolve()": {
                "autofl_rank": 1
            }
        },
        "Math_41": {
            "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(double[], double[], double, int, int)": {
                "autofl_rank": 3
            }
        },
        "Math_42": {
            "org.apache.commons.math.optimization.linear.SimplexTableau.getSolution()": {
                "autofl_rank": 13
            }
        },
        "Math_43": {
            "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(double)": {
                "autofl_rank": 4
            }
        },
        "Math_44": {
            "org.apache.commons.math.ode.AbstractIntegrator.acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator, double[], double[], double)": {
                "autofl_rank": 44
            }
        },
        "Math_45": {
            "org.apache.commons.math.linear.OpenMapRealMatrix.OpenMapRealMatrix(int, int)": {
                "autofl_rank": 1
            }
        },
        "Math_46": {
            "org.apache.commons.math.complex.Complex.divide(org.apache.commons.math.complex.Complex)": {
                "autofl_rank": 2
            }
        },
        "Math_47": {
            "org.apache.commons.math.complex.Complex.divide(org.apache.commons.math.complex.Complex)": {
                "autofl_rank": 1
            },
            "org.apache.commons.math.complex.Complex.Complex(double, double)": {
                "autofl_rank": 8
            }
        },
        "Math_48": {
            "org.apache.commons.math.analysis.solvers.BaseSecantSolver.doSolve()": {
                "autofl_rank": 9
            }
        },
        "Math_49": {
            "org.apache.commons.math.linear.OpenMapRealVector.ebeMultiply(org.apache.commons.math.linear.RealVector)": {
                "autofl_rank": 1
            }
        },
        "Math_5": {
            "org.apache.commons.math3.complex.Complex.reciprocal()": {
                "autofl_rank": 1
            }
        },
        "Math_50": {
            "org.apache.commons.math.analysis.solvers.BaseSecantSolver.doSolve()": {
                "autofl_rank": 8
            }
        },
        "Math_51": {
            "org.apache.commons.math.analysis.solvers.BaseSecantSolver.doSolve()": {
                "autofl_rank": 18
            }
        },
        "Math_52": {
            "org.apache.commons.math.geometry.euclidean.threed.Rotation.Rotation(org.apache.commons.math.geometry.euclidean.threed.Vector3D, org.apache.commons.math.geometry.euclidean.threed.Vector3D, org.apache.commons.math.geometry.euclidean.threed.Vector3D, org.apache.commons.math.geometry.euclidean.threed.Vector3D)": {
                "autofl_rank": 1
            }
        },
        "Math_53": {
            "org.apache.commons.math.complex.Complex.add(org.apache.commons.math.complex.Complex)": {
                "autofl_rank": 1
            }
        },
        "Math_54": {
            "org.apache.commons.math.dfp.Dfp.toDouble()": {
                "autofl_rank": 1
            }
        },
        "Math_55": {
            "org.apache.commons.math.geometry.Vector3D.crossProduct(org.apache.commons.math.geometry.Vector3D, org.apache.commons.math.geometry.Vector3D)": {
                "autofl_rank": 1
            }
        },
        "Math_56": {
            "org.apache.commons.math.util.MultidimensionalCounter.getCounts(int)": {
                "autofl_rank": 1
            }
        },
        "Math_57": {
            "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.chooseInitialCenters(java.util.Collection<T>, int, java.util.Random)": {
                "autofl_rank": 6
            }
        },
        "Math_58": {
            "org.apache.commons.math.optimization.fitting.GaussianFitter.fit()": {
                "autofl_rank": 1
            }
        },
        "Math_59": {
            "org.apache.commons.math.util.FastMath.max(float, float)": {
                "autofl_rank": 1
            }
        },
        "Math_6": {
            "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.doOptimize()": {
                "autofl_rank": 129
            },
            "org.apache.commons.math3.optim.BaseOptimizer.BaseOptimizer(org.apache.commons.math3.optim.ConvergenceChecker<PAIR>)": {
                "autofl_rank": 12
            },
            "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.doOptimize()": {
                "autofl_rank": 209
            },
            "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.doOptimize()": {
                "autofl_rank": 353
            },
            "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.doOptimize()": {
                "autofl_rank": 1
            },
            "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.doOptimize()": {
                "autofl_rank": 363
            },
            "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.doOptimize()": {
                "autofl_rank": 358
            }
        },
        "Math_60": {
            "org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(double)": {
                "autofl_rank": 3
            }
        },
        "Math_61": {
            "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double, double, int)": {
                "autofl_rank": 2
            }
        },
        "Math_62": {
            "org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer.optimize(FUNC, org.apache.commons.math.optimization.GoalType, double, double)": {
                "autofl_rank": 2
            },
            "org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer.optimize(FUNC, org.apache.commons.math.optimization.GoalType, double, double, double)": {
                "autofl_rank": 1
            }
        },
        "Math_63": {
            "org.apache.commons.math.util.MathUtils.equals(double, double)": {
                "autofl_rank": 1
            }
        },
        "Math_64": {
            "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.doOptimize()": {
                "autofl_rank": 20
            }
        },
        "Math_65": {
            "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.getChiSquare()": {
                "autofl_rank": 32
            },
            "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.getRMS()": {
                "autofl_rank": 6
            }
        },
        "Math_66": {
            "org.apache.commons.math.optimization.univariate.BrentOptimizer.localMin(boolean, org.apache.commons.math.analysis.UnivariateRealFunction, org.apache.commons.math.optimization.GoalType, double, double, double, double, double)": {
                "autofl_rank": 11
            },
            "org.apache.commons.math.optimization.univariate.BrentOptimizer.BrentOptimizer()": {
                "autofl_rank": 17
            },
            "org.apache.commons.math.optimization.univariate.BrentOptimizer.optimize(org.apache.commons.math.analysis.UnivariateRealFunction, org.apache.commons.math.optimization.GoalType, double, double, double)": {
                "autofl_rank": 1
            },
            "org.apache.commons.math.optimization.univariate.BrentOptimizer.optimize(org.apache.commons.math.analysis.UnivariateRealFunction, org.apache.commons.math.optimization.GoalType, double, double)": {
                "autofl_rank": 2
            }
        },
        "Math_67": {
            "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer.getResult()": {
                "autofl_rank": 1
            }
        },
        "Math_68": {
            "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.doOptimize()": {
                "autofl_rank": 19
            },
            "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.LevenbergMarquardtOptimizer()": {
                "autofl_rank": 16
            }
        },
        "Math_69": {
            "org.apache.commons.math.stat.correlation.PearsonsCorrelation.getCorrelationPValues()": {
                "autofl_rank": 1
            }
        },
        "Math_7": {
            "org.apache.commons.math3.ode.AbstractIntegrator.acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator, double[], double[], double)": {
                "autofl_rank": 33
            }
        },
        "Math_70": {
            "org.apache.commons.math.analysis.solvers.BisectionSolver.solve(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, double)": {
                "autofl_rank": 2
            }
        },
        "Math_71": {
            "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations, double, double[], double, double[])": {
                "autofl_rank": 54
            },
            "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations, double, double[], double, double[])": {
                "autofl_rank": 53
            }
        },
        "Math_72": {
            "org.apache.commons.math.analysis.solvers.BrentSolver.solve(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, double)": {
                "autofl_rank": 1
            }
        },
        "Math_73": {
            "org.apache.commons.math.analysis.solvers.BrentSolver.solve(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, double)": {
                "autofl_rank": 1
            }
        },
        "Math_74": {
            "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations, double, double[], double, double[])": {
                "autofl_rank": 11
            }
        },
        "Math_75": {
            "org.apache.commons.math.stat.Frequency.getPct(java.lang.Object)": {
                "autofl_rank": 1
            }
        },
        "Math_76": {
            "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU()": {
                "autofl_rank": 4
            },
            "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV()": {
                "autofl_rank": 18
            }
        },
        "Math_77": {
            "org.apache.commons.math.linear.OpenMapRealVector.getLInfNorm()": {
                "autofl_rank": 2
            },
            "org.apache.commons.math.linear.ArrayRealVector.getLInfNorm()": {
                "autofl_rank": 1
            }
        },
        "Math_78": {
            "org.apache.commons.math.ode.events.EventState.evaluateStep(org.apache.commons.math.ode.sampling.StepInterpolator)": {
                "autofl_rank": 2
            }
        },
        "Math_79": {
            "org.apache.commons.math.util.MathUtils.distance(int[], int[])": {
                "autofl_rank": 11
            }
        },
        "Math_8": {
            "org.apache.commons.math3.distribution.DiscreteDistribution.sample(int)": {
                "autofl_rank": 3
            }
        },
        "Math_80": {
            "org.apache.commons.math.linear.EigenDecompositionImpl.flipIfWarranted(int, int)": {
                "autofl_rank": 50
            }
        },
        "Math_81": {
            "org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(int, int, int)": {
                "autofl_rank": 30
            },
            "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(int)": {
                "autofl_rank": 9
            },
            "org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles()": {
                "autofl_rank": 5
            }
        },
        "Math_82": {
            "org.apache.commons.math.optimization.linear.SimplexSolver.getPivotRow(int, org.apache.commons.math.optimization.linear.SimplexTableau)": {
                "autofl_rank": 1
            }
        },
        "Math_83": {
            "org.apache.commons.math.optimization.linear.SimplexTableau.getSolution()": {
                "autofl_rank": 22
            },
            "org.apache.commons.math.optimization.linear.SimplexTableau.getBasicRow(int, boolean)": {
                "autofl_rank": 57
            }
        },
        "Math_84": {
            "org.apache.commons.math.optimization.direct.MultiDirectional.iterateSimplex(java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair>)": {
                "autofl_rank": 2
            }
        },
        "Math_85": {
            "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, double, int)": {
                "autofl_rank": 5
            }
        },
        "Math_86": {
            "org.apache.commons.math.linear.CholeskyDecompositionImpl.CholeskyDecompositionImpl(org.apache.commons.math.linear.RealMatrix, double, double)": {
                "autofl_rank": 5
            }
        },
        "Math_87": {
            "org.apache.commons.math.optimization.linear.SimplexTableau.getBasicRow(int)": {
                "autofl_rank": 60
            }
        },
        "Math_88": {
            "org.apache.commons.math.optimization.linear.SimplexTableau.getSolution()": {
                "autofl_rank": 18
            }
        },
        "Math_89": {
            "org.apache.commons.math.stat.Frequency.addValue(java.lang.Object)": {
                "autofl_rank": 1
            }
        },
        "Math_9": {
            "org.apache.commons.math3.geometry.euclidean.threed.Line.revert()": {
                "autofl_rank": 1
            }
        },
        "Math_90": {
            "org.apache.commons.math.stat.Frequency.addValue(java.lang.Object)": {
                "autofl_rank": 1
            }
        },
        "Math_91": {
            "org.apache.commons.math.fraction.Fraction.compareTo(org.apache.commons.math.fraction.Fraction)": {
                "autofl_rank": 1
            }
        },
        "Math_92": {
            "org.apache.commons.math.util.MathUtils.binomialCoefficient(int, int)": {
                "autofl_rank": 1
            },
            "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int, int)": {
                "autofl_rank": 2
            },
            "org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int, int)": {
                "autofl_rank": 5
            }
        },
        "Math_93": {
            "org.apache.commons.math.util.MathUtils.factorial(int)": {
                "autofl_rank": 2
            },
            "org.apache.commons.math.util.MathUtils.factorialDouble(int)": {
                "autofl_rank": 1
            },
            "org.apache.commons.math.util.MathUtils.factorialLog(int)": {
                "autofl_rank": 3
            }
        },
        "Math_94": {
            "org.apache.commons.math.util.MathUtils.gcd(int, int)": {
                "autofl_rank": 1
            }
        },
        "Math_95": {
            "org.apache.commons.math.distribution.FDistributionImpl.getInitialDomain(double)": {
                "autofl_rank": 12
            }
        },
        "Math_96": {
            "org.apache.commons.math.complex.Complex.equals(java.lang.Object)": {
                "autofl_rank": 2
            }
        },
        "Math_97": {
            "org.apache.commons.math.analysis.BrentSolver.solve(double, double)": {
                "autofl_rank": 1
            }
        },
        "Math_98": {
            "org.apache.commons.math.linear.RealMatrixImpl.operate(double[])": {
                "autofl_rank": 2
            },
            "org.apache.commons.math.linear.BigMatrixImpl.operate(java.math.BigDecimal[])": {
                "autofl_rank": 1
            }
        },
        "Math_99": {
            "org.apache.commons.math.util.MathUtils.lcm(int, int)": {
                "autofl_rank": 3
            },
            "org.apache.commons.math.util.MathUtils.gcd(int, int)": {
                "autofl_rank": 1
            }
        },
        "Time_1": {
            "org.joda.time.Partial.Partial(org.joda.time.DateTimeFieldType[], int[], org.joda.time.Chronology)": {
                "autofl_rank": 1
            },
            "org.joda.time.field.UnsupportedDurationField.compareTo(org.joda.time.DurationField)": {
                "autofl_rank": 17
            }
        },
        "Time_10": {
            "org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial, org.joda.time.ReadablePeriod)": {
                "autofl_rank": 11
            }
        },
        "Time_11": {},
        "Time_12": {
            "org.joda.time.LocalDateTime.fromCalendarFields(java.util.Calendar)": {
                "autofl_rank": 4
            },
            "org.joda.time.LocalDate.fromCalendarFields(java.util.Calendar)": {
                "autofl_rank": 424
            },
            "org.joda.time.LocalDateTime.fromDateFields(java.util.Date)": {
                "autofl_rank": 1
            },
            "org.joda.time.LocalDate.fromDateFields(java.util.Date)": {
                "autofl_rank": 2
            }
        },
        "Time_13": {
            "org.joda.time.format.PeriodFormatterBuilder.FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod, java.util.Locale)": {
                "autofl_rank": 278
            },
            "org.joda.time.format.PeriodFormatterBuilder.FieldFormatter.printTo(java.lang.StringBuffer, org.joda.time.ReadablePeriod, java.util.Locale)": {
                "autofl_rank": 284
            }
        },
        "Time_14": {
            "org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial, int, int[], int)": {
                "autofl_rank": 9
            }
        },
        "Time_15": {
            "org.joda.time.field.FieldUtils.safeMultiply(long, int)": {
                "autofl_rank": 1
            }
        },
        "Time_16": {
            "org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant, java.lang.String, int)": {
                "autofl_rank": 1
            }
        },
        "Time_17": {
            "org.joda.time.DateTimeZone.adjustOffset(long, boolean)": {
                "autofl_rank": 1
            }
        },
        "Time_18": {
            "org.joda.time.chrono.GJChronology.getDateTimeMillis(int, int, int, int, int, int, int)": {
                "autofl_rank": 1
            }
        },
        "Time_19": {
            "org.joda.time.DateTimeZone.getOffsetFromLocal(long)": {
                "autofl_rank": 52
            }
        },
        "Time_2": {
            "org.joda.time.Partial.Partial(org.joda.time.DateTimeFieldType[], int[], org.joda.time.Chronology)": {
                "autofl_rank": 2
            },
            "org.joda.time.field.UnsupportedDurationField.compareTo(org.joda.time.DurationField)": {
                "autofl_rank": 11
            },
            "org.joda.time.Partial.with(org.joda.time.DateTimeFieldType, int)": {
                "autofl_rank": 1
            }
        },
        "Time_20": {
            "org.joda.time.format.DateTimeFormatterBuilder.TimeZoneId.parseInto(org.joda.time.format.DateTimeParserBucket, java.lang.String, int)": {
                "autofl_rank": 18
            }
        },
        "Time_22": {
            "org.joda.time.base.BasePeriod.BasePeriod(long)": {
                "autofl_rank": 76
            }
        },
        "Time_23": {
            "org.joda.time.DateTimeZone.getConvertedId(java.lang.String)": {
                "autofl_rank": 1
            }
        },
        "Time_24": {
            "org.joda.time.format.DateTimeParserBucket.computeMillis(boolean, java.lang.String)": {
                "autofl_rank": 22
            }
        },
        "Time_25": {
            "org.joda.time.DateTimeZone.getOffsetFromLocal(long)": {
                "autofl_rank": 2
            }
        },
        "Time_26": {
            "org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.set(long, int)": {
                "autofl_rank": 176
            }
        },
        "Time_27": {
            "org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List<java.lang.Object>, boolean, boolean)": {
                "autofl_rank": 5
            }
        },
        "Time_3": {
            "org.joda.time.MutableDateTime.addHours(int)": {
                "autofl_rank": 7
            },
            "org.joda.time.MutableDateTime.add(org.joda.time.DurationFieldType, int)": {
                "autofl_rank": 4
            },
            "org.joda.time.MutableDateTime.addYears(int)": {
                "autofl_rank": 1
            },
            "org.joda.time.MutableDateTime.addMonths(int)": {
                "autofl_rank": 5
            },
            "org.joda.time.MutableDateTime.addWeeks(int)": {
                "autofl_rank": 3
            },
            "org.joda.time.MutableDateTime.addDays(int)": {
                "autofl_rank": 2
            }
        },
        "Time_4": {
            "org.joda.time.Partial.with(org.joda.time.DateTimeFieldType, int)": {
                "autofl_rank": 1
            }
        },
        "Time_5": {
            "org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)": {
                "autofl_rank": 1
            }
        },
        "Time_6": {
            "org.joda.time.chrono.GJChronology.ImpreciseCutoverField.add(long, int)": {
                "autofl_rank": 300
            },
            "org.joda.time.chrono.GJChronology.getInstance(org.joda.time.DateTimeZone, org.joda.time.ReadableInstant, int)": {
                "autofl_rank": 18
            }
        },
        "Time_7": {
            "org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant, java.lang.String, int)": {
                "autofl_rank": 1
            }
        },
        "Time_8": {
            "org.joda.time.DateTimeZone.forOffsetHoursMinutes(int, int)": {
                "autofl_rank": 1
            }
        },
        "Time_9": {
            "org.joda.time.DateTimeZone.forOffsetHoursMinutes(int, int)": {
                "autofl_rank": 1
            },
            "org.joda.time.DateTimeZone.forOffsetMillis(int)": {
                "autofl_rank": 4
            }
        }
    },
    "confidence": {
        "Chart_1": 0.4,
        "Chart_10": 1.0,
        "Chart_11": 0.8,
        "Chart_12": 0.6,
        "Chart_13": 0.4,
        "Chart_14": 0.3,
        "Chart_15": 0.2,
        "Chart_16": 0.2,
        "Chart_17": 0.5,
        "Chart_18": 0.2,
        "Chart_19": 0.6,
        "Chart_2": 0.5,
        "Chart_20": 0.4,
        "Chart_21": 0.5,
        "Chart_22": 0.2,
        "Chart_23": 0.4,
        "Chart_24": 1.0,
        "Chart_25": 0.2,
        "Chart_26": 0.0,
        "Chart_3": 0.6,
        "Chart_4": 0.2,
        "Chart_5": 0.6,
        "Chart_6": 0.5,
        "Chart_7": 0.7,
        "Chart_8": 0.6,
        "Chart_9": 0.7,
        "Closure_1": 0.0,
        "Closure_10": 0.0,
        "Closure_100": 0.1,
        "Closure_101": 0.0,
        "Closure_102": 0.06666666666666667,
        "Closure_103": 0.2,
        "Closure_104": 0.2,
        "Closure_105": 0.2,
        "Closure_106": 0.2,
        "Closure_107": 0.0,
        "Closure_108": 0.6,
        "Closure_109": 0.26666666666666666,
        "Closure_11": 0.0,
        "Closure_110": 0.2,
        "Closure_111": 0.2,
        "Closure_112": 0.2,
        "Closure_113": 0.2,
        "Closure_114": 0.0,
        "Closure_115": 0.0,
        "Closure_116": 0.0,
        "Closure_117": 0.0,
        "Closure_118": 0.2,
        "Closure_119": 0.0,
        "Closure_12": 0.2,
        "Closure_120": 0.2,
        "Closure_121": 0.2,
        "Closure_122": 0.8,
        "Closure_123": 0.3,
        "Closure_124": 0.2,
        "Closure_125": 0.7,
        "Closure_126": 0.0,
        "Closure_127": 0.2,
        "Closure_128": 0.0,
        "Closure_129": 0.0,
        "Closure_13": 0.1,
        "Closure_130": 0.0,
        "Closure_131": 0.2,
        "Closure_132": 0.0,
        "Closure_133": 0.2,
        "Closure_14": 0.2,
        "Closure_15": 0.1,
        "Closure_16": 0.0,
        "Closure_17": 0.0,
        "Closure_18": 0.4,
        "Closure_19": 0.0,
        "Closure_2": 0.4,
        "Closure_20": 0.0,
        "Closure_21": 0.2,
        "Closure_22": 0.4,
        "Closure_23": 0.0,
        "Closure_24": 0.06666666666666667,
        "Closure_25": 0.0,
        "Closure_26": 0.0,
        "Closure_27": 0.4,
        "Closure_28": 0.2,
        "Closure_29": 0.2,
        "Closure_3": 0.2,
        "Closure_30": 0.0,
        "Closure_31": 0.0,
        "Closure_32": 0.2,
        "Closure_33": 0.2,
        "Closure_34": 0.06666666666666667,
        "Closure_35": 0.0,
        "Closure_36": 0.0,
        "Closure_37": 0.1,
        "Closure_38": 0.0,
        "Closure_39": 0.4,
        "Closure_4": 0.2,
        "Closure_40": 0.4,
        "Closure_41": 0.0,
        "Closure_42": 0.2,
        "Closure_43": 0.0,
        "Closure_44": 0.26666666666666666,
        "Closure_45": 0.2,
        "Closure_46": 0.6,
        "Closure_47": 0.1,
        "Closure_48": 0.0,
        "Closure_49": 0.8,
        "Closure_5": 0.0,
        "Closure_50": 0.0,
        "Closure_51": 0.2,
        "Closure_52": 0.2,
        "Closure_53": 0.2,
        "Closure_54": 0.2,
        "Closure_55": 0.2,
        "Closure_56": 0.2,
        "Closure_57": 0.6,
        "Closure_58": 0.4,
        "Closure_59": 0.2,
        "Closure_6": 0.0,
        "Closure_60": 0.2,
        "Closure_61": 0.0,
        "Closure_62": 0.5,
        "Closure_64": 0.6,
        "Closure_65": 0.1,
        "Closure_66": 0.2,
        "Closure_67": 0.0,
        "Closure_68": 0.0,
        "Closure_69": 0.0,
        "Closure_7": 0.2,
        "Closure_70": 0.2,
        "Closure_71": 0.1,
        "Closure_72": 0.0,
        "Closure_73": 0.2,
        "Closure_74": 0.0,
        "Closure_75": 0.2,
        "Closure_76": 0.2,
        "Closure_77": 0.0,
        "Closure_78": 0.2,
        "Closure_79": 0.0,
        "Closure_8": 0.2,
        "Closure_80": 0.2,
        "Closure_81": 0.5,
        "Closure_82": 0.2,
        "Closure_83": 0.2,
        "Closure_84": 0.3,
        "Closure_85": 0.2,
        "Closure_86": 0.2,
        "Closure_87": 0.0,
        "Closure_88": 0.0,
        "Closure_89": 0.2,
        "Closure_9": 0.8,
        "Closure_90": 0.0,
        "Closure_91": 0.06666666666666667,
        "Closure_92": 0.2,
        "Closure_94": 0.1,
        "Closure_95": 0.2,
        "Closure_96": 0.1,
        "Closure_97": 0.35,
        "Closure_98": 0.0,
        "Closure_99": 0.0,
        "Lang_1": 0.8,
        "Lang_10": 0.6,
        "Lang_11": 1.0,
        "Lang_12": 0.4,
        "Lang_13": 0.2,
        "Lang_14": 1.0,
        "Lang_15": 0.2,
        "Lang_16": 1.0,
        "Lang_17": 0.2,
        "Lang_18": 0.2,
        "Lang_19": 0.4,
        "Lang_20": 0.4,
        "Lang_21": 1.0,
        "Lang_22": 0.6666666666666667,
        "Lang_23": 0.2,
        "Lang_24": 0.6,
        "Lang_25": 0.8,
        "Lang_26": 0.5,
        "Lang_27": 0.6,
        "Lang_28": 1.0,
        "Lang_29": 0.6,
        "Lang_3": 0.6,
        "Lang_30": 0.3,
        "Lang_31": 0.8,
        "Lang_32": 0.3,
        "Lang_33": 1.0,
        "Lang_34": 0.2,
        "Lang_35": 0.5,
        "Lang_36": 0.4,
        "Lang_37": 0.6,
        "Lang_38": 0.4,
        "Lang_39": 0.6,
        "Lang_4": 0.6,
        "Lang_40": 0.5,
        "Lang_41": 0.5,
        "Lang_42": 0.5,
        "Lang_43": 0.6,
        "Lang_44": 0.8,
        "Lang_45": 1.0,
        "Lang_46": 0.7,
        "Lang_47": 0.4,
        "Lang_48": 0.8,
        "Lang_49": 0.5,
        "Lang_5": 1.0,
        "Lang_50": 0.4,
        "Lang_51": 1.0,
        "Lang_52": 0.6,
        "Lang_53": 0.6,
        "Lang_54": 1.0,
        "Lang_55": 0.6,
        "Lang_56": 0.1,
        "Lang_57": 0.8,
        "Lang_58": 0.8,
        "Lang_59": 0.9,
        "Lang_6": 0.4,
        "Lang_60": 0.7,
        "Lang_61": 0.3,
        "Lang_62": 0.9,
        "Lang_63": 0.5,
        "Lang_64": 0.6,
        "Lang_65": 0.3,
        "Lang_7": 0.9,
        "Lang_8": 0.1,
        "Lang_9": 0.5,
        "Math_1": 0.4,
        "Math_10": 0.4,
        "Math_100": 0.5,
        "Math_101": 1.0,
        "Math_102": 0.6,
        "Math_103": 0.5,
        "Math_104": 0.3,
        "Math_105": 0.6,
        "Math_106": 0.26666666666666666,
        "Math_11": 0.7,
        "Math_12": 0.25,
        "Math_13": 0.26666666666666666,
        "Math_14": 0.5,
        "Math_15": 0.8,
        "Math_16": 0.7,
        "Math_17": 0.8,
        "Math_18": 0.1,
        "Math_19": 0.4,
        "Math_2": 0.3,
        "Math_20": 0.2,
        "Math_21": 0.4,
        "Math_22": 0.5,
        "Math_23": 0.3,
        "Math_24": 0.2,
        "Math_25": 0.6,
        "Math_26": 0.3,
        "Math_27": 0.5,
        "Math_28": 0.3,
        "Math_29": 0.1,
        "Math_3": 1.0,
        "Math_30": 0.35,
        "Math_31": 0.4,
        "Math_32": 0.4,
        "Math_33": 0.3,
        "Math_34": 0.5,
        "Math_35": 0.6,
        "Math_36": 0.4,
        "Math_37": 0.6,
        "Math_38": 0.0,
        "Math_39": 0.2,
        "Math_4": 0.3,
        "Math_40": 0.26666666666666666,
        "Math_41": 0.7,
        "Math_42": 0.2,
        "Math_43": 0.2,
        "Math_44": 0.6,
        "Math_45": 1.0,
        "Math_46": 0.6,
        "Math_47": 0.4,
        "Math_48": 0.2,
        "Math_49": 0.5,
        "Math_5": 1.0,
        "Math_50": 0.4,
        "Math_51": 0.4,
        "Math_52": 0.4,
        "Math_53": 0.5,
        "Math_54": 0.4666666666666666,
        "Math_55": 0.8,
        "Math_56": 0.6,
        "Math_57": 0.06666666666666667,
        "Math_58": 0.3,
        "Math_59": 0.9,
        "Math_6": 0.2,
        "Math_60": 0.26666666666666666,
        "Math_61": 0.7,
        "Math_62": 0.4,
        "Math_63": 0.6,
        "Math_64": 0.0,
        "Math_65": 0.2,
        "Math_66": 0.4,
        "Math_67": 0.2,
        "Math_68": 0.0,
        "Math_69": 0.6,
        "Math_7": 0.0,
        "Math_70": 0.4,
        "Math_71": 0.3,
        "Math_72": 0.6,
        "Math_73": 0.3,
        "Math_74": 0.2,
        "Math_75": 0.5,
        "Math_76": 0.24,
        "Math_77": 0.6,
        "Math_78": 0.2,
        "Math_79": 0.3,
        "Math_8": 0.2,
        "Math_80": 0.26666666666666666,
        "Math_81": 0.2,
        "Math_82": 0.16666666666666666,
        "Math_83": 0.2,
        "Math_84": 0.3,
        "Math_85": 0.4,
        "Math_86": 0.4666666666666666,
        "Math_87": 0.13333333333333333,
        "Math_88": 0.36666666666666664,
        "Math_89": 0.8,
        "Math_9": 0.5,
        "Math_90": 0.8,
        "Math_91": 0.6,
        "Math_92": 1.0,
        "Math_93": 1.0,
        "Math_94": 1.0,
        "Math_95": 0.4,
        "Math_96": 0.9,
        "Math_97": 1.0,
        "Math_98": 0.6,
        "Math_99": 0.7,
        "Time_1": 0.6,
        "Time_10": 0.16666666666666666,
        "Time_11": 0.4,
        "Time_12": 0.2,
        "Time_13": 0.8,
        "Time_14": 0.2,
        "Time_15": 1.0,
        "Time_16": 0.3,
        "Time_17": 0.4,
        "Time_18": 0.3,
        "Time_19": 0.4,
        "Time_2": 0.7,
        "Time_20": 0.8,
        "Time_22": 0.2,
        "Time_23": 0.3,
        "Time_24": 0.4,
        "Time_25": 0.2,
        "Time_26": 0.2,
        "Time_27": 0.3,
        "Time_3": 0.2,
        "Time_4": 1.0,
        "Time_5": 0.5,
        "Time_6": 0.2,
        "Time_7": 0.3,
        "Time_8": 1.0,
        "Time_9": 1.0
    }
}