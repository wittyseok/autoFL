coverage run -m pytest tests/test_union_body.py::test_item_openapi_schema
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/fastapi
plugins: cov-2.9.0
collected 1 item

tests/test_union_body.py F                                               [100%]

=================================== FAILURES ===================================
___________________________ test_item_openapi_schema ___________________________

    def test_item_openapi_schema():
>       response = client.get("/openapi.json")

tests/test_union_body.py:110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:543: in get
    return self.request('GET', url, **kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:405: in request
    return super().request(
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:530: in request
    resp = self.send(prep, **send_kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:643: in send
    r = adapter.send(request, **kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:238: in send
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:235: in send
    loop.run_until_complete(self.app(scope, receive, send))
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/asyncio/base_events.py:616: in run_until_complete
    return future.result()
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/applications.py:133: in __call__
    await self.error_middleware(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/middleware/errors.py:177: in __call__
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/middleware/errors.py:155: in __call__
    await self.app(scope, receive, _send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/exceptions.py:73: in __call__
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/exceptions.py:62: in __call__
    await self.app(scope, receive, sender)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:590: in __call__
    await route(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:208: in __call__
    await self.app(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:41: in app
    response = await func(request)
fastapi/applications.py:87: in openapi
    return JSONResponse(self.openapi())
fastapi/applications.py:73: in openapi
    self.openapi_schema = get_openapi(
fastapi/openapi/utils.py:254: in get_openapi
    result = get_openapi_path(route=route, model_name_map=model_name_map)
fastapi/openapi/utils.py:162: in get_openapi_path
    validation_definitions, operation_parameters = get_openapi_operation_parameters(
fastapi/openapi/utils.py:87: in get_openapi_operation_parameters
    "schema": field_schema(param, model_name_map={})[0],
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/schema.py:297: in field_schema
    f_schema, f_definitions, f_nested_models = field_type_schema(
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/schema.py:527: in field_type_schema
    f_schema, f_definitions, f_nested_models = field_singleton_schema(
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/schema.py:742: in field_singleton_schema
    return field_singleton_sub_fields_schema(
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/schema.py:648: in field_singleton_sub_fields_schema
    sub_schema, sub_definitions, sub_nested_models = field_type_schema(
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/schema.py:527: in field_type_schema
    f_schema, f_definitions, f_nested_models = field_singleton_schema(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

field = <Field(item_OtherItem type=OtherItem required)>

    def field_singleton_schema(  # noqa: C901 (ignore complexity)
        field: Field,
        *,
        by_alias: bool,
        model_name_map: Dict[Type['BaseModel'], str],
        schema_overrides: bool = False,
        ref_prefix: Optional[str] = None,
        known_models: Set[Type['BaseModel']],
    ) -> Tuple[Dict[str, Any], Dict[str, Any], Set[str]]:
        """
        This function is indirectly used by ``field_schema()``, you should probably be using that function.
    
        Take a single Pydantic ``Field``, and return its schema and any additional definitions from sub-models.
        """
    
        ref_prefix = ref_prefix or default_prefix
        definitions: Dict[str, Any] = {}
        nested_models: Set[str] = set()
        if field.sub_fields:
            return field_singleton_sub_fields_schema(
                field.sub_fields,
                by_alias=by_alias,
                model_name_map=model_name_map,
                schema_overrides=schema_overrides,
                ref_prefix=ref_prefix,
                known_models=known_models,
            )
        if field.type_ is Any or type(field.type_) == TypeVar:
            return {}, definitions, nested_models  # no restrictions
        if is_callable_type(field.type_):
            raise SkipField(f'Callable {field.name} was excluded from schema since JSON schema has no equivalent type.')
        f_schema: Dict[str, Any] = {}
        if field.schema is not None and field.schema.const:
            f_schema['const'] = field.default
        field_type = field.type_
        if is_new_type(field_type):
            field_type = new_type_supertype(field_type)
        if is_literal_type(field_type):
            # If there were multiple literal values, field.sub_fields would not be falsy
            literal_value = literal_values(field_type)[0]
            field_type = type(literal_value)
            f_schema['const'] = literal_value
        if issubclass(field_type, Enum):
            f_schema.update({'enum': [item.value for item in field_type]})
            # Don't return immediately, to allow adding specific types
        for field_name, schema_name in validation_attribute_to_schema_keyword.items():
            field_value = getattr(field_type, field_name, None)
            if field_value is not None:
                if field_name == 'regex':
                    field_value = field_value.pattern
                f_schema[schema_name] = field_value
        for type_, t_schema in field_class_to_schema_enum_enabled:
            if issubclass(field_type, type_):
                f_schema.update(t_schema)
                break
        # Return schema, with or without enum definitions
        if f_schema:
            return f_schema, definitions, nested_models
        for type_, t_schema in field_class_to_schema_enum_disabled:
            if issubclass(field_type, type_):
                return t_schema, definitions, nested_models
        # Handle dataclass-based models
        if lenient_issubclass(getattr(field_type, '__pydantic_model__', None), pydantic.BaseModel):
            field_type = field_type.__pydantic_model__  # type: ignore
        if issubclass(field_type, pydantic.BaseModel):
>           model_name = model_name_map[field_type]
E           KeyError: <class 'tests.test_union_body.OtherItem'>

/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/schema.py:788: KeyError
=============================== warnings summary ===============================
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/version.py:5
  /opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/version.py:5: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    VERSION = StrictVersion('0.32.2')

/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
  /opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10: DeprecationWarning: "@coroutine" decorator is deprecated since Python 3.8, use "async def" instead
    def run(*args, loop=None, executor=None, **kwargs):

-- Docs: https://docs.pytest.org/en/latest/warnings.html
=========================== short test summary info ============================
FAILED tests/test_union_body.py::test_item_openapi_schema - KeyError: <class ...
======================== 1 failed, 7 warnings in 1.14s =========================

coverage run -m pytest tests/test_union_body.py::test_post_other_item
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/fastapi
plugins: cov-2.9.0
collected 1 item

tests/test_union_body.py F                                               [100%]

=================================== FAILURES ===================================
_____________________________ test_post_other_item _____________________________

    def test_post_other_item():
>       response = client.post("/items/", json={"price": 100})

tests/test_union_body.py:116: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:578: in post
    return self.request('POST', url, data=data, json=json, **kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:405: in request
    return super().request(
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:530: in request
    resp = self.send(prep, **send_kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:643: in send
    r = adapter.send(request, **kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:238: in send
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:235: in send
    loop.run_until_complete(self.app(scope, receive, send))
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/asyncio/base_events.py:616: in run_until_complete
    return future.result()
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/applications.py:133: in __call__
    await self.error_middleware(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/middleware/errors.py:177: in __call__
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/middleware/errors.py:155: in __call__
    await self.app(scope, receive, _send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/exceptions.py:73: in __call__
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/exceptions.py:62: in __call__
    await self.app(scope, receive, sender)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:590: in __call__
    await route(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:208: in __call__
    await self.app(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:41: in app
    response = await func(request)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7fe72e38d430>

    async def app(request: Request) -> Response:
        try:
            body = None
            if body_field:
                if is_body_form:
                    body = await request.form()
                else:
                    body_bytes = await request.body()
                    if body_bytes:
                        body = await request.json()
        except Exception as e:
            logging.error(f"Error getting request body: {e}")
            raise HTTPException(
                status_code=400, detail="There was an error parsing the body"
            ) from e
        solved_result = await solve_dependencies(
            request=request,
            dependant=dependant,
            body=body,
            dependency_overrides_provider=dependency_overrides_provider,
        )
        values, errors, background_tasks, sub_response, _ = solved_result
        if errors:
>           raise RequestValidationError(errors)
E           TypeError: __init__() missing 1 required positional argument: 'model'

fastapi/routing.py:105: TypeError
=============================== warnings summary ===============================
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/version.py:5
  /opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/version.py:5: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    VERSION = StrictVersion('0.32.2')

/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
  /opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10: DeprecationWarning: "@coroutine" decorator is deprecated since Python 3.8, use "async def" instead
    def run(*args, loop=None, executor=None, **kwargs):

-- Docs: https://docs.pytest.org/en/latest/warnings.html
=========================== short test summary info ============================
FAILED tests/test_union_body.py::test_post_other_item - TypeError: __init__()...
======================== 1 failed, 7 warnings in 0.94s =========================

coverage run -m pytest tests/test_union_body.py::test_post_item
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/fastapi
plugins: cov-2.9.0
collected 1 item

tests/test_union_body.py F                                               [100%]

=================================== FAILURES ===================================
________________________________ test_post_item ________________________________

    def test_post_item():
>       response = client.post("/items/", json={"name": "Foo"})

tests/test_union_body.py:122: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:578: in post
    return self.request('POST', url, data=data, json=json, **kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:405: in request
    return super().request(
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:530: in request
    resp = self.send(prep, **send_kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:643: in send
    r = adapter.send(request, **kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:238: in send
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:235: in send
    loop.run_until_complete(self.app(scope, receive, send))
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/asyncio/base_events.py:616: in run_until_complete
    return future.result()
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/applications.py:133: in __call__
    await self.error_middleware(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/middleware/errors.py:177: in __call__
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/middleware/errors.py:155: in __call__
    await self.app(scope, receive, _send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/exceptions.py:73: in __call__
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/exceptions.py:62: in __call__
    await self.app(scope, receive, sender)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:590: in __call__
    await route(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:208: in __call__
    await self.app(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:41: in app
    response = await func(request)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7fc83d03c430>

    async def app(request: Request) -> Response:
        try:
            body = None
            if body_field:
                if is_body_form:
                    body = await request.form()
                else:
                    body_bytes = await request.body()
                    if body_bytes:
                        body = await request.json()
        except Exception as e:
            logging.error(f"Error getting request body: {e}")
            raise HTTPException(
                status_code=400, detail="There was an error parsing the body"
            ) from e
        solved_result = await solve_dependencies(
            request=request,
            dependant=dependant,
            body=body,
            dependency_overrides_provider=dependency_overrides_provider,
        )
        values, errors, background_tasks, sub_response, _ = solved_result
        if errors:
>           raise RequestValidationError(errors)
E           TypeError: __init__() missing 1 required positional argument: 'model'

fastapi/routing.py:105: TypeError
=============================== warnings summary ===============================
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/version.py:5
  /opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/version.py:5: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    VERSION = StrictVersion('0.32.2')

/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
  /opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10: DeprecationWarning: "@coroutine" decorator is deprecated since Python 3.8, use "async def" instead
    def run(*args, loop=None, executor=None, **kwargs):

-- Docs: https://docs.pytest.org/en/latest/warnings.html
=========================== short test summary info ============================
FAILED tests/test_union_body.py::test_post_item - TypeError: __init__() missi...
======================== 1 failed, 7 warnings in 0.96s =========================

coverage run -m pytest tests/test_union_inherited_body.py::test_inherited_item_openapi_schema
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/fastapi
plugins: cov-2.9.0
collected 1 item

tests/test_union_inherited_body.py F                                     [100%]

=================================== FAILURES ===================================
______________________ test_inherited_item_openapi_schema ______________________

    @skip_py36
    def test_inherited_item_openapi_schema():
>       response = client.get("/openapi.json")

tests/test_union_inherited_body.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:543: in get
    return self.request('GET', url, **kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:405: in request
    return super().request(
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:530: in request
    resp = self.send(prep, **send_kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:643: in send
    r = adapter.send(request, **kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:238: in send
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:235: in send
    loop.run_until_complete(self.app(scope, receive, send))
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/asyncio/base_events.py:616: in run_until_complete
    return future.result()
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/applications.py:133: in __call__
    await self.error_middleware(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/middleware/errors.py:177: in __call__
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/middleware/errors.py:155: in __call__
    await self.app(scope, receive, _send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/exceptions.py:73: in __call__
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/exceptions.py:62: in __call__
    await self.app(scope, receive, sender)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:590: in __call__
    await route(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:208: in __call__
    await self.app(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:41: in app
    response = await func(request)
fastapi/applications.py:87: in openapi
    return JSONResponse(self.openapi())
fastapi/applications.py:73: in openapi
    self.openapi_schema = get_openapi(
fastapi/openapi/utils.py:254: in get_openapi
    result = get_openapi_path(route=route, model_name_map=model_name_map)
fastapi/openapi/utils.py:162: in get_openapi_path
    validation_definitions, operation_parameters = get_openapi_operation_parameters(
fastapi/openapi/utils.py:87: in get_openapi_operation_parameters
    "schema": field_schema(param, model_name_map={})[0],
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/schema.py:297: in field_schema
    f_schema, f_definitions, f_nested_models = field_type_schema(
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/schema.py:527: in field_type_schema
    f_schema, f_definitions, f_nested_models = field_singleton_schema(
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/schema.py:742: in field_singleton_schema
    return field_singleton_sub_fields_schema(
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/schema.py:648: in field_singleton_sub_fields_schema
    sub_schema, sub_definitions, sub_nested_models = field_type_schema(
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/schema.py:527: in field_type_schema
    f_schema, f_definitions, f_nested_models = field_singleton_schema(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

field = <Field(item_ExtendedItem type=ExtendedItem required)>

    def field_singleton_schema(  # noqa: C901 (ignore complexity)
        field: Field,
        *,
        by_alias: bool,
        model_name_map: Dict[Type['BaseModel'], str],
        schema_overrides: bool = False,
        ref_prefix: Optional[str] = None,
        known_models: Set[Type['BaseModel']],
    ) -> Tuple[Dict[str, Any], Dict[str, Any], Set[str]]:
        """
        This function is indirectly used by ``field_schema()``, you should probably be using that function.
    
        Take a single Pydantic ``Field``, and return its schema and any additional definitions from sub-models.
        """
    
        ref_prefix = ref_prefix or default_prefix
        definitions: Dict[str, Any] = {}
        nested_models: Set[str] = set()
        if field.sub_fields:
            return field_singleton_sub_fields_schema(
                field.sub_fields,
                by_alias=by_alias,
                model_name_map=model_name_map,
                schema_overrides=schema_overrides,
                ref_prefix=ref_prefix,
                known_models=known_models,
            )
        if field.type_ is Any or type(field.type_) == TypeVar:
            return {}, definitions, nested_models  # no restrictions
        if is_callable_type(field.type_):
            raise SkipField(f'Callable {field.name} was excluded from schema since JSON schema has no equivalent type.')
        f_schema: Dict[str, Any] = {}
        if field.schema is not None and field.schema.const:
            f_schema['const'] = field.default
        field_type = field.type_
        if is_new_type(field_type):
            field_type = new_type_supertype(field_type)
        if is_literal_type(field_type):
            # If there were multiple literal values, field.sub_fields would not be falsy
            literal_value = literal_values(field_type)[0]
            field_type = type(literal_value)
            f_schema['const'] = literal_value
        if issubclass(field_type, Enum):
            f_schema.update({'enum': [item.value for item in field_type]})
            # Don't return immediately, to allow adding specific types
        for field_name, schema_name in validation_attribute_to_schema_keyword.items():
            field_value = getattr(field_type, field_name, None)
            if field_value is not None:
                if field_name == 'regex':
                    field_value = field_value.pattern
                f_schema[schema_name] = field_value
        for type_, t_schema in field_class_to_schema_enum_enabled:
            if issubclass(field_type, type_):
                f_schema.update(t_schema)
                break
        # Return schema, with or without enum definitions
        if f_schema:
            return f_schema, definitions, nested_models
        for type_, t_schema in field_class_to_schema_enum_disabled:
            if issubclass(field_type, type_):
                return t_schema, definitions, nested_models
        # Handle dataclass-based models
        if lenient_issubclass(getattr(field_type, '__pydantic_model__', None), pydantic.BaseModel):
            field_type = field_type.__pydantic_model__  # type: ignore
        if issubclass(field_type, pydantic.BaseModel):
>           model_name = model_name_map[field_type]
E           KeyError: <class 'tests.test_union_inherited_body.ExtendedItem'>

/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/schema.py:788: KeyError
=============================== warnings summary ===============================
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/version.py:5
  /opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/version.py:5: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    VERSION = StrictVersion('0.32.2')

/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
  /opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10: DeprecationWarning: "@coroutine" decorator is deprecated since Python 3.8, use "async def" instead
    def run(*args, loop=None, executor=None, **kwargs):

-- Docs: https://docs.pytest.org/en/latest/warnings.html
=========================== short test summary info ============================
FAILED tests/test_union_inherited_body.py::test_inherited_item_openapi_schema
======================== 1 failed, 7 warnings in 0.96s =========================

coverage run -m pytest tests/test_union_inherited_body.py::test_post_extended_item
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/fastapi
plugins: cov-2.9.0
collected 1 item

tests/test_union_inherited_body.py F                                     [100%]

=================================== FAILURES ===================================
___________________________ test_post_extended_item ____________________________

    @skip_py36
    def test_post_extended_item():
>       response = client.post("/items/", json={"name": "Foo", "age": 5})

tests/test_union_inherited_body.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:578: in post
    return self.request('POST', url, data=data, json=json, **kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:405: in request
    return super().request(
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:530: in request
    resp = self.send(prep, **send_kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:643: in send
    r = adapter.send(request, **kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:238: in send
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:235: in send
    loop.run_until_complete(self.app(scope, receive, send))
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/asyncio/base_events.py:616: in run_until_complete
    return future.result()
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/applications.py:133: in __call__
    await self.error_middleware(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/middleware/errors.py:177: in __call__
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/middleware/errors.py:155: in __call__
    await self.app(scope, receive, _send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/exceptions.py:73: in __call__
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/exceptions.py:62: in __call__
    await self.app(scope, receive, sender)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:590: in __call__
    await route(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:208: in __call__
    await self.app(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:41: in app
    response = await func(request)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7f0f48a85610>

    async def app(request: Request) -> Response:
        try:
            body = None
            if body_field:
                if is_body_form:
                    body = await request.form()
                else:
                    body_bytes = await request.body()
                    if body_bytes:
                        body = await request.json()
        except Exception as e:
            logging.error(f"Error getting request body: {e}")
            raise HTTPException(
                status_code=400, detail="There was an error parsing the body"
            ) from e
        solved_result = await solve_dependencies(
            request=request,
            dependant=dependant,
            body=body,
            dependency_overrides_provider=dependency_overrides_provider,
        )
        values, errors, background_tasks, sub_response, _ = solved_result
        if errors:
>           raise RequestValidationError(errors)
E           TypeError: __init__() missing 1 required positional argument: 'model'

fastapi/routing.py:105: TypeError
=============================== warnings summary ===============================
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/version.py:5
  /opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/version.py:5: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    VERSION = StrictVersion('0.32.2')

/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
  /opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10: DeprecationWarning: "@coroutine" decorator is deprecated since Python 3.8, use "async def" instead
    def run(*args, loop=None, executor=None, **kwargs):

-- Docs: https://docs.pytest.org/en/latest/warnings.html
=========================== short test summary info ============================
FAILED tests/test_union_inherited_body.py::test_post_extended_item - TypeErro...
======================== 1 failed, 7 warnings in 0.88s =========================

coverage run -m pytest tests/test_union_inherited_body.py::test_post_item
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/fastapi
plugins: cov-2.9.0
collected 1 item

tests/test_union_inherited_body.py F                                     [100%]

=================================== FAILURES ===================================
________________________________ test_post_item ________________________________

    @skip_py36
    def test_post_item():
>       response = client.post("/items/", json={"name": "Foo"})

tests/test_union_inherited_body.py:138: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:578: in post
    return self.request('POST', url, data=data, json=json, **kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:405: in request
    return super().request(
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:530: in request
    resp = self.send(prep, **send_kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/requests/sessions.py:643: in send
    r = adapter.send(request, **kwargs)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:238: in send
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/testclient.py:235: in send
    loop.run_until_complete(self.app(scope, receive, send))
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/asyncio/base_events.py:616: in run_until_complete
    return future.result()
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/applications.py:133: in __call__
    await self.error_middleware(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/middleware/errors.py:177: in __call__
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/middleware/errors.py:155: in __call__
    await self.app(scope, receive, _send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/exceptions.py:73: in __call__
    raise exc from None
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/exceptions.py:62: in __call__
    await self.app(scope, receive, sender)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:590: in __call__
    await route(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:208: in __call__
    await self.app(scope, receive, send)
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/starlette/routing.py:41: in app
    response = await func(request)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.requests.Request object at 0x7f11b6d1d5e0>

    async def app(request: Request) -> Response:
        try:
            body = None
            if body_field:
                if is_body_form:
                    body = await request.form()
                else:
                    body_bytes = await request.body()
                    if body_bytes:
                        body = await request.json()
        except Exception as e:
            logging.error(f"Error getting request body: {e}")
            raise HTTPException(
                status_code=400, detail="There was an error parsing the body"
            ) from e
        solved_result = await solve_dependencies(
            request=request,
            dependant=dependant,
            body=body,
            dependency_overrides_provider=dependency_overrides_provider,
        )
        values, errors, background_tasks, sub_response, _ = solved_result
        if errors:
>           raise RequestValidationError(errors)
E           TypeError: __init__() missing 1 required positional argument: 'model'

fastapi/routing.py:105: TypeError
=============================== warnings summary ===============================
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/version.py:5
  /opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/pydantic/version.py:5: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    VERSION = StrictVersion('0.32.2')

/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
/opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10
  /opt/conda/envs/6a8345d79f511e631e8d83e9f190ff61/lib/python3.8/site-packages/aiofiles/os.py:10: DeprecationWarning: "@coroutine" decorator is deprecated since Python 3.8, use "async def" instead
    def run(*args, loop=None, executor=None, **kwargs):

-- Docs: https://docs.pytest.org/en/latest/warnings.html
=========================== short test summary info ============================
FAILED tests/test_union_inherited_body.py::test_post_item - TypeError: __init...
======================== 1 failed, 7 warnings in 0.77s =========================
