[
    {
        "name": "pandas.tests.dtypes.cast.test_infer_dtype.pandas_dtype#26",
        "src_path": "pandas/tests/dtypes/cast/test_infer_dtype.py",
        "class_name": "pandas.tests.dtypes.cast.test_infer_dtype",
        "signature": "pandas.tests.dtypes.cast.test_infer_dtype.pandas_dtype(request)",
        "snippet": "def pandas_dtype(request):\n    return request.param",
        "begin_line": 26,
        "end_line": 27,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_int_scalar#30",
        "src_path": "pandas/tests/dtypes/cast/test_infer_dtype.py",
        "class_name": "pandas.tests.dtypes.cast.test_infer_dtype",
        "signature": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_int_scalar(any_int_dtype)",
        "snippet": "def test_infer_dtype_from_int_scalar(any_int_dtype):\n    # Test that infer_dtype_from_scalar is\n    # returning correct dtype for int and float.\n    data = np.dtype(any_int_dtype).type(12)\n    dtype, val = infer_dtype_from_scalar(data)\n    assert dtype == type(data)",
        "begin_line": 30,
        "end_line": 35,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_float_scalar#38",
        "src_path": "pandas/tests/dtypes/cast/test_infer_dtype.py",
        "class_name": "pandas.tests.dtypes.cast.test_infer_dtype",
        "signature": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_float_scalar(float_dtype)",
        "snippet": "def test_infer_dtype_from_float_scalar(float_dtype):\n    float_dtype = np.dtype(float_dtype).type\n    data = float_dtype(12)\n\n    dtype, val = infer_dtype_from_scalar(data)\n    assert dtype == float_dtype",
        "begin_line": 38,
        "end_line": 43,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_python_scalar#47",
        "src_path": "pandas/tests/dtypes/cast/test_infer_dtype.py",
        "class_name": "pandas.tests.dtypes.cast.test_infer_dtype",
        "signature": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_python_scalar(data, exp_dtype)",
        "snippet": "def test_infer_dtype_from_python_scalar(data, exp_dtype):\n    dtype, val = infer_dtype_from_scalar(data)\n    assert dtype == exp_dtype",
        "begin_line": 47,
        "end_line": 49,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_boolean#53",
        "src_path": "pandas/tests/dtypes/cast/test_infer_dtype.py",
        "class_name": "pandas.tests.dtypes.cast.test_infer_dtype",
        "signature": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_boolean(bool_val)",
        "snippet": "def test_infer_dtype_from_boolean(bool_val):\n    dtype, val = infer_dtype_from_scalar(bool_val)\n    assert dtype == np.bool_",
        "begin_line": 53,
        "end_line": 55,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_complex#58",
        "src_path": "pandas/tests/dtypes/cast/test_infer_dtype.py",
        "class_name": "pandas.tests.dtypes.cast.test_infer_dtype",
        "signature": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_complex(complex_dtype)",
        "snippet": "def test_infer_dtype_from_complex(complex_dtype):\n    data = np.dtype(complex_dtype).type(1)\n    dtype, val = infer_dtype_from_scalar(data)\n    assert dtype == np.complex_",
        "begin_line": 58,
        "end_line": 61,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_datetime#67",
        "src_path": "pandas/tests/dtypes/cast/test_infer_dtype.py",
        "class_name": "pandas.tests.dtypes.cast.test_infer_dtype",
        "signature": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_datetime(data)",
        "snippet": "def test_infer_dtype_from_datetime(data):\n    dtype, val = infer_dtype_from_scalar(data)\n    assert dtype == \"M8[ns]\"",
        "begin_line": 67,
        "end_line": 69,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_timedelta#73",
        "src_path": "pandas/tests/dtypes/cast/test_infer_dtype.py",
        "class_name": "pandas.tests.dtypes.cast.test_infer_dtype",
        "signature": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_timedelta(data)",
        "snippet": "def test_infer_dtype_from_timedelta(data):\n    dtype, val = infer_dtype_from_scalar(data)\n    assert dtype == \"m8[ns]\"",
        "begin_line": 73,
        "end_line": 75,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_period#79",
        "src_path": "pandas/tests/dtypes/cast/test_infer_dtype.py",
        "class_name": "pandas.tests.dtypes.cast.test_infer_dtype",
        "signature": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_period(freq, pandas_dtype)",
        "snippet": "def test_infer_dtype_from_period(freq, pandas_dtype):\n    p = Period(\"2011-01-01\", freq=freq)\n    dtype, val = infer_dtype_from_scalar(p, pandas_dtype=pandas_dtype)\n\n    if pandas_dtype:\n        exp_dtype = \"period[{0}]\".format(freq)\n        exp_val = p.ordinal\n    else:\n        exp_dtype = np.object_\n        exp_val = p\n\n    assert dtype == exp_dtype\n    assert val == exp_val",
        "begin_line": 79,
        "end_line": 91,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_misc#97",
        "src_path": "pandas/tests/dtypes/cast/test_infer_dtype.py",
        "class_name": "pandas.tests.dtypes.cast.test_infer_dtype",
        "signature": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_misc(data)",
        "snippet": "def test_infer_dtype_misc(data):\n    dtype, val = infer_dtype_from_scalar(data)\n    assert dtype == np.object_",
        "begin_line": 97,
        "end_line": 99,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_from_scalar_tz#103",
        "src_path": "pandas/tests/dtypes/cast/test_infer_dtype.py",
        "class_name": "pandas.tests.dtypes.cast.test_infer_dtype",
        "signature": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_from_scalar_tz(tz, pandas_dtype)",
        "snippet": "def test_infer_from_scalar_tz(tz, pandas_dtype):\n    dt = Timestamp(1, tz=tz)\n    dtype, val = infer_dtype_from_scalar(dt, pandas_dtype=pandas_dtype)\n\n    if pandas_dtype:\n        exp_dtype = \"datetime64[ns, {0}]\".format(tz)\n        exp_val = dt.value\n    else:\n        exp_dtype = np.object_\n        exp_val = dt\n\n    assert dtype == exp_dtype\n    assert val == exp_val",
        "begin_line": 103,
        "end_line": 115,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_from_interval#128",
        "src_path": "pandas/tests/dtypes/cast/test_infer_dtype.py",
        "class_name": "pandas.tests.dtypes.cast.test_infer_dtype",
        "signature": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_from_interval(left, right, subtype, closed, pandas_dtype)",
        "snippet": "def test_infer_from_interval(left, right, subtype, closed, pandas_dtype):\n    # GH 30337\n    interval = Interval(left, right, closed)\n    result_dtype, result_value = infer_dtype_from_scalar(interval, pandas_dtype)\n    expected_dtype = f\"interval[{subtype}]\" if pandas_dtype else np.object_\n    assert result_dtype == expected_dtype\n    assert result_value == interval",
        "begin_line": 128,
        "end_line": 134,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_scalar_errors#137",
        "src_path": "pandas/tests/dtypes/cast/test_infer_dtype.py",
        "class_name": "pandas.tests.dtypes.cast.test_infer_dtype",
        "signature": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_scalar_errors()",
        "snippet": "def test_infer_dtype_from_scalar_errors():\n    msg = \"invalid ndarray passed to infer_dtype_from_scalar\"\n\n    with pytest.raises(ValueError, match=msg):\n        infer_dtype_from_scalar(np.array([1]))",
        "begin_line": 137,
        "end_line": 141,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_array#176",
        "src_path": "pandas/tests/dtypes/cast/test_infer_dtype.py",
        "class_name": "pandas.tests.dtypes.cast.test_infer_dtype",
        "signature": "pandas.tests.dtypes.cast.test_infer_dtype.test_infer_dtype_from_array(arr, expected, pandas_dtype)",
        "snippet": "def test_infer_dtype_from_array(arr, expected, pandas_dtype):\n    dtype, _ = infer_dtype_from_array(arr, pandas_dtype=pandas_dtype)\n    assert is_dtype_equal(dtype, expected)",
        "begin_line": 176,
        "end_line": 178,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.dtypes.cast.test_infer_dtype.test_cast_scalar_to_array#191",
        "src_path": "pandas/tests/dtypes/cast/test_infer_dtype.py",
        "class_name": "pandas.tests.dtypes.cast.test_infer_dtype",
        "signature": "pandas.tests.dtypes.cast.test_infer_dtype.test_cast_scalar_to_array(obj, dtype)",
        "snippet": "def test_cast_scalar_to_array(obj, dtype):\n    shape = (3, 2)\n\n    exp = np.empty(shape, dtype=dtype)\n    exp.fill(obj)\n\n    arr = cast_scalar_to_array(shape, obj, dtype=dtype)\n    tm.assert_numpy_array_equal(arr, exp)",
        "begin_line": 191,
        "end_line": 198,
        "comment": "",
        "is_bug": false
    }
]