coverage run -m pytest tests/rules/test_dnf_no_such_command.py::test_get_new_command
============================= test session starts ==============================
platform linux -- Python 3.7.0, pytest-3.10.1, py-1.8.1, pluggy-0.13.1
benchmark: 3.2.3 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /home/user/BugsInPy/temp/projects/thefuck, inifile:
plugins: benchmark-3.2.3, mock-3.1.0, docker-pexpect-0.9
collected 2 items

tests/rules/test_dnf_no_such_command.py FF                               [100%]

=================================== FAILURES ===================================
_ test_get_new_command[dnf isntall vim-No such command: isntall. Please use /usr/bin/dnf --help\nIt could be a DNF plugin command, try: "dnf install 'dnf-command(isntall)'"\n-dnf install vim] _

set_help = <function set_help.<locals>._set_text at 0x7f4606bcabf8>
output = 'No such command: isntall. Please use /usr/bin/dnf --help\nIt could be a DNF plugin command, try: "dnf install \'dnf-command(isntall)\'"\n'
script = 'dnf isntall vim', result = 'dnf install vim'

    @pytest.mark.parametrize('script, output, result', [
        ('dnf isntall vim', invalid_command('isntall'),
         'dnf install vim'),
        ('dnf saerch vim', invalid_command('saerch'),
         'dnf search vim'),
    ])
    def test_get_new_command(set_help, output, script, result):
        set_help(help_text)
>       assert result in get_new_command(Command(script, output))
E       assert 'dnf install vim' in []
E        +  where [] = get_new_command(Command(script=dnf isntall vim, output=No such command: isntall. Please use /usr/bin/dnf --help\nIt could be a DNF plugin command, try: "dnf install 'dnf-command(isntall)'"\n))
E        +    where Command(script=dnf isntall vim, output=No such command: isntall. Please use /usr/bin/dnf --help\nIt could be a DNF plugin command, try: "dnf install 'dnf-command(isntall)'"\n) = Command('dnf isntall vim', 'No such command: isntall. Please use /usr/bin/dnf --help\nIt could be a DNF plugin command, try: "dnf install \'dnf-command(isntall)\'"\n')

tests/rules/test_dnf_no_such_command.py:190: AssertionError
_ test_get_new_command[dnf saerch vim-No such command: saerch. Please use /usr/bin/dnf --help\nIt could be a DNF plugin command, try: "dnf install 'dnf-command(saerch)'"\n-dnf search vim] _

set_help = <function set_help.<locals>._set_text at 0x7f4606bcad08>
output = 'No such command: saerch. Please use /usr/bin/dnf --help\nIt could be a DNF plugin command, try: "dnf install \'dnf-command(saerch)\'"\n'
script = 'dnf saerch vim', result = 'dnf search vim'

    @pytest.mark.parametrize('script, output, result', [
        ('dnf isntall vim', invalid_command('isntall'),
         'dnf install vim'),
        ('dnf saerch vim', invalid_command('saerch'),
         'dnf search vim'),
    ])
    def test_get_new_command(set_help, output, script, result):
        set_help(help_text)
>       assert result in get_new_command(Command(script, output))
E       assert 'dnf search vim' in []
E        +  where [] = get_new_command(Command(script=dnf saerch vim, output=No such command: saerch. Please use /usr/bin/dnf --help\nIt could be a DNF plugin command, try: "dnf install 'dnf-command(saerch)'"\n))
E        +    where Command(script=dnf saerch vim, output=No such command: saerch. Please use /usr/bin/dnf --help\nIt could be a DNF plugin command, try: "dnf install 'dnf-command(saerch)'"\n) = Command('dnf saerch vim', 'No such command: saerch. Please use /usr/bin/dnf --help\nIt could be a DNF plugin command, try: "dnf install \'dnf-command(saerch)\'"\n')

tests/rules/test_dnf_no_such_command.py:190: AssertionError
=========================== 2 failed in 0.09 seconds ===========================

coverage run -m pytest tests/rules/test_dnf_no_such_command.py::test_get_operations
============================= test session starts ==============================
platform linux -- Python 3.7.0, pytest-3.10.1, py-1.8.1, pluggy-0.13.1
benchmark: 3.2.3 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /home/user/BugsInPy/temp/projects/thefuck, inifile:
plugins: benchmark-3.2.3, mock-3.1.0, docker-pexpect-0.9
collected 1 item

tests/rules/test_dnf_no_such_command.py F                                [100%]

=================================== FAILURES ===================================
_____________________________ test_get_operations ______________________________

set_help = <function set_help.<locals>._set_text at 0x7fe7598b8bf8>

    def test_get_operations(set_help):
        set_help(help_text)
>       assert _get_operations() == dnf_operations
E       AssertionError: assert [b'autoremove...ro-sync', ...] == ['autoremove',...ro-sync', ...]
E         At index 0 diff: b'autoremove' != 'autoremove'
E         Use -v to get the full diff

tests/rules/test_dnf_no_such_command.py:179: AssertionError
=========================== 1 failed in 0.09 seconds ===========================
