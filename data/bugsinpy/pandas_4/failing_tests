coverage run -m pytest pandas/tests/indexes/multi/test_join.py::test_join_multi_return_indexers
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.2, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.15.1
collected 1 item

pandas/tests/indexes/multi/test_join.py F                                [100%]

=================================== FAILURES ===================================
_______________________ test_join_multi_return_indexers ________________________

    def test_join_multi_return_indexers():
        # GH 34074
    
        midx1 = pd.MultiIndex.from_product([[1, 2], [3, 4], [5, 6]], names=["a", "b", "c"])
        midx2 = pd.MultiIndex.from_product([[1, 2], [3, 4]], names=["a", "b"])
    
        result = midx1.join(midx2, return_indexers=False)
>       tm.assert_index_equal(result, midx1)

pandas/tests/indexes/multi/test_join.py:115: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = (MultiIndex([(1, 3, 5),
            (1, 3, 6),
            (1, 4, 5),
            (1, 4, 6),
            (2, 3, 5),
  ...       (2, 4, 6)],
           names=['a', 'b', 'c']), array([0, 1, 2, 3, 4, 5, 6, 7]), array([0, 0, 1, 1, 2, 2, 3, 3]))
right = MultiIndex([(1, 3, 5),
            (1, 3, 6),
            (1, 4, 5),
            (1, 4, 6),
            (2, 3, 5),
            (2, 3, 6),
            (2, 4, 5),
            (2, 4, 6)],
           names=['a', 'b', 'c'])
cls = <class 'pandas.core.indexes.base.Index'>

    def _check_isinstance(left, right, cls):
        """
        Helper method for our assert_* methods that ensures that
        the two objects being compared have the right type before
        proceeding with the comparison.
    
        Parameters
        ----------
        left : The first object being compared.
        right : The second object being compared.
        cls : The class type to check against.
    
        Raises
        ------
        AssertionError : Either `left` or `right` is not an instance of `cls`.
        """
        cls_name = cls.__name__
    
        if not isinstance(left, cls):
>           raise AssertionError(
                f"{cls_name} Expected type {cls}, found {type(left)} instead"
            )
E           AssertionError: Index Expected type <class 'pandas.core.indexes.base.Index'>, found <class 'tuple'> instead

pandas/_testing.py:410: AssertionError
=========================== short test summary info ============================
FAILED pandas/tests/indexes/multi/test_join.py::test_join_multi_return_indexers
============================== 1 failed in 0.20s ===============================
