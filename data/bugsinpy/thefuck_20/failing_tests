coverage run -m pytest tests/rules/test_dirty_unzip.py::test_get_new_command
============================= test session starts ==============================
platform linux -- Python 3.7.0, pytest-3.10.1, py-1.8.1, pluggy-0.13.1
benchmark: 3.2.3 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /home/user/BugsInPy/temp/projects/thefuck, inifile:
plugins: benchmark-3.2.3, mock-3.1.0, docker-pexpect-0.9
collected 4 items

tests/rules/test_dirty_unzip.py .FF.                                     [100%]

=================================== FAILURES ===================================
__ test_get_new_command[unzip foo\\ bar.zip-unzip foo\\ bar.zip -d 'foo bar'] __

zip_error = None, script = 'unzip foo\\ bar.zip'
fixed = "unzip foo\\ bar.zip -d 'foo bar'"

    @pytest.mark.parametrize('script,fixed', [
        ('unzip foo', 'unzip foo -d foo'),
        (R"unzip foo\ bar.zip", R"unzip foo\ bar.zip -d 'foo bar'"),
        (R"unzip 'foo bar.zip'", R"unzip 'foo bar.zip' -d 'foo bar'"),
        ('unzip foo.zip', 'unzip foo.zip -d foo')])
    def test_get_new_command(zip_error, script, fixed):
>       assert get_new_command(Command(script=script)) == fixed
E       assert 'unzip foo\\ bar.zip -d foo\\' == "unzip foo\\ b... -d 'foo bar'"
E         - unzip foo\ bar.zip -d foo\
E         ?                          ^
E         + unzip foo\ bar.zip -d 'foo bar'
E         ?                       +   ^^^^^

/home/user/BugsInPy/temp/projects/thefuck/tests/rules/test_dirty_unzip.py:50: AssertionError
__ test_get_new_command[unzip 'foo bar.zip'-unzip 'foo bar.zip' -d 'foo bar'] __

zip_error = None, script = "unzip 'foo bar.zip'"
fixed = "unzip 'foo bar.zip' -d 'foo bar'"

    @pytest.mark.parametrize('script,fixed', [
        ('unzip foo', 'unzip foo -d foo'),
        (R"unzip foo\ bar.zip", R"unzip foo\ bar.zip -d 'foo bar'"),
        (R"unzip 'foo bar.zip'", R"unzip 'foo bar.zip' -d 'foo bar'"),
        ('unzip foo.zip', 'unzip foo.zip -d foo')])
    def test_get_new_command(zip_error, script, fixed):
>       assert get_new_command(Command(script=script)) == fixed
E       assert "unzip 'foo bar.zip' -d 'foo" == "unzip 'foo ba...' -d 'foo bar'"
E         - unzip 'foo bar.zip' -d 'foo
E         + unzip 'foo bar.zip' -d 'foo bar'
E         ?                            +++++

/home/user/BugsInPy/temp/projects/thefuck/tests/rules/test_dirty_unzip.py:50: AssertionError
====================== 2 failed, 2 passed in 0.10 seconds ======================
