coverage run -m pytest tests/rules/test_man.py::test_get_new_command
============================= test session starts ==============================
platform linux -- Python 3.7.0, pytest-3.10.1, py-1.8.1, pluggy-0.13.1
benchmark: 3.2.3 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /home/user/BugsInPy/temp/projects/thefuck, inifile:
plugins: benchmark-3.2.3, mock-3.1.0, docker-pexpect-0.9
collected 8 items

tests/rules/test_man.py FF......                                         [100%]

=================================== FAILURES ===================================
_________________ test_get_new_command[command0-new_command0] __________________

command = Command(script=man read, stdout=, stderr=)
new_command = ['man 3 read', 'man 2 read', 'read --help']

    @pytest.mark.parametrize('command, new_command', [
        (Command('man read'), ['man 3 read', 'man 2 read', 'read --help']),
        (Command('man missing', stderr="No manual entry for missing\n"), ['missing --help']),
        (Command('man 2 read'), 'man 3 read'),
        (Command('man 3 read'), 'man 2 read'),
        (Command('man -s2 read'), 'man -s3 read'),
        (Command('man -s3 read'), 'man -s2 read'),
        (Command('man -s 2 read'), 'man -s 3 read'),
        (Command('man -s 3 read'), 'man -s 2 read')])
    def test_get_new_command(command, new_command):
>       assert get_new_command(command) == new_command
E       AssertionError: assert ['read --help... 'man 2 read'] == ['man 3 read',...'read --help']
E         At index 0 diff: 'read --help' != 'man 3 read'
E         Use -v to get the full diff

tests/rules/test_man.py:35: AssertionError
_________________ test_get_new_command[command1-new_command1] __________________

command = Command(script=man missing, stdout=, stderr=No manual entry for missing
)
new_command = ['missing --help']

    @pytest.mark.parametrize('command, new_command', [
        (Command('man read'), ['man 3 read', 'man 2 read', 'read --help']),
        (Command('man missing', stderr="No manual entry for missing\n"), ['missing --help']),
        (Command('man 2 read'), 'man 3 read'),
        (Command('man 3 read'), 'man 2 read'),
        (Command('man -s2 read'), 'man -s3 read'),
        (Command('man -s3 read'), 'man -s2 read'),
        (Command('man -s 2 read'), 'man -s 3 read'),
        (Command('man -s 3 read'), 'man -s 2 read')])
    def test_get_new_command(command, new_command):
>       assert get_new_command(command) == new_command
E       AssertionError: assert ['missing --h...an 2 missing'] == ['missing --help']
E         Left contains more items, first extra item: 'man 3 missing'
E         Use -v to get the full diff

tests/rules/test_man.py:35: AssertionError
====================== 2 failed, 6 passed in 0.09 seconds ======================
