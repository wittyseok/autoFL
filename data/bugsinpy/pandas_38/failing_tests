coverage run -m pytest pandas/tests/frame/test_reshape.py::TestDataFrameReshape::test_unstack_long_index
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.2, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.15.1
collected 1 item

pandas/tests/frame/test_reshape.py F                                     [100%]

=================================== FAILURES ===================================
_________________ TestDataFrameReshape.test_unstack_long_index _________________

self = MultiIndex([(0, 0)],
           names=['i1', 'i6']), level = 2

    def _get_level_number(self, level) -> int:
        count = self.names.count(level)
        if (count > 1) and not is_integer(level):
            raise ValueError(
                f"The name {level} occurs multiple times, use a level number"
            )
        try:
>           level = self.names.index(level)
E           ValueError: 2 is not in list

pandas/core/indexes/multi.py:1402: ValueError

The above exception was the direct cause of the following exception:

self = <pandas.tests.frame.test_reshape.TestDataFrameReshape object at 0x7f70c21ac790>

    def test_unstack_long_index(self):
        # PH 32624: Error when using a lot of indices to unstack.
        # The error occurred only, if a lot of indices are used.
        df = pd.DataFrame(
            [[1]],
            columns=pd.MultiIndex.from_tuples([[0]], names=["c1"]),
            index=pd.MultiIndex.from_tuples(
                [[0, 0, 1, 0, 0, 0, 1]],
                names=["i1", "i2", "i3", "i4", "i5", "i6", "i7"],
            ),
        )
>       result = df.unstack(["i2", "i3", "i4", "i5", "i6", "i7"])

pandas/tests/frame/test_reshape.py:779: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/core/frame.py:6452: in unstack
    return unstack(self, level, fill_value)
pandas/core/reshape/reshape.py:403: in unstack
    return _unstack_multiple(obj, level, fill_value=fill_value)
pandas/core/reshape/reshape.py:365: in _unstack_multiple
    result = result.unstack(val, fill_value=fill_value)
pandas/core/frame.py:6452: in unstack
    return unstack(self, level, fill_value)
pandas/core/reshape/reshape.py:413: in unstack
    return _unstack_frame(obj, level, fill_value=fill_value)
pandas/core/reshape/reshape.py:437: in _unstack_frame
    return _Unstacker(
pandas/core/reshape/reshape.py:115: in __init__
    self.level = self.index._get_level_number(level)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = MultiIndex([(0, 0)],
           names=['i1', 'i6']), level = 2

    def _get_level_number(self, level) -> int:
        count = self.names.count(level)
        if (count > 1) and not is_integer(level):
            raise ValueError(
                f"The name {level} occurs multiple times, use a level number"
            )
        try:
            level = self.names.index(level)
        except ValueError as err:
            if not is_integer(level):
                raise KeyError(f"Level {level} not found") from err
            elif level < 0:
                level += self.nlevels
                if level < 0:
                    orig_level = level - self.nlevels
                    raise IndexError(
                        f"Too many levels: Index has only {self.nlevels} levels, "
                        f"{orig_level} is not a valid level number"
                    ) from err
            # Note: levels are zero-based
            elif level >= self.nlevels:
>               raise IndexError(
                    f"Too many levels: Index has only {self.nlevels} levels, "
                    f"not {level + 1}"
                ) from err
E               IndexError: Too many levels: Index has only 2 levels, not 3

pandas/core/indexes/multi.py:1416: IndexError
=========================== short test summary info ============================
FAILED pandas/tests/frame/test_reshape.py::TestDataFrameReshape::test_unstack_long_index
============================== 1 failed in 0.72s ===============================

coverage run -m pytest pandas/tests/frame/test_reshape.py::TestDataFrameReshape::test_unstack_multi_level_cols
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.2, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.15.1
collected 1 item

pandas/tests/frame/test_reshape.py F                                     [100%]

=================================== FAILURES ===================================
______________ TestDataFrameReshape.test_unstack_multi_level_cols ______________

self = <pandas.tests.frame.test_reshape.TestDataFrameReshape object at 0x7fccdd972820>

    def test_unstack_multi_level_cols(self):
        # PH 24729: Unstack a df with multi level columns
        df = pd.DataFrame(
            [[0.0, 0.0], [0.0, 0.0]],
            columns=pd.MultiIndex.from_tuples(
                [["B", "C"], ["B", "D"]], names=["c1", "c2"]
            ),
            index=pd.MultiIndex.from_tuples(
                [[10, 20, 30], [10, 20, 40]], names=["i1", "i2", "i3"],
            ),
        )
>       assert df.unstack(["i2", "i1"]).columns.names[-2:] == ["i2", "i1"]
E       AssertionError: assert FrozenList(['i2', 'i3']) == ['i2', 'i1']
E         At index 1 diff: 'i3' != 'i1'
E         Use -v to get the full diff

pandas/tests/frame/test_reshape.py:801: AssertionError
=========================== short test summary info ============================
FAILED pandas/tests/frame/test_reshape.py::TestDataFrameReshape::test_unstack_multi_level_cols
============================== 1 failed in 0.23s ===============================

coverage run -m pytest pandas/tests/frame/test_reshape.py::TestDataFrameReshape::test_unstack_multi_level_rows_and_cols
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.2, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.15.1
collected 1 item

pandas/tests/frame/test_reshape.py F                                     [100%]

=================================== FAILURES ===================================
_________ TestDataFrameReshape.test_unstack_multi_level_rows_and_cols __________

self = <pandas.tests.frame.test_reshape.TestDataFrameReshape object at 0x7f68352bc670>

    def test_unstack_multi_level_rows_and_cols(self):
        # PH 28306: Unstack df with multi level cols and rows
        df = pd.DataFrame(
            [[1, 2], [3, 4], [-1, -2], [-3, -4]],
            columns=pd.MultiIndex.from_tuples([["a", "b", "c"], ["d", "e", "f"]]),
            index=pd.MultiIndex.from_tuples(
                [
                    ["m1", "P3", 222],
                    ["m1", "A5", 111],
                    ["m2", "P3", 222],
                    ["m2", "A5", 111],
                ],
                names=["i1", "i2", "i3"],
            ),
        )
        result = df.unstack(["i3", "i2"])
        expected = df.unstack(["i3"]).unstack(["i2"])
>       tm.assert_frame_equal(result, expected)

pandas/tests/frame/test_reshape.py:820: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/_libs/testing.pyx:65: in pandas._libs.testing.assert_almost_equal
    cpdef assert_almost_equal(a, b,
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise_assert_detail(obj, msg, lobj, robj, index_values=index_values)
E   AssertionError: DataFrame.index are different
E   
E   DataFrame.index values are different (100.0 %)
E   [left]:  Index(['A5', 'P3'], dtype='object', name='i2')
E   [right]: Index(['m1', 'm2'], dtype='object', name='i1')

pandas/_libs/testing.pyx:180: AssertionError
=========================== short test summary info ============================
FAILED pandas/tests/frame/test_reshape.py::TestDataFrameReshape::test_unstack_multi_level_rows_and_cols
============================== 1 failed in 0.25s ===============================
