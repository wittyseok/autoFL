coverage run -m pytest pandas/tests/frame/test_arithmetic.py::test_pow_with_realignment
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.2, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.15.1
collected 1 item

pandas/tests/frame/test_arithmetic.py F                                  [100%]

=================================== FAILURES ===================================
__________________________ test_pow_with_realignment ___________________________

    def test_pow_with_realignment():
        # GH#32685 pow has special semantics for operating with null values
        left = pd.DataFrame({"A": [0, 1, 2]})
        right = pd.DataFrame(index=[0, 1, 2])
    
        result = left ** right
        expected = pd.DataFrame({"A": [np.nan, 1.0, np.nan]})
>       tm.assert_frame_equal(result, expected)

pandas/tests/frame/test_arithmetic.py:835: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/_libs/testing.pyx:65: in pandas._libs.testing.assert_almost_equal
    cpdef assert_almost_equal(a, b,
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise_assert_detail(obj, msg, lobj, robj)
E   AssertionError: DataFrame.iloc[:, 0] (column name="A") are different
E   
E   DataFrame.iloc[:, 0] (column name="A") values are different (33.33333 %)
E   [left]:  [nan, nan, nan]
E   [right]: [nan, 1.0, nan]

pandas/_libs/testing.pyx:174: AssertionError
=========================== short test summary info ============================
FAILED pandas/tests/frame/test_arithmetic.py::test_pow_with_realignment - Ass...
============================== 1 failed in 0.35s ===============================
