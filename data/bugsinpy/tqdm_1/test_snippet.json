[
    {
        "name": "tqdm.tests.tests_contrib.incr#10",
        "src_path": "tqdm/tests/tests_contrib.py",
        "class_name": "tqdm.tests.tests_contrib",
        "signature": "tqdm.tests.tests_contrib.incr(x)",
        "snippet": "def incr(x):\n    \"\"\"Dummy function\"\"\"\n    return x + 1",
        "begin_line": 10,
        "end_line": 12,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tqdm.tests.tests_contrib.test_enumerate#16",
        "src_path": "tqdm/tests/tests_contrib.py",
        "class_name": "tqdm.tests.tests_contrib",
        "signature": "tqdm.tests.tests_contrib.test_enumerate()",
        "snippet": "def test_enumerate():\n    \"\"\"Test contrib.tenumerate\"\"\"\n    with closing(StringIO()) as our_file:\n        a = range(9)\n        assert list(tenumerate(a, file=our_file)) == list(enumerate(a))\n        assert list(tenumerate(a, 42, file=our_file)) == list(enumerate(a, 42))",
        "begin_line": 16,
        "end_line": 21,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tqdm.tests.tests_contrib.test_enumerate_numpy#25",
        "src_path": "tqdm/tests/tests_contrib.py",
        "class_name": "tqdm.tests.tests_contrib",
        "signature": "tqdm.tests.tests_contrib.test_enumerate_numpy()",
        "snippet": "def test_enumerate_numpy():\n    \"\"\"Test contrib.tenumerate(numpy.ndarray)\"\"\"\n    try:\n        import numpy as np\n    except ImportError:\n        raise SkipTest\n    with closing(StringIO()) as our_file:\n        a = np.arange(9)\n        assert list(tenumerate(a, file=our_file)) == list(np.ndenumerate(a))",
        "begin_line": 25,
        "end_line": 33,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tqdm.tests.tests_contrib.test_zip#37",
        "src_path": "tqdm/tests/tests_contrib.py",
        "class_name": "tqdm.tests.tests_contrib",
        "signature": "tqdm.tests.tests_contrib.test_zip()",
        "snippet": "def test_zip():\n    \"\"\"Test contrib.tzip\"\"\"\n    with closing(StringIO()) as our_file:\n        a = range(9)\n        b = [i + 1 for i in a]\n        if sys.version_info[:1] < (3,):\n            assert tzip(a, b, file=our_file) == zip(a, b)\n        else:\n            gen = tzip(a, b, file=our_file)\n            assert gen != list(zip(a, b))\n            assert list(gen) == list(zip(a, b))",
        "begin_line": 37,
        "end_line": 47,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tqdm.tests.tests_contrib.test_map#51",
        "src_path": "tqdm/tests/tests_contrib.py",
        "class_name": "tqdm.tests.tests_contrib",
        "signature": "tqdm.tests.tests_contrib.test_map()",
        "snippet": "def test_map():\n    \"\"\"Test contrib.tmap\"\"\"\n    with closing(StringIO()) as our_file:\n        a = range(9)\n        b = [i + 1 for i in a]\n        if sys.version_info[:1] < (3,):\n            assert tmap(lambda x: x + 1, a, file=our_file) == map(incr, a)\n        else:\n            gen = tmap(lambda x: x + 1, a, file=our_file)\n            assert gen != b\n            assert list(gen) == b",
        "begin_line": 51,
        "end_line": 61,
        "comment": "",
        "is_bug": false
    }
]