coverage run -m pytest pandas/tests/frame/test_indexing.py::TestDataFrameIndexing::test_reindex_limit
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.16.0
collected 1 item

pandas/tests/frame/test_indexing.py F                                    [100%]

=================================== FAILURES ===================================
___________________ TestDataFrameIndexing.test_reindex_limit ___________________

self = <pandas.tests.frame.test_indexing.TestDataFrameIndexing object at 0x7f6e9aff08b0>

    def test_reindex_limit(self):
        # GH 28631
        data = [["A", "A", "A"], ["B", "B", "B"], ["C", "C", "C"], ["D", "D", "D"]]
        exp_data = [
            ["A", "A", "A"],
            ["B", "B", "B"],
            ["C", "C", "C"],
            ["D", "D", "D"],
            ["D", "D", "D"],
            [np.nan, np.nan, np.nan],
        ]
        df = DataFrame(data)
        result = df.reindex([0, 1, 2, 3, 4, 5], method="ffill", limit=1)
        expected = DataFrame(exp_data)
>       tm.assert_frame_equal(result, expected)

pandas/tests/frame/test_indexing.py:2234: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/_libs/testing.pyx:65: in pandas._libs.testing.assert_almost_equal
    cpdef assert_almost_equal(a, b,
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise_assert_detail(obj, msg, lobj, robj)
E   AssertionError: DataFrame.iloc[:, 0] are different
E   
E   DataFrame.iloc[:, 0] values are different (16.66667 %)
E   [left]:  [A, B, C, D, D, D]
E   [right]: [A, B, C, D, D, nan]

pandas/_libs/testing.pyx:176: AssertionError
=========================== short test summary info ============================
FAILED pandas/tests/frame/test_indexing.py::TestDataFrameIndexing::test_reindex_limit
============================== 1 failed in 0.56s ===============================

coverage run -m pytest pandas/tests/indexes/test_range.py::TestRangeIndex::test_get_indexer_limit
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.16.0
collected 1 item

pandas/tests/indexes/test_range.py F                                     [100%]

=================================== FAILURES ===================================
____________________ TestRangeIndex.test_get_indexer_limit _____________________

self = <pandas.tests.indexes.test_range.TestRangeIndex object at 0x7f96097519d0>

    def test_get_indexer_limit(self):
        # GH 28631
        idx = RangeIndex(4)
        target = RangeIndex(6)
        result = idx.get_indexer(target, method="pad", limit=1)
        expected = np.array([0, 1, 2, 3, 3, -1], dtype=np.intp)
>       tm.assert_numpy_array_equal(result, expected)

pandas/tests/indexes/test_range.py:425: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([0, 1, 2, 3, 3, 3]), right = array([ 0,  1,  2,  3,  3, -1])
err_msg = None

    def _raise(left, right, err_msg):
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj,
                    "{obj} shapes are different".format(obj=obj),
                    left.shape,
                    right.shape,
                )
    
            diff = 0
            for l, r in zip(left, right):
                # count up differences
                if not array_equivalent(l, r, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = "{obj} values are different ({pct} %)".format(
                obj=obj, pct=np.round(diff, 5)
            )
>           raise_assert_detail(obj, msg, left, right)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (16.66667 %)
E           [left]:  [0, 1, 2, 3, 3, 3]
E           [right]: [0, 1, 2, 3, 3, -1]

pandas/util/testing.py:1004: AssertionError
=========================== short test summary info ============================
FAILED pandas/tests/indexes/test_range.py::TestRangeIndex::test_get_indexer_limit
============================== 1 failed in 0.41s ===============================
