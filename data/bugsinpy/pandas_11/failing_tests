coverage run -m pytest pandas/tests/reshape/test_concat.py::test_duplicate_keys
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.2, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.15.1
collected 2 items

pandas/tests/reshape/test_concat.py FF                                   [100%]

=================================== FAILURES ===================================
__________________________ test_duplicate_keys[keys0] __________________________

keys = ['e', 'f', 'f']

    @pytest.mark.parametrize("keys", [["e", "f", "f"], ["f", "e", "f"]])
    def test_duplicate_keys(keys):
        # GH 33654
        df = DataFrame({"a": [1, 2, 3], "b": [4, 5, 6]})
        s1 = Series([7, 8, 9], name="c")
        s2 = Series([10, 11, 12], name="d")
>       result = concat([df, s1, s2], axis=1, keys=keys)

pandas/tests/reshape/test_concat.py:2813: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/core/reshape/concat.py:271: in concat
    op = _Concatenator(
pandas/core/reshape/concat.py:451: in __init__
    self.new_axes = self._get_new_axes()
pandas/core/reshape/concat.py:514: in _get_new_axes
    return [
pandas/core/reshape/concat.py:515: in <listcomp>
    self._get_concat_axis() if i == self.bm_axis else self._get_comb_axis(i)
pandas/core/reshape/concat.py:571: in _get_concat_axis
    concat_axis = _make_concat_multiindex(
pandas/core/reshape/concat.py:653: in _make_concat_multiindex
    return MultiIndex(
pandas/core/indexes/multi.py:283: in __new__
    result._set_codes(codes, copy=copy, validate=False)
pandas/core/indexes/multi.py:884: in _set_codes
    new_codes = FrozenList(
pandas/core/indexes/multi.py:885: in <genexpr>
    _coerce_indexer_frozen(level_codes, lev, copy=copy).view()
pandas/core/indexes/multi.py:3686: in _coerce_indexer_frozen
    array_like = coerce_indexer_dtype(array_like, categories)
pandas/core/dtypes/cast.py:845: in coerce_indexer_dtype
    return ensure_int8(indexer)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   return arr.astype(np.int8, copy=copy)
E   TypeError: int() argument must be a string, a bytes-like object or a number, not 'slice'

pandas/_libs/algos_common_helper.pxi:61: TypeError
__________________________ test_duplicate_keys[keys1] __________________________

keys = ['f', 'e', 'f']

    @pytest.mark.parametrize("keys", [["e", "f", "f"], ["f", "e", "f"]])
    def test_duplicate_keys(keys):
        # GH 33654
        df = DataFrame({"a": [1, 2, 3], "b": [4, 5, 6]})
        s1 = Series([7, 8, 9], name="c")
        s2 = Series([10, 11, 12], name="d")
>       result = concat([df, s1, s2], axis=1, keys=keys)

pandas/tests/reshape/test_concat.py:2813: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/core/reshape/concat.py:284: in concat
    return op.get_result()
pandas/core/reshape/concat.py:497: in get_result
    new_data = concatenate_block_managers(
pandas/core/internals/concat.py:84: in concatenate_block_managers
    return BlockManager(blocks, axes)
pandas/core/internals/managers.py:136: in __init__
    self._verify_integrity()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[ValueError('all arrays must be same length') raised in repr()] BlockManager object at 0x7fd43576bdc0>

    def _verify_integrity(self) -> None:
        mgr_shape = self.shape
        tot_items = sum(len(x.mgr_locs) for x in self.blocks)
        for block in self.blocks:
            if block._verify_integrity and block.shape[1:] != mgr_shape[1:]:
                raise construction_error(tot_items, block.shape[1:], self.axes)
        if len(self.items) != tot_items:
>           raise AssertionError(
                "Number of manager items must equal union of "
                f"block items\n# manager items: {len(self.items)}, # "
                f"tot_items: {tot_items}"
            )
E           AssertionError: Number of manager items must equal union of block items
E           # manager items: 10, # tot_items: 4

pandas/core/internals/managers.py:323: AssertionError
=========================== short test summary info ============================
FAILED pandas/tests/reshape/test_concat.py::test_duplicate_keys[keys0] - Type...
FAILED pandas/tests/reshape/test_concat.py::test_duplicate_keys[keys1] - Asse...
============================== 2 failed in 1.03s ===============================
