coverage run -m pytest tests/keras/backend/backend_test.py::TestBackend::test_ctc
============================= test session starts ==============================
platform linux -- Python 3.7.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1 -- /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/bin/python
cachedir: .pytest_cache
rootdir: /home/user/BugsInPy/temp/projects/keras, inifile: pytest.ini
plugins: forked-1.1.3, xdist-1.32.0
gw0 I / gw1 I

[gw0] linux Python 3.7.3 cwd: /home/user/BugsInPy/temp/projects/keras

[gw1] linux Python 3.7.3 cwd: /home/user/BugsInPy/temp/projects/keras

[gw0] Python 3.7.3 (default, Mar 27 2019, 22:11:17)  -- [GCC 7.3.0]

[gw1] Python 3.7.3 (default, Mar 27 2019, 22:11:17)  -- [GCC 7.3.0]
gw0 [1] / gw1 [1]

scheduling tests via LoadScheduling

tests/keras/backend/backend_test.py::TestBackend::test_ctc 
[gw0] [100%] FAILED tests/keras/backend/backend_test.py::TestBackend::test_ctc 

=================================== FAILURES ===================================
_____________________________ TestBackend.test_ctc _____________________________
[gw0] linux -- Python 3.7.3 /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/bin/python

self = <backend_test.TestBackend object at 0x7f034f556e10>

    @pytest.mark.skipif(K.backend() == 'cntk', reason='Not supported.')
    def test_ctc(self):
        if K.backend() == 'theano':
            ref = [1.73308, 3.81351]
        else:
            ref = [3.34211, 5.42262]
        # simplified version of TensorFlow's test
    
        label_lens = np.expand_dims(np.asarray([5, 4]), 1)
        input_lens = np.expand_dims(np.asarray([5, 5]), 1)  # number of timesteps
    
        # dimensions are batch x time x categories
        labels = np.asarray([[0, 1, 2, 1, 0], [0, 1, 1, 0, -1]])
        inputs = np.asarray(
            [[[0.633766, 0.221185, 0.0917319, 0.0129757, 0.0142857, 0.0260553],
              [0.111121, 0.588392, 0.278779, 0.0055756, 0.00569609, 0.010436],
              [0.0357786, 0.633813, 0.321418, 0.00249248, 0.00272882, 0.0037688],
              [0.0663296, 0.643849, 0.280111, 0.00283995, 0.0035545, 0.00331533],
              [0.458235, 0.396634, 0.123377, 0.00648837, 0.00903441, 0.00623107]],
             [[0.30176, 0.28562, 0.0831517, 0.0862751, 0.0816851, 0.161508],
              [0.24082, 0.397533, 0.0557226, 0.0546814, 0.0557528, 0.19549],
              [0.230246, 0.450868, 0.0389607, 0.038309, 0.0391602, 0.202456],
              [0.280884, 0.429522, 0.0326593, 0.0339046, 0.0326856, 0.190345],
              [0.423286, 0.315517, 0.0338439, 0.0393744, 0.0339315, 0.154046]]],
            dtype=np.float32)
    
        k_labels = K.variable(labels, dtype="int32")
        k_inputs = K.variable(inputs, dtype="float32")
        k_input_lens = K.variable(input_lens, dtype="int32")
        k_label_lens = K.variable(label_lens, dtype="int32")
        res = K.eval(K.ctc_batch_cost(k_labels, k_inputs, k_input_lens, k_label_lens))
        assert_allclose(res[0, :] if K.backend() == 'theano' else res[:, 0], ref, atol=1e-05)
    
        # test when batch_size = 1, that is, one sample only
        # get only first sample from above test case
        if K.backend() == 'theano':
            ref = [1.73308]
        else:
            ref = [3.34211]
    
        input_lens = np.expand_dims(np.asarray([5]), 1)
        label_lens = np.expand_dims(np.asarray([5]), 1)
    
        labels = np.asarray([[0, 1, 2, 1, 0]])
        inputs = np.asarray(
            [[[0.633766, 0.221185, 0.0917319, 0.0129757, 0.0142857, 0.0260553],
              [0.111121, 0.588392, 0.278779, 0.0055756, 0.00569609, 0.010436],
              [0.0357786, 0.633813, 0.321418, 0.00249248, 0.00272882, 0.0037688],
              [0.0663296, 0.643849, 0.280111, 0.00283995, 0.0035545, 0.00331533],
              [0.458235, 0.396634, 0.123377, 0.00648837, 0.00903441, 0.00623107]]],
            dtype=np.float32)
    
        k_labels = K.variable(labels, dtype="int32")
        k_inputs = K.variable(inputs, dtype="float32")
        k_input_lens = K.variable(input_lens, dtype="int32")
        k_label_lens = K.variable(label_lens, dtype="int32")
>       res = K.eval(K.ctc_batch_cost(k_labels, k_inputs, k_input_lens, k_label_lens))

tests/keras/backend/backend_test.py:1501: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
keras/backend/tensorflow_backend.py:3947: in ctc_batch_cost
    sparse_labels = tf.to_int32(ctc_label_dense_to_sparse(y_true, label_length))
keras/backend/tensorflow_backend.py:3911: in ctc_label_dense_to_sparse
    initializer=init, parallel_iterations=1)
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/ops/functional_ops.py:651: in scan
    n = (tensor_shape.dimension_value(elems_flat[0].shape[0])
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TensorShape([]), key = 0

    def __getitem__(self, key):
      """Returns the value of a dimension or a shape, depending on the key.
    
      Args:
        key: If `key` is an integer, returns the dimension at that index;
          otherwise if `key` is a slice, returns a TensorShape whose
          dimensions are those selected by the slice from `self`.
    
      Returns:
        An integer if `key` is an integer, or a `TensorShape` if `key` is a
        slice.
    
      Raises:
        ValueError: If `key` is a slice and `self` is completely unknown and
          the step is set.
      """
      if self._dims is not None:
        if isinstance(key, slice):
          return TensorShape(self._dims[key])
        else:
          if self._v2_behavior:
            return self._dims[key].value
          else:
>           return self._dims[key]
E           IndexError: list index out of range

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/tensor_shape.py:788: IndexError
----------------------------- Captured stderr call -----------------------------
WARNING:tensorflow:From /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/op_def_library.py:263: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.
Instructions for updating:
Colocations handled automatically by placer.
WARNING:tensorflow:From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:3945: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.cast instead.
WARNING:tensorflow:From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:3925: to_int64 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.cast instead.
2023-09-01 19:08:44.417614: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2023-09-01 19:08:44.436934: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3399905000 Hz
2023-09-01 19:08:44.437528: I tensorflow/compiler/xla/service/service.cc:150] XLA service 0x55a38c0647a0 executing computations on platform Host. Devices:
2023-09-01 19:08:44.437544: I tensorflow/compiler/xla/service/service.cc:158]   StreamExecutor device (0): <undefined>, <undefined>
------------------------------ Captured log call -------------------------------
WARNING  tensorflow:deprecation.py:323 From /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/op_def_library.py:263: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.
Instructions for updating:
Colocations handled automatically by placer.
WARNING  tensorflow:deprecation.py:323 From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:3945: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.cast instead.
WARNING  tensorflow:deprecation.py:323 From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:3925: to_int64 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.cast instead.
=============================== warnings summary ===============================
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/pywrap_tensorflow_internal.py:15
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/pywrap_tensorflow_internal.py:15
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/pywrap_tensorflow_internal.py:15: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
    import imp

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:526
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:526
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:526: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
    _np_qint8 = np.dtype([("qint8", np.int8, 1)])

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:527
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:527
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:527: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
    _np_quint8 = np.dtype([("quint8", np.uint8, 1)])

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:528
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:528
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:528: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
    _np_qint16 = np.dtype([("qint16", np.int16, 1)])

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:529
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:529
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:529: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
    _np_quint16 = np.dtype([("quint16", np.uint16, 1)])

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:530
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:530
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:530: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
    _np_qint32 = np.dtype([("qint32", np.int32, 1)])

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:535
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:535
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:535: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
    np_resource = np.dtype([("resource", np.ubyte, 1)])

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/util/nest.py:823
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/util/nest.py:823
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/util/nest.py:823: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
    _pywrap_tensorflow.RegisterType("Mapping", _collections.Mapping)

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/util/nest.py:824
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/util/nest.py:824
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/util/nest.py:824: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
    _pywrap_tensorflow.RegisterType("Sequence", _collections.Sequence)

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/training/checkpointable/data_structures.py:312
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/training/checkpointable/data_structures.py:312
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/training/checkpointable/data_structures.py:312: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
    class _ListWrapper(List, collections.MutableSequence,

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/training/checkpointable/data_structures.py:546
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/training/checkpointable/data_structures.py:546
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/training/checkpointable/data_structures.py:546: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
    class _DictWrapper(Mapping, collections.MutableMapping):

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/training/checkpointable/util.py:448
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/training/checkpointable/util.py:448
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/tensorflow/python/training/checkpointable/util.py:448: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
    class _ObjectIdentitySet(collections.MutableSet):

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:10
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:10
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:10: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _nlv = LooseVersion(_np_version)

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:11
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:11
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:11: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p14 = _nlv < LooseVersion("1.14")

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:12
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:12
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:12: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p15 = _nlv < LooseVersion("1.15")

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:13
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:13
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:13: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p16 = _nlv < LooseVersion("1.16")

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:14
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:14
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:14: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p17 = _nlv < LooseVersion("1.17")

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:15
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:15
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:15: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p18 = _nlv < LooseVersion("1.18")

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/setuptools/_distutils/version.py:346
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/setuptools/_distutils/version.py:346
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/setuptools/_distutils/version.py:346: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    other = LooseVersion(other)

/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
  /opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if LooseVersion(_np_version) >= LooseVersion("1.17.0"):

keras/callbacks.py:18
keras/callbacks.py:18
  /home/user/BugsInPy/temp/projects/keras/keras/callbacks.py:18: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
    from collections import Iterable

tests/keras/backend/backend_test.py:20
tests/keras/backend/backend_test.py:20
  /home/user/BugsInPy/temp/projects/keras/tests/keras/backend/backend_test.py:20: UserWarning: Could not import the CNTK backend
    warnings.warn('Could not import the CNTK backend')

tests/keras/backend/backend_test.py:34
tests/keras/backend/backend_test.py:34
  /home/user/BugsInPy/temp/projects/keras/tests/keras/backend/backend_test.py:34: UserWarning: Could not import the Theano backend
    warnings.warn('Could not import the Theano backend')

-- Docs: https://docs.pytest.org/en/latest/warnings.html
========================== slowest 10 test durations ===========================
0.23s call     tests/keras/backend/backend_test.py::TestBackend::test_ctc

(0.00 durations hidden.  Use -vv to show these durations.)
=========================== short test summary info ============================
FAILED tests/keras/backend/backend_test.py::TestBackend::test_ctc - IndexErro...
======================== 1 failed, 48 warnings in 2.47s ========================
/opt/conda/envs/7ba78bf48f247a0c342bdbb3158dc533/lib/python3.7/site-packages/coverage/control.py:793: CoverageWarning: No data was collected. (no-data-collected)
  self._warn("No data was collected.", slug="no-data-collected")
