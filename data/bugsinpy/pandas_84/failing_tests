coverage run -m pytest pandas/tests/frame/test_reshape.py::TestDataFrameReshape::test_unstack_tuplename_in_multiindex
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.16.0
collected 1 item

pandas/tests/frame/test_reshape.py F                                     [100%]

=================================== FAILURES ===================================
__________ TestDataFrameReshape.test_unstack_tuplename_in_multiindex ___________

self = MultiIndex([('a', 1),
            ('a', 2),
            ('a', 3),
            ('b', 1),
            ('b', 2),
        ...('b', 3),
            ('c', 1),
            ('c', 2),
            ('c', 3)],
           names=[('A', 'a'), ('B', 'b')])
level = 'A'

    def _get_level_number(self, level) -> int:
        count = self.names.count(level)
        if (count > 1) and not is_integer(level):
            raise ValueError(
                f"The name {level} occurs multiple times, use a level number"
            )
        try:
>           level = self.names.index(level)
E           ValueError: 'A' is not in list

pandas/core/indexes/multi.py:1286: ValueError

During handling of the above exception, another exception occurred:

self = <pandas.tests.frame.test_reshape.TestDataFrameReshape object at 0x7f56b4108d60>

    def test_unstack_tuplename_in_multiindex(self):
        # GH 19966
        idx = pd.MultiIndex.from_product(
            [["a", "b", "c"], [1, 2, 3]], names=[("A", "a"), ("B", "b")]
        )
        df = pd.DataFrame({"d": [1] * 9, "e": [2] * 9}, index=idx)
>       result = df.unstack(("A", "a"))

pandas/tests/frame/test_reshape.py:345: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/core/frame.py:6434: in unstack
    return unstack(self, level, fill_value)
pandas/core/reshape/reshape.py:398: in unstack
    return _unstack_multiple(obj, level, fill_value=fill_value)
pandas/core/reshape/reshape.py:320: in _unstack_multiple
    clocs = [index._get_level_number(i) for i in clocs]
pandas/core/reshape/reshape.py:320: in <listcomp>
    clocs = [index._get_level_number(i) for i in clocs]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = MultiIndex([('a', 1),
            ('a', 2),
            ('a', 3),
            ('b', 1),
            ('b', 2),
        ...('b', 3),
            ('c', 1),
            ('c', 2),
            ('c', 3)],
           names=[('A', 'a'), ('B', 'b')])
level = 'A'

    def _get_level_number(self, level) -> int:
        count = self.names.count(level)
        if (count > 1) and not is_integer(level):
            raise ValueError(
                f"The name {level} occurs multiple times, use a level number"
            )
        try:
            level = self.names.index(level)
        except ValueError:
            if not is_integer(level):
>               raise KeyError(f"Level {level} not found")
E               KeyError: 'Level A not found'

pandas/core/indexes/multi.py:1289: KeyError
=========================== short test summary info ============================
FAILED pandas/tests/frame/test_reshape.py::TestDataFrameReshape::test_unstack_tuplename_in_multiindex
============================== 1 failed in 0.69s ===============================

coverage run -m pytest pandas/tests/frame/test_reshape.py::TestDataFrameReshape::test_unstack_mixed_type_name_in_multiindex
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.16.0
collected 2 items

pandas/tests/frame/test_reshape.py F.                                    [100%]

=================================== FAILURES ===================================
_ TestDataFrameReshape.test_unstack_mixed_type_name_in_multiindex[unstack_idx0-expected_values0-expected_index0-expected_columns0] _

self = MultiIndex([('a', 1, 3),
            ('a', 1, 4),
            ('a', 2, 3),
            ('a', 2, 4),
            ('b', ...),
            ('b', 1, 4),
            ('b', 2, 3),
            ('b', 2, 4)],
           names=[('A', 'a'), 'B', 'C'])
level = 'A'

    def _get_level_number(self, level) -> int:
        count = self.names.count(level)
        if (count > 1) and not is_integer(level):
            raise ValueError(
                f"The name {level} occurs multiple times, use a level number"
            )
        try:
>           level = self.names.index(level)
E           ValueError: 'A' is not in list

pandas/core/indexes/multi.py:1286: ValueError

During handling of the above exception, another exception occurred:

self = <pandas.tests.frame.test_reshape.TestDataFrameReshape object at 0x7f263877cdf0>
unstack_idx = ('A', 'a')
expected_values = [[1, 1, 2, 2], [1, 1, 2, 2], [1, 1, 2, 2], [1, 1, 2, 2]]
expected_index = MultiIndex([(1, 3),
            (1, 4),
            (2, 3),
            (2, 4)],
           names=['B', 'C'])
expected_columns = MultiIndex([('d', 'a'),
            ('d', 'b'),
            ('e', 'a'),
            ('e', 'b')],
           names=[None, ('A', 'a')])

    @pytest.mark.parametrize(
        "unstack_idx, expected_values, expected_index, expected_columns",
        [
            (
                ("A", "a"),
                [[1, 1, 2, 2], [1, 1, 2, 2], [1, 1, 2, 2], [1, 1, 2, 2]],
                pd.MultiIndex.from_tuples(
                    [(1, 3), (1, 4), (2, 3), (2, 4)], names=["B", "C"]
                ),
                pd.MultiIndex.from_tuples(
                    [("d", "a"), ("d", "b"), ("e", "a"), ("e", "b")],
                    names=[None, ("A", "a")],
                ),
            ),
            (
                (("A", "a"), "B"),
                [[1, 1, 1, 1, 2, 2, 2, 2], [1, 1, 1, 1, 2, 2, 2, 2]],
                pd.Index([3, 4], name="C"),
                pd.MultiIndex.from_tuples(
                    [
                        ("d", "a", 1),
                        ("d", "a", 2),
                        ("d", "b", 1),
                        ("d", "b", 2),
                        ("e", "a", 1),
                        ("e", "a", 2),
                        ("e", "b", 1),
                        ("e", "b", 2),
                    ],
                    names=[None, ("A", "a"), "B"],
                ),
            ),
        ],
    )
    def test_unstack_mixed_type_name_in_multiindex(
        self, unstack_idx, expected_values, expected_index, expected_columns
    ):
        # GH 19966
        idx = pd.MultiIndex.from_product(
            [["a", "b"], [1, 2], [3, 4]], names=[("A", "a"), "B", "C"]
        )
        df = pd.DataFrame({"d": [1] * 8, "e": [2] * 8}, index=idx)
>       result = df.unstack(unstack_idx)

pandas/tests/frame/test_reshape.py:406: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/core/frame.py:6434: in unstack
    return unstack(self, level, fill_value)
pandas/core/reshape/reshape.py:398: in unstack
    return _unstack_multiple(obj, level, fill_value=fill_value)
pandas/core/reshape/reshape.py:320: in _unstack_multiple
    clocs = [index._get_level_number(i) for i in clocs]
pandas/core/reshape/reshape.py:320: in <listcomp>
    clocs = [index._get_level_number(i) for i in clocs]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = MultiIndex([('a', 1, 3),
            ('a', 1, 4),
            ('a', 2, 3),
            ('a', 2, 4),
            ('b', ...),
            ('b', 1, 4),
            ('b', 2, 3),
            ('b', 2, 4)],
           names=[('A', 'a'), 'B', 'C'])
level = 'A'

    def _get_level_number(self, level) -> int:
        count = self.names.count(level)
        if (count > 1) and not is_integer(level):
            raise ValueError(
                f"The name {level} occurs multiple times, use a level number"
            )
        try:
            level = self.names.index(level)
        except ValueError:
            if not is_integer(level):
>               raise KeyError(f"Level {level} not found")
E               KeyError: 'Level A not found'

pandas/core/indexes/multi.py:1289: KeyError
=========================== short test summary info ============================
FAILED pandas/tests/frame/test_reshape.py::TestDataFrameReshape::test_unstack_mixed_type_name_in_multiindex[unstack_idx0-expected_values0-expected_index0-expected_columns0]
========================= 1 failed, 1 passed in 0.66s ==========================
