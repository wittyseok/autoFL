coverage run -m pytest tests/keras/layers/recurrent_test.py::test_implementation_mode[LSTM]
============================= test session starts ==============================
platform linux -- Python 3.7.3, pytest-5.4.2, py-1.8.1, pluggy-0.13.1 -- /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/bin/python
cachedir: .pytest_cache
rootdir: /home/user/BugsInPy/temp/projects/keras, inifile: pytest.ini
plugins: forked-1.1.3, flaky-3.6.1, xdist-1.32.0, httpbin-1.0.0
gw0 I / gw1 I

[gw0] linux Python 3.7.3 cwd: /home/user/BugsInPy/temp/projects/keras

[gw1] linux Python 3.7.3 cwd: /home/user/BugsInPy/temp/projects/keras

[gw0] Python 3.7.3 (default, Mar 27 2019, 22:11:17)  -- [GCC 7.3.0]

[gw1] Python 3.7.3 (default, Mar 27 2019, 22:11:17)  -- [GCC 7.3.0]
gw0 [1] / gw1 [1]

scheduling tests via LoadScheduling

tests/keras/layers/recurrent_test.py::test_implementation_mode[LSTM] 
[gw0] [100%] FAILED tests/keras/layers/recurrent_test.py::test_implementation_mode[LSTM] 

=================================== FAILURES ===================================
________________________ test_implementation_mode[LSTM] ________________________
[gw0] linux -- Python 3.7.3 /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/bin/python

layer_class = <class 'keras.layers.recurrent.LSTM'>

    @rnn_test
    def test_implementation_mode(layer_class):
        for mode in [1, 2]:
            # Without dropout
            layer_test(layer_class,
                       kwargs={'units': units,
                               'implementation': mode},
                       input_shape=(num_samples, timesteps, embedding_dim))
            # With dropout
            layer_test(layer_class,
                       kwargs={'units': units,
                               'implementation': mode,
                               'dropout': 0.1,
                               'recurrent_dropout': 0.1},
                       input_shape=(num_samples, timesteps, embedding_dim))
            # Without bias
            layer_test(layer_class,
                       kwargs={'units': units,
                               'implementation': mode,
                               'use_bias': False},
>                      input_shape=(num_samples, timesteps, embedding_dim))

tests/keras/layers/recurrent_test.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
keras/utils/test_utils.py:85: in layer_test
    y = layer(x)
keras/layers/recurrent.py:483: in __call__
    return super(RNN, self).__call__(inputs, **kwargs)
keras/engine/topology.py:603: in __call__
    output = self.call(inputs, **kwargs)
keras/layers/recurrent.py:2004: in call
    initial_state=initial_state)
keras/layers/recurrent.py:590: in call
    input_length=timesteps)
keras/backend/tensorflow_backend.py:2533: in rnn
    outputs, _ = step_function(inputs[0], initial_states + constants)
keras/layers/recurrent.py:581: in step
    return self.cell.call(inputs, states, **kwargs)
keras/layers/recurrent.py:1806: in call
    x_i = K.dot(inputs_i, self.kernel_i) + self.bias_i
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/ops/math_ops.py:903: in binary_op_wrapper
    y, dtype_hint=x.dtype.base_dtype, name="y")
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py:1242: in convert_to_tensor_v2
    as_ref=False)
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py:1297: in internal_convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py:286: in _constant_tensor_conversion_function
    return constant(v, dtype=dtype, name=name)
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py:227: in constant
    allow_broadcast=True)
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py:265: in _constant_impl
    allow_broadcast=allow_broadcast))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

values = None, dtype = None, shape = None, verify_shape = False
allow_broadcast = True

    @tf_export("make_tensor_proto")
    def make_tensor_proto(values, dtype=None, shape=None, verify_shape=False,
                          allow_broadcast=False):
      """Create a TensorProto.
    
      In TensorFlow 2.0, representing tensors as protos should no longer be a
      common workflow. That said, this utility function is still useful for
      generating TF Serving request protos:
    
        request = tensorflow_serving.apis.predict_pb2.PredictRequest()
        request.model_spec.name = "my_model"
        request.model_spec.signature_name = "serving_default"
        request.inputs["images"].CopyFrom(tf.make_tensor_proto(X_new))
    
      make_tensor_proto accepts "values" of a python scalar, a python list, a
      numpy ndarray, or a numpy scalar.
    
      If "values" is a python scalar or a python list, make_tensor_proto
      first convert it to numpy ndarray. If dtype is None, the
      conversion tries its best to infer the right numpy data
      type. Otherwise, the resulting numpy array has a compatible data
      type with the given dtype.
    
      In either case above, the numpy ndarray (either the caller provided
      or the auto converted) must have the compatible type with dtype.
    
      make_tensor_proto then converts the numpy array to a tensor proto.
    
      If "shape" is None, the resulting tensor proto represents the numpy
      array precisely.
    
      Otherwise, "shape" specifies the tensor's shape and the numpy array
      can not have more elements than what "shape" specifies.
    
      Args:
        values:         Values to put in the TensorProto.
        dtype:          Optional tensor_pb2 DataType value.
        shape:          List of integers representing the dimensions of tensor.
        verify_shape:   Boolean that enables verification of a shape of values.
        allow_broadcast:  Boolean that enables allowing scalars and 1 length vector
            broadcasting. Cannot be true when verify_shape is true.
    
      Returns:
        A `TensorProto`. Depending on the type, it may contain data in the
        "tensor_content" attribute, which is not directly useful to Python programs.
        To access the values you should convert the proto back to a numpy ndarray
        with `tf.make_ndarray(proto)`.
    
        If `values` is a `TensorProto`, it is immediately returned; `dtype` and
        `shape` are ignored.
    
      Raises:
        TypeError:  if unsupported types are provided.
        ValueError: if arguments have inappropriate values or if verify_shape is
         True and shape of values is not equals to a shape from the argument.
    
      """
      if allow_broadcast and verify_shape:
        raise ValueError("allow_broadcast and verify_shape are not both allowed.")
      if isinstance(values, tensor_pb2.TensorProto):
        return values
    
      if dtype:
        dtype = dtypes.as_dtype(dtype)
    
      is_quantized = (
          dtype in [
              dtypes.qint8, dtypes.quint8, dtypes.qint16, dtypes.quint16,
              dtypes.qint32
          ])
    
      if _is_array_like(values):
        values = np.asarray(values)
    
      # We first convert value to a numpy array or scalar.
      if isinstance(values, (np.ndarray, np.generic)):
        if dtype and dtype.is_numpy_compatible:
          nparray = values.astype(dtype.as_numpy_dtype)
        else:
          nparray = values
      else:
        if values is None:
>         raise ValueError("None values not supported.")
E         ValueError: None values not supported.

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:437: ValueError
----------------------------- Captured stderr call -----------------------------
WARNING:tensorflow:From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:3626: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:1238: calling reduce_sum_v1 (from tensorflow.python.ops.math_ops) with keep_dims is deprecated and will be removed in a future version.
Instructions for updating:
keep_dims is deprecated, use keepdims instead
WARNING:tensorflow:From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:2353: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:158: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:163: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:172: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:180: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:187: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From /home/user/BugsInPy/temp/projects/keras/keras/optimizers.py:711: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/ops/math_grad.py:1424: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
WARNING:tensorflow:From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:671: calling Constant.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.
Instructions for updating:
Call initializer instance with the dtype argument instead of passing it to the constructor
WARNING:tensorflow:From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:949: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:936: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

WARNING:tensorflow:From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:2990: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.
Instructions for updating:
Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.
------------------------------ Captured log call -------------------------------
WARNING  tensorflow:module_wrapper.py:139 From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:3626: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING  tensorflow:deprecation.py:506 From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:1238: calling reduce_sum_v1 (from tensorflow.python.ops.math_ops) with keep_dims is deprecated and will be removed in a future version.
Instructions for updating:
keep_dims is deprecated, use keepdims instead
WARNING  tensorflow:module_wrapper.py:139 From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:2353: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING  tensorflow:module_wrapper.py:139 From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:158: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING  tensorflow:module_wrapper.py:139 From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:163: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING  tensorflow:module_wrapper.py:139 From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:172: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING  tensorflow:module_wrapper.py:139 From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:180: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING  tensorflow:module_wrapper.py:139 From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:187: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING  tensorflow:module_wrapper.py:139 From /home/user/BugsInPy/temp/projects/keras/keras/optimizers.py:711: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING  tensorflow:deprecation.py:323 From /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/ops/math_grad.py:1424: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
WARNING  tensorflow:deprecation.py:506 From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:671: calling Constant.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.
Instructions for updating:
Call initializer instance with the dtype argument instead of passing it to the constructor
WARNING  tensorflow:module_wrapper.py:139 From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:949: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING  tensorflow:module_wrapper.py:139 From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:936: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

WARNING  tensorflow:deprecation.py:506 From /home/user/BugsInPy/temp/projects/keras/keras/backend/tensorflow_backend.py:2990: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.
Instructions for updating:
Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.
=============================== warnings summary ===============================
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/h5py/__init__.py:46
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/h5py/__init__.py:46
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/h5py/__init__.py:46: DeprecationWarning: `np.typeDict` is a deprecated alias for `np.sctypeDict`.
    from ._conv import register_converters as _register_converters

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/pywrap_tensorflow_internal.py:15
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/pywrap_tensorflow_internal.py:15
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/pywrap_tensorflow_internal.py:15: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
    import imp

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:597
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:597
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:597: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.object,

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:605
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:605
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:605: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.bool,

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:639
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:639
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:639: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.object,

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:649
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:649
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:649: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.bool,

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:106
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:106
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:106: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.object:

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:108
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:108
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:108: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.bool:

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:10
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:10
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:10: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _nlv = LooseVersion(_np_version)

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:11
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:11
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:11: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p14 = _nlv < LooseVersion("1.14")

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:12
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:12
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:12: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p15 = _nlv < LooseVersion("1.15")

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:13
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:13
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:13: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p16 = _nlv < LooseVersion("1.16")

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:14
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:14
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:14: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p17 = _nlv < LooseVersion("1.17")

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:15
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:15
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:15: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p18 = _nlv < LooseVersion("1.18")

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/setuptools/_distutils/version.py:346
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/setuptools/_distutils/version.py:346
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/setuptools/_distutils/version.py:346: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    other = LooseVersion(other)

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if LooseVersion(_np_version) >= LooseVersion("1.17.0"):

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/_testing.py:24
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/_testing.py:24
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/pandas/_testing.py:24: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    import pandas._libs.testing as _testing

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:568
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:568
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:568: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    (np.object, string),

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:569
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:569
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:569: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    (np.bool, bool),

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:593
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:593
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:593: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    types_pb2.DT_STRING: np.object,

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:597
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:597
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:597: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    types_pb2.DT_BOOL: np.bool,

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:614
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:614
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:614: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    types_pb2.DT_STRING_REF: np.object,

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:619
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:619
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:619: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    types_pb2.DT_BOOL_REF: np.bool,

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:100
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:100
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:100: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.object: SlowAppendObjectArrayToTensorProto,

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:101
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:101
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:101: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.bool: SlowAppendBoolArrayToTensorProto,

keras/callbacks.py:15
keras/callbacks.py:15
  /home/user/BugsInPy/temp/projects/keras/keras/callbacks.py:15: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
    from collections import Iterable

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:521: 416 tests with warnings
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:521: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
    tensor_proto.tensor_content = nparray.tostring()

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/indexed_slices.py:339
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/python/framework/indexed_slices.py:339: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
    if not isinstance(values, collections.Sequence):

/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/contrib/learn/python/learn/learn_io/generator_io.py:26
  /opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/tensorflow_core/contrib/learn/python/learn/learn_io/generator_io.py:26: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
    from collections import Container

-- Docs: https://docs.pytest.org/en/latest/warnings.html
========================== slowest 10 test durations ===========================
7.30s call     tests/keras/layers/recurrent_test.py::test_implementation_mode[LSTM]

(0.00 durations hidden.  Use -vv to show these durations.)
=========================== short test summary info ============================
FAILED tests/keras/layers/recurrent_test.py::test_implementation_mode[LSTM]
======================= 1 failed, 472 warnings in 10.72s =======================
/opt/conda/envs/11a30c7184b1d2bc0687492d607ca913/lib/python3.7/site-packages/coverage/control.py:793: CoverageWarning: No data was collected. (no-data-collected)
  self._warn("No data was collected.", slug="no-data-collected")
