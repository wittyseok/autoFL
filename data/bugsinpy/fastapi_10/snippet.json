[
    {
        "name": "docs.src.path_operation_configuration.tutorial005.create_item#23",
        "src_path": "docs/src/path_operation_configuration/tutorial005.py",
        "class_name": "docs.src.path_operation_configuration.tutorial005",
        "signature": "docs.src.path_operation_configuration.tutorial005.create_item(*, item: Item)",
        "snippet": "async def create_item(*, item: Item):\n    \"\"\"\n    Create an item with all the information:\n\n    - **name**: each item must have a name\n    - **description**: a long description\n    - **price**: required\n    - **tax**: if the item doesn't have tax, you can omit this\n    - **tags**: a set of unique tag strings for this item\n    \"\"\"\n    return item",
        "begin_line": 23,
        "end_line": 33,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.websockets.tutorial001.get#43",
        "src_path": "docs/src/websockets/tutorial001.py",
        "class_name": "docs.src.websockets.tutorial001",
        "signature": "docs.src.websockets.tutorial001.get()",
        "snippet": "async def get():\n    return HTMLResponse(html)",
        "begin_line": 43,
        "end_line": 44,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.websockets.tutorial001.websocket_endpoint#48",
        "src_path": "docs/src/websockets/tutorial001.py",
        "class_name": "docs.src.websockets.tutorial001",
        "signature": "docs.src.websockets.tutorial001.websocket_endpoint(websocket: WebSocket)",
        "snippet": "async def websocket_endpoint(websocket: WebSocket):\n    await websocket.accept()\n    while True:\n        data = await websocket.receive_text()\n        await websocket.send_text(f\"Message text was: {data}\")",
        "begin_line": 48,
        "end_line": 52,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.bigger_applications.app.main.get_token_header#8",
        "src_path": "docs/src/bigger_applications/app/main.py",
        "class_name": "docs.src.bigger_applications.app.main",
        "signature": "docs.src.bigger_applications.app.main.get_token_header(x_token: str=Header(...))",
        "snippet": "async def get_token_header(x_token: str = Header(...)):\n    if x_token != \"fake-super-secret-token\":\n        raise HTTPException(status_code=400, detail=\"X-Token header invalid\")",
        "begin_line": 8,
        "end_line": 10,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0008896797153024911,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial005.verify_password#72",
        "src_path": "docs/src/security/tutorial005.py",
        "class_name": "docs.src.security.tutorial005",
        "signature": "docs.src.security.tutorial005.verify_password(plain_password, hashed_password)",
        "snippet": "def verify_password(plain_password, hashed_password):\n    return pwd_context.verify(plain_password, hashed_password)",
        "begin_line": 72,
        "end_line": 73,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0007380073800738007,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial005.get_password_hash#76",
        "src_path": "docs/src/security/tutorial005.py",
        "class_name": "docs.src.security.tutorial005",
        "signature": "docs.src.security.tutorial005.get_password_hash(password)",
        "snippet": "def get_password_hash(password):\n    return pwd_context.hash(password)",
        "begin_line": 76,
        "end_line": 77,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial005.get_user#80",
        "src_path": "docs/src/security/tutorial005.py",
        "class_name": "docs.src.security.tutorial005",
        "signature": "docs.src.security.tutorial005.get_user(db, username: str)",
        "snippet": "def get_user(db, username: str):\n    if username in db:\n        user_dict = db[username]\n        return UserInDB(**user_dict)",
        "begin_line": 80,
        "end_line": 83,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0007564296520423601,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial005.authenticate_user#86",
        "src_path": "docs/src/security/tutorial005.py",
        "class_name": "docs.src.security.tutorial005",
        "signature": "docs.src.security.tutorial005.authenticate_user(fake_db, username: str, password: str)",
        "snippet": "def authenticate_user(fake_db, username: str, password: str):\n    user = get_user(fake_db, username)\n    if not user:\n        return False\n    if not verify_password(password, user.hashed_password):\n        return False\n    return user",
        "begin_line": 86,
        "end_line": 92,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial005.create_access_token#95",
        "src_path": "docs/src/security/tutorial005.py",
        "class_name": "docs.src.security.tutorial005",
        "signature": "docs.src.security.tutorial005.create_access_token(*, data: dict, expires_delta: timedelta=None)",
        "snippet": "def create_access_token(*, data: dict, expires_delta: timedelta = None):\n    to_encode = data.copy()\n    if expires_delta:\n        expire = datetime.utcnow() + expires_delta\n    else:\n        expire = datetime.utcnow() + timedelta(minutes=15)\n    to_encode.update({\"exp\": expire})\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\n    return encoded_jwt",
        "begin_line": 95,
        "end_line": 103,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial005.get_current_user#106",
        "src_path": "docs/src/security/tutorial005.py",
        "class_name": "docs.src.security.tutorial005",
        "signature": "docs.src.security.tutorial005.get_current_user(security_scopes: SecurityScopes, token: str=Depends(oauth2_scheme))",
        "snippet": "async def get_current_user(\n    security_scopes: SecurityScopes, token: str = Depends(oauth2_scheme)\n):\n    if security_scopes.scopes:\n        authenticate_value = f'Bearer scope=\"{security_scopes.scope_str}\"'\n    else:\n        authenticate_value = f\"Bearer\"\n    credentials_exception = HTTPException(\n        status_code=HTTP_401_UNAUTHORIZED,\n        detail=\"Could not validate credentials\",\n        headers={\"WWW-Authenticate\": authenticate_value},\n    )\n    try:\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\n        username: str = payload.get(\"sub\")\n        if username is None:\n            raise credentials_exception\n        token_scopes = payload.get(\"scopes\", [])\n        token_data = TokenData(scopes=token_scopes, username=username)\n    except (PyJWTError, ValidationError):\n        raise credentials_exception\n    user = get_user(fake_users_db, username=token_data.username)\n    if user is None:\n        raise credentials_exception\n    for scope in security_scopes.scopes:\n        if scope not in token_data.scopes:\n            raise HTTPException(\n                status_code=HTTP_401_UNAUTHORIZED,\n                detail=\"Not enough permissions\",\n                headers={\"WWW-Authenticate\": authenticate_value},\n            )\n    return user",
        "begin_line": 106,
        "end_line": 137,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial005.get_current_active_user#140",
        "src_path": "docs/src/security/tutorial005.py",
        "class_name": "docs.src.security.tutorial005",
        "signature": "docs.src.security.tutorial005.get_current_active_user(current_user: User=Security(get_current_user, scopes=['me']))",
        "snippet": "async def get_current_active_user(\n    current_user: User = Security(get_current_user, scopes=[\"me\"])\n):\n    if current_user.disabled:\n        raise HTTPException(status_code=400, detail=\"Inactive user\")\n    return current_user",
        "begin_line": 140,
        "end_line": 145,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial005.login_for_access_token#149",
        "src_path": "docs/src/security/tutorial005.py",
        "class_name": "docs.src.security.tutorial005",
        "signature": "docs.src.security.tutorial005.login_for_access_token(form_data: OAuth2PasswordRequestForm=Depends())",
        "snippet": "async def login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends()):\n    user = authenticate_user(fake_users_db, form_data.username, form_data.password)\n    if not user:\n        raise HTTPException(status_code=400, detail=\"Incorrect username or password\")\n    access_token_expires = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    access_token = create_access_token(\n        data={\"sub\": user.username, \"scopes\": form_data.scopes},\n        expires_delta=access_token_expires,\n    )\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}",
        "begin_line": 149,
        "end_line": 158,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial005.read_users_me#162",
        "src_path": "docs/src/security/tutorial005.py",
        "class_name": "docs.src.security.tutorial005",
        "signature": "docs.src.security.tutorial005.read_users_me(current_user: User=Depends(get_current_active_user))",
        "snippet": "async def read_users_me(current_user: User = Depends(get_current_active_user)):\n    return current_user",
        "begin_line": 162,
        "end_line": 163,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial005.read_own_items#167",
        "src_path": "docs/src/security/tutorial005.py",
        "class_name": "docs.src.security.tutorial005",
        "signature": "docs.src.security.tutorial005.read_own_items(current_user: User=Security(get_current_active_user, scopes=['items']))",
        "snippet": "async def read_own_items(\n    current_user: User = Security(get_current_active_user, scopes=[\"items\"])\n):\n    return [{\"item_id\": \"Foo\", \"owner\": current_user.username}]",
        "begin_line": 167,
        "end_line": 170,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial005.read_system_status#174",
        "src_path": "docs/src/security/tutorial005.py",
        "class_name": "docs.src.security.tutorial005",
        "signature": "docs.src.security.tutorial005.read_system_status(current_user: User=Depends(get_current_user))",
        "snippet": "async def read_system_status(current_user: User = Depends(get_current_user)):\n    return {\"status\": \"ok\"}",
        "begin_line": 174,
        "end_line": 175,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.security.api_key.APIKeyQuery.__call__#20",
        "src_path": "fastapi/security/api_key.py",
        "class_name": "fastapi.security.api_key.APIKeyQuery",
        "signature": "fastapi.security.api_key.APIKeyQuery.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> Optional[str]:\n        api_key: str = request.query_params.get(self.model.name)\n        if not api_key:\n            if self.auto_error:\n                raise HTTPException(\n                    status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n                )\n            else:\n                return None\n        return api_key",
        "begin_line": 20,
        "end_line": 29,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.security.api_key.APIKeyHeader.__call__#38",
        "src_path": "fastapi/security/api_key.py",
        "class_name": "fastapi.security.api_key.APIKeyHeader",
        "signature": "fastapi.security.api_key.APIKeyHeader.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> Optional[str]:\n        api_key: str = request.headers.get(self.model.name)\n        if not api_key:\n            if self.auto_error:\n                raise HTTPException(\n                    status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n                )\n            else:\n                return None\n        return api_key",
        "begin_line": 38,
        "end_line": 47,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.security.api_key.APIKeyCookie.__call__#56",
        "src_path": "fastapi/security/api_key.py",
        "class_name": "fastapi.security.api_key.APIKeyCookie",
        "signature": "fastapi.security.api_key.APIKeyCookie.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> Optional[str]:\n        api_key = request.cookies.get(self.model.name)\n        if not api_key:\n            if self.auto_error:\n                raise HTTPException(\n                    status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n                )\n            else:\n                return None\n        return api_key",
        "begin_line": 56,
        "end_line": 65,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.query_params_str_validations.tutorial012.read_items#9",
        "src_path": "docs/src/query_params_str_validations/tutorial012.py",
        "class_name": "docs.src.query_params_str_validations.tutorial012",
        "signature": "docs.src.query_params_str_validations.tutorial012.read_items(q: List[str]=Query(['foo', 'bar']))",
        "snippet": "async def read_items(q: List[str] = Query([\"foo\", \"bar\"])):\n    query_items = {\"q\": q}\n    return query_items",
        "begin_line": 9,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.dependencies.tutorial006.verify_token#6",
        "src_path": "docs/src/dependencies/tutorial006.py",
        "class_name": "docs.src.dependencies.tutorial006",
        "signature": "docs.src.dependencies.tutorial006.verify_token(x_token: str=Header(...))",
        "snippet": "async def verify_token(x_token: str = Header(...)):\n    if x_token != \"fake-super-secret-token\":\n        raise HTTPException(status_code=400, detail=\"X-Token header invalid\")",
        "begin_line": 6,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.dependencies.tutorial006.verify_key#11",
        "src_path": "docs/src/dependencies/tutorial006.py",
        "class_name": "docs.src.dependencies.tutorial006",
        "signature": "docs.src.dependencies.tutorial006.verify_key(x_key: str=Header(...))",
        "snippet": "async def verify_key(x_key: str = Header(...)):\n    if x_key != \"fake-super-secret-key\":\n        raise HTTPException(status_code=400, detail=\"X-Key header invalid\")\n    return x_key",
        "begin_line": 11,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.dependencies.tutorial006.read_items#18",
        "src_path": "docs/src/dependencies/tutorial006.py",
        "class_name": "docs.src.dependencies.tutorial006",
        "signature": "docs.src.dependencies.tutorial006.read_items()",
        "snippet": "async def read_items():\n    return [{\"item\": \"Foo\"}, {\"item\": \"Bar\"}]",
        "begin_line": 18,
        "end_line": 19,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.bigger_applications.app.routers.items.read_items#7",
        "src_path": "docs/src/bigger_applications/app/routers/items.py",
        "class_name": "docs.src.bigger_applications.app.routers.items",
        "signature": "docs.src.bigger_applications.app.routers.items.read_items()",
        "snippet": "async def read_items():\n    return [{\"name\": \"Item Foo\"}, {\"name\": \"item Bar\"}]",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.bigger_applications.app.routers.items.read_item#12",
        "src_path": "docs/src/bigger_applications/app/routers/items.py",
        "class_name": "docs.src.bigger_applications.app.routers.items",
        "signature": "docs.src.bigger_applications.app.routers.items.read_item(item_id: str)",
        "snippet": "async def read_item(item_id: str):\n    return {\"name\": \"Fake Specific Item\", \"item_id\": item_id}",
        "begin_line": 12,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.bigger_applications.app.routers.items.update_item#21",
        "src_path": "docs/src/bigger_applications/app/routers/items.py",
        "class_name": "docs.src.bigger_applications.app.routers.items",
        "signature": "docs.src.bigger_applications.app.routers.items.update_item(item_id: str)",
        "snippet": "async def update_item(item_id: str):\n    if item_id != \"foo\":\n        raise HTTPException(status_code=403, detail=\"You can only update the item: foo\")\n    return {\"item_id\": item_id, \"name\": \"The Fighters\"}",
        "begin_line": 21,
        "end_line": 24,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.extra_models.tutorial005.read_keyword_weights#9",
        "src_path": "docs/src/extra_models/tutorial005.py",
        "class_name": "docs.src.extra_models.tutorial005",
        "signature": "docs.src.extra_models.tutorial005.read_keyword_weights()",
        "snippet": "async def read_keyword_weights():\n    return {\"foo\": 2.3, \"bar\": 3.4}",
        "begin_line": 9,
        "end_line": 10,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.query_params.tutorial005.read_user_item#7",
        "src_path": "docs/src/query_params/tutorial005.py",
        "class_name": "docs.src.query_params.tutorial005",
        "signature": "docs.src.query_params.tutorial005.read_user_item(item_id: str, needy: str)",
        "snippet": "async def read_user_item(item_id: str, needy: str):\n    item = {\"item_id\": item_id, \"needy\": needy}\n    return item",
        "begin_line": 7,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.header_params.tutorial001.read_items#7",
        "src_path": "docs/src/header_params/tutorial001.py",
        "class_name": "docs.src.header_params.tutorial001",
        "signature": "docs.src.header_params.tutorial001.read_items(*, user_agent: str=Header(None))",
        "snippet": "async def read_items(*, user_agent: str = Header(None)):\n    return {\"User-Agent\": user_agent}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0008896797153024911,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.response_cookies.tutorial002.create_cookie#8",
        "src_path": "docs/src/response_cookies/tutorial002.py",
        "class_name": "docs.src.response_cookies.tutorial002",
        "signature": "docs.src.response_cookies.tutorial002.create_cookie(response: Response)",
        "snippet": "def create_cookie(response: Response):\n    response.set_cookie(key=\"fakesession\", value=\"fake-cookie-session-value\")\n    return {\"message\": \"Come to the dark side, we have cookies\"}",
        "begin_line": 8,
        "end_line": 10,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.datastructures.UploadFile.validate#12",
        "src_path": "fastapi/datastructures.py",
        "class_name": "fastapi.datastructures.UploadFile",
        "signature": "fastapi.datastructures.UploadFile.validate(cls: Type['UploadFile'], v: Any)",
        "snippet": "    def validate(cls: Type[\"UploadFile\"], v: Any) -> Any:\n        if not isinstance(v, StarletteUploadFile):\n            raise ValueError(f\"Expected UploadFile, received: {type(v)}\")\n        return v",
        "begin_line": 12,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.app_testing.main_b.read_main#21",
        "src_path": "docs/src/app_testing/main_b.py",
        "class_name": "docs.src.app_testing.main_b",
        "signature": "docs.src.app_testing.main_b.read_main(item_id: str, x_token: str=Header(...))",
        "snippet": "async def read_main(item_id: str, x_token: str = Header(...)):\n    if x_token != fake_secret_token:\n        raise HTTPException(status_code=400, detail=\"Invalid X-Token header\")\n    if item_id not in fake_db:\n        raise HTTPException(status_code=404, detail=\"Item not found\")\n    return fake_db[item_id]",
        "begin_line": 21,
        "end_line": 26,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.app_testing.main_b.create_item#30",
        "src_path": "docs/src/app_testing/main_b.py",
        "class_name": "docs.src.app_testing.main_b",
        "signature": "docs.src.app_testing.main_b.create_item(item: Item, x_token: str=Header(...))",
        "snippet": "async def create_item(item: Item, x_token: str = Header(...)):\n    if x_token != fake_secret_token:\n        raise HTTPException(status_code=400, detail=\"Invalid X-Token header\")\n    if item.id in fake_db:\n        raise HTTPException(status_code=400, detail=\"Item already exists\")\n    fake_db[item.id] = item\n    return item",
        "begin_line": 30,
        "end_line": 36,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.query_params_str_validations.tutorial010.read_items#7",
        "src_path": "docs/src/query_params_str_validations/tutorial010.py",
        "class_name": "docs.src.query_params_str_validations.tutorial010",
        "signature": "docs.src.query_params_str_validations.tutorial010.read_items(q: str=Query(None, alias='item-query', title='Query string', description='Query string for the items to search in the database that have a good match', min_length=3, max_length=50, regex='^fixedquery$', deprecated=True))",
        "snippet": "async def read_items(\n    q: str = Query(\n        None,\n        alias=\"item-query\",\n        title=\"Query string\",\n        description=\"Query string for the items to search in the database that have a good match\",\n        min_length=3,\n        max_length=50,\n        regex=\"^fixedquery$\",\n        deprecated=True,\n    )\n):\n    results = {\"items\": [{\"item_id\": \"Foo\"}, {\"item_id\": \"Bar\"}]}\n    if q:\n        results.update({\"q\": q})\n    return results",
        "begin_line": 7,
        "end_line": 22,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.request_files.tutorial002.create_files#10",
        "src_path": "docs/src/request_files/tutorial002.py",
        "class_name": "docs.src.request_files.tutorial002",
        "signature": "docs.src.request_files.tutorial002.create_files(files: List[bytes]=File(...))",
        "snippet": "async def create_files(files: List[bytes] = File(...)):\n    return {\"file_sizes\": [len(file) for file in files]}",
        "begin_line": 10,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.request_files.tutorial002.create_upload_files#15",
        "src_path": "docs/src/request_files/tutorial002.py",
        "class_name": "docs.src.request_files.tutorial002",
        "signature": "docs.src.request_files.tutorial002.create_upload_files(files: List[UploadFile]=File(...))",
        "snippet": "async def create_upload_files(files: List[UploadFile] = File(...)):\n    return {\"filenames\": [file.filename for file in files]}",
        "begin_line": 15,
        "end_line": 16,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.request_files.tutorial002.main#20",
        "src_path": "docs/src/request_files/tutorial002.py",
        "class_name": "docs.src.request_files.tutorial002",
        "signature": "docs.src.request_files.tutorial002.main()",
        "snippet": "async def main():\n    content = \"\"\"\n<body>\n<form action=\"/files/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n<form action=\"/uploadfiles/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n</body>\n    \"\"\"\n    return HTMLResponse(content=content)",
        "begin_line": 20,
        "end_line": 33,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.additional_responses.tutorial001.read_item#19",
        "src_path": "docs/src/additional_responses/tutorial001.py",
        "class_name": "docs.src.additional_responses.tutorial001",
        "signature": "docs.src.additional_responses.tutorial001.read_item(item_id: str)",
        "snippet": "async def read_item(item_id: str):\n    if item_id == \"foo\":\n        return {\"id\": \"foo\", \"value\": \"there goes my hero\"}\n    else:\n        return JSONResponse(status_code=404, content={\"message\": \"Item not found\"})",
        "begin_line": 19,
        "end_line": 23,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.sub_applications.tutorial001.read_main#7",
        "src_path": "docs/src/sub_applications/tutorial001.py",
        "class_name": "docs.src.sub_applications.tutorial001",
        "signature": "docs.src.sub_applications.tutorial001.read_main()",
        "snippet": "def read_main():\n    return {\"message\": \"Hello World from main app\"}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.sub_applications.tutorial001.read_sub#15",
        "src_path": "docs/src/sub_applications/tutorial001.py",
        "class_name": "docs.src.sub_applications.tutorial001",
        "signature": "docs.src.sub_applications.tutorial001.read_sub()",
        "snippet": "def read_sub():\n    return {\"message\": \"Hello World from sub API\"}",
        "begin_line": 15,
        "end_line": 16,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.additional_responses.tutorial004.read_item#26",
        "src_path": "docs/src/additional_responses/tutorial004.py",
        "class_name": "docs.src.additional_responses.tutorial004",
        "signature": "docs.src.additional_responses.tutorial004.read_item(item_id: str, img: bool=None)",
        "snippet": "async def read_item(item_id: str, img: bool = None):\n    if img:\n        return FileResponse(\"image.png\", media_type=\"image/png\")\n    else:\n        return {\"id\": \"foo\", \"value\": \"there goes my hero\"}",
        "begin_line": 26,
        "end_line": 30,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.websockets.tutorial002.get#51",
        "src_path": "docs/src/websockets/tutorial002.py",
        "class_name": "docs.src.websockets.tutorial002",
        "signature": "docs.src.websockets.tutorial002.get()",
        "snippet": "async def get():\n    return HTMLResponse(html)",
        "begin_line": 51,
        "end_line": 52,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.websockets.tutorial002.get_cookie_or_client#55",
        "src_path": "docs/src/websockets/tutorial002.py",
        "class_name": "docs.src.websockets.tutorial002",
        "signature": "docs.src.websockets.tutorial002.get_cookie_or_client(websocket: WebSocket, session: str=Cookie(None), x_client: str=Header(None))",
        "snippet": "async def get_cookie_or_client(\n    websocket: WebSocket, session: str = Cookie(None), x_client: str = Header(None)\n):\n    if session is None and x_client is None:\n        await websocket.close(code=WS_1008_POLICY_VIOLATION)\n    return session or x_client",
        "begin_line": 55,
        "end_line": 60,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.websockets.tutorial002.websocket_endpoint#64",
        "src_path": "docs/src/websockets/tutorial002.py",
        "class_name": "docs.src.websockets.tutorial002",
        "signature": "docs.src.websockets.tutorial002.websocket_endpoint(websocket: WebSocket, item_id: int, q: str=None, cookie_or_client: str=Depends(get_cookie_or_client))",
        "snippet": "async def websocket_endpoint(\n    websocket: WebSocket,\n    item_id: int,\n    q: str = None,\n    cookie_or_client: str = Depends(get_cookie_or_client),\n):\n    await websocket.accept()\n    while True:\n        data = await websocket.receive_text()\n        await websocket.send_text(\n            f\"Session Cookie or X-Client Header value is: {cookie_or_client}\"\n        )\n        if q is not None:\n            await websocket.send_text(f\"Query parameter q is: {q}\")\n        await websocket.send_text(f\"Message text was: {data}, for item ID: {item_id}\")",
        "begin_line": 64,
        "end_line": 78,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.body_multiple_params.tutorial001.update_item#15",
        "src_path": "docs/src/body_multiple_params/tutorial001.py",
        "class_name": "docs.src.body_multiple_params.tutorial001",
        "signature": "docs.src.body_multiple_params.tutorial001.update_item(*, item_id: int=Path(..., title='The ID of the item to get', ge=0, le=1000), q: str=None, item: Item=None)",
        "snippet": "async def update_item(\n    *,\n    item_id: int = Path(..., title=\"The ID of the item to get\", ge=0, le=1000),\n    q: str = None,\n    item: Item = None,\n):\n    results = {\"item_id\": item_id}\n    if q:\n        results.update({\"q\": q})\n    if item:\n        results.update({\"item\": item})\n    return results",
        "begin_line": 15,
        "end_line": 26,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.security.oauth2.OAuth2PasswordRequestForm.__init__#45",
        "src_path": "fastapi/security/oauth2.py",
        "class_name": "fastapi.security.oauth2.OAuth2PasswordRequestForm",
        "signature": "fastapi.security.oauth2.OAuth2PasswordRequestForm.__init__(self, grant_type: str=Form(None, regex='password'), username: str=Form(...), password: str=Form(...), scope: str=Form(''), client_id: Optional[str]=Form(None), client_secret: Optional[str]=Form(None))",
        "snippet": "    def __init__(\n        self,\n        grant_type: str = Form(None, regex=\"password\"),\n        username: str = Form(...),\n        password: str = Form(...),\n        scope: str = Form(\"\"),\n        client_id: Optional[str] = Form(None),\n        client_secret: Optional[str] = Form(None),\n    ):\n        self.grant_type = grant_type\n        self.username = username\n        self.password = password\n        self.scopes = scope.split()\n        self.client_id = client_id\n        self.client_secret = client_secret",
        "begin_line": 45,
        "end_line": 59,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0006393861892583121,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.security.oauth2.OAuth2PasswordRequestFormStrict.__init__#95",
        "src_path": "fastapi/security/oauth2.py",
        "class_name": "fastapi.security.oauth2.OAuth2PasswordRequestFormStrict",
        "signature": "fastapi.security.oauth2.OAuth2PasswordRequestFormStrict.__init__(self, grant_type: str=Form(..., regex='password'), username: str=Form(...), password: str=Form(...), scope: str=Form(''), client_id: Optional[str]=Form(None), client_secret: Optional[str]=Form(None))",
        "snippet": "    def __init__(\n        self,\n        grant_type: str = Form(..., regex=\"password\"),\n        username: str = Form(...),\n        password: str = Form(...),\n        scope: str = Form(\"\"),\n        client_id: Optional[str] = Form(None),\n        client_secret: Optional[str] = Form(None),\n    ):\n        super().__init__(\n            grant_type=grant_type,\n            username=username,\n            password=password,\n            scope=scope,\n            client_id=client_id,\n            client_secret=client_secret,\n        )",
        "begin_line": 95,
        "end_line": 111,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.security.oauth2.OAuth2.__call__#126",
        "src_path": "fastapi/security/oauth2.py",
        "class_name": "fastapi.security.oauth2.OAuth2",
        "signature": "fastapi.security.oauth2.OAuth2.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> Optional[str]:\n        authorization: str = request.headers.get(\"Authorization\")\n        if not authorization:\n            if self.auto_error:\n                raise HTTPException(\n                    status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n                )\n            else:\n                return None\n        return authorization",
        "begin_line": 126,
        "end_line": 135,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.security.oauth2.OAuth2PasswordBearer.__call__#151",
        "src_path": "fastapi/security/oauth2.py",
        "class_name": "fastapi.security.oauth2.OAuth2PasswordBearer",
        "signature": "fastapi.security.oauth2.OAuth2PasswordBearer.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> Optional[str]:\n        authorization: str = request.headers.get(\"Authorization\")\n        scheme, param = get_authorization_scheme_param(authorization)\n        if not authorization or scheme.lower() != \"bearer\":\n            if self.auto_error:\n                raise HTTPException(\n                    status_code=HTTP_401_UNAUTHORIZED,\n                    detail=\"Not authenticated\",\n                    headers={\"WWW-Authenticate\": \"Bearer\"},\n                )\n            else:\n                return None\n        return param",
        "begin_line": 151,
        "end_line": 163,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.security.oauth2.SecurityScopes.__init__#167",
        "src_path": "fastapi/security/oauth2.py",
        "class_name": "fastapi.security.oauth2.SecurityScopes",
        "signature": "fastapi.security.oauth2.SecurityScopes.__init__(self, scopes: List[str]=None)",
        "snippet": "    def __init__(self, scopes: List[str] = None):\n        self.scopes = scopes or []\n        self.scope_str = \" \".join(self.scopes)",
        "begin_line": 167,
        "end_line": 169,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0007288629737609329,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.query_params_str_validations.tutorial011.read_items#9",
        "src_path": "docs/src/query_params_str_validations/tutorial011.py",
        "class_name": "docs.src.query_params_str_validations.tutorial011",
        "signature": "docs.src.query_params_str_validations.tutorial011.read_items(q: List[str]=Query(None))",
        "snippet": "async def read_items(q: List[str] = Query(None)):\n    query_items = {\"q\": q}\n    return query_items",
        "begin_line": 9,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.request_files.tutorial001.create_file#7",
        "src_path": "docs/src/request_files/tutorial001.py",
        "class_name": "docs.src.request_files.tutorial001",
        "signature": "docs.src.request_files.tutorial001.create_file(file: bytes=File(...))",
        "snippet": "async def create_file(file: bytes = File(...)):\n    return {\"file_size\": len(file)}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.request_files.tutorial001.create_upload_file#12",
        "src_path": "docs/src/request_files/tutorial001.py",
        "class_name": "docs.src.request_files.tutorial001",
        "signature": "docs.src.request_files.tutorial001.create_upload_file(file: UploadFile=File(...))",
        "snippet": "async def create_upload_file(file: UploadFile = File(...)):\n    return {\"filename\": file.filename}",
        "begin_line": 12,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.extending_openapi.tutorial001.read_items#8",
        "src_path": "docs/src/extending_openapi/tutorial001.py",
        "class_name": "docs.src.extending_openapi.tutorial001",
        "signature": "docs.src.extending_openapi.tutorial001.read_items()",
        "snippet": "async def read_items():\n    return [{\"name\": \"Foo\"}]",
        "begin_line": 8,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.extending_openapi.tutorial001.custom_openapi#12",
        "src_path": "docs/src/extending_openapi/tutorial001.py",
        "class_name": "docs.src.extending_openapi.tutorial001",
        "signature": "docs.src.extending_openapi.tutorial001.custom_openapi()",
        "snippet": "def custom_openapi():\n    if app.openapi_schema:\n        return app.openapi_schema\n    openapi_schema = get_openapi(\n        title=\"Custom title\",\n        version=\"2.5.0\",\n        description=\"This is a very custom OpenAPI schema\",\n        routes=app.routes,\n    )\n    openapi_schema[\"info\"][\"x-logo\"] = {\n        \"url\": \"https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png\"\n    }\n    app.openapi_schema = openapi_schema\n    return app.openapi_schema",
        "begin_line": 12,
        "end_line": 25,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.handling_errors.tutorial002.read_item_header#9",
        "src_path": "docs/src/handling_errors/tutorial002.py",
        "class_name": "docs.src.handling_errors.tutorial002",
        "signature": "docs.src.handling_errors.tutorial002.read_item_header(item_id: str)",
        "snippet": "async def read_item_header(item_id: str):\n    if item_id not in items:\n        raise HTTPException(\n            status_code=404,\n            detail=\"Item not found\",\n            headers={\"X-Error\": \"There goes my error\"},\n        )\n    return {\"item\": items[item_id]}",
        "begin_line": 9,
        "end_line": 16,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.response_headers.tutorial001.get_headers#8",
        "src_path": "docs/src/response_headers/tutorial001.py",
        "class_name": "docs.src.response_headers.tutorial001",
        "signature": "docs.src.response_headers.tutorial001.get_headers()",
        "snippet": "def get_headers():\n    content = {\"message\": \"Hello World\"}\n    headers = {\"X-Cat-Dog\": \"alone in the world\", \"Content-Language\": \"en-US\"}\n    return JSONResponse(content=content, headers=headers)",
        "begin_line": 8,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.path_operation_advanced_configuration.tutorial002.read_items#7",
        "src_path": "docs/src/path_operation_advanced_configuration/tutorial002.py",
        "class_name": "docs.src.path_operation_advanced_configuration.tutorial002",
        "signature": "docs.src.path_operation_advanced_configuration.tutorial002.read_items()",
        "snippet": "async def read_items():\n    return [{\"item_id\": \"Foo\"}]",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.handling_errors.tutorial003.UnicornException.__init__#7",
        "src_path": "docs/src/handling_errors/tutorial003.py",
        "class_name": "docs.src.handling_errors.tutorial003.UnicornException",
        "signature": "docs.src.handling_errors.tutorial003.UnicornException.__init__(self, name: str)",
        "snippet": "    def __init__(self, name: str):\n        self.name = name",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.handling_errors.tutorial003.unicorn_exception_handler#15",
        "src_path": "docs/src/handling_errors/tutorial003.py",
        "class_name": "docs.src.handling_errors.tutorial003",
        "signature": "docs.src.handling_errors.tutorial003.unicorn_exception_handler(request: Request, exc: UnicornException)",
        "snippet": "async def unicorn_exception_handler(request: Request, exc: UnicornException):\n    return JSONResponse(\n        status_code=418,\n        content={\"message\": f\"Oops! {exc.name} did something. There goes a rainbow...\"},\n    )",
        "begin_line": 15,
        "end_line": 19,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.handling_errors.tutorial003.read_unicorn#23",
        "src_path": "docs/src/handling_errors/tutorial003.py",
        "class_name": "docs.src.handling_errors.tutorial003",
        "signature": "docs.src.handling_errors.tutorial003.read_unicorn(name: str)",
        "snippet": "async def read_unicorn(name: str):\n    if name == \"yolo\":\n        raise UnicornException(name=name)\n    return {\"unicorn_name\": name}",
        "begin_line": 23,
        "end_line": 26,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial006.read_current_user#10",
        "src_path": "docs/src/security/tutorial006.py",
        "class_name": "docs.src.security.tutorial006",
        "signature": "docs.src.security.tutorial006.read_current_user(credentials: HTTPBasicCredentials=Depends(security))",
        "snippet": "def read_current_user(credentials: HTTPBasicCredentials = Depends(security)):\n    return {\"username\": credentials.username, \"password\": credentials.password}",
        "begin_line": 10,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.custom_response.tutorial001.read_items#8",
        "src_path": "docs/src/custom_response/tutorial001.py",
        "class_name": "docs.src.custom_response.tutorial001",
        "signature": "docs.src.custom_response.tutorial001.read_items()",
        "snippet": "async def read_items():\n    return [{\"item_id\": \"Foo\"}]",
        "begin_line": 8,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.additional_responses.tutorial003.read_item#33",
        "src_path": "docs/src/additional_responses/tutorial003.py",
        "class_name": "docs.src.additional_responses.tutorial003",
        "signature": "docs.src.additional_responses.tutorial003.read_item(item_id: str)",
        "snippet": "async def read_item(item_id: str):\n    if item_id == \"foo\":\n        return {\"id\": \"foo\", \"value\": \"there goes my hero\"}\n    else:\n        return JSONResponse(status_code=404, content={\"message\": \"Item not found\"})",
        "begin_line": 33,
        "end_line": 37,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.params.Param.__init__#17",
        "src_path": "fastapi/params.py",
        "class_name": "fastapi.params.Param",
        "signature": "fastapi.params.Param.__init__(self, default: Any, *, alias: str=None, title: str=None, description: str=None, gt: float=None, ge: float=None, lt: float=None, le: float=None, min_length: int=None, max_length: int=None, regex: str=None, deprecated: bool=None, **extra: Any)",
        "snippet": "    def __init__(\n        self,\n        default: Any,\n        *,\n        alias: str = None,\n        title: str = None,\n        description: str = None,\n        gt: float = None,\n        ge: float = None,\n        lt: float = None,\n        le: float = None,\n        min_length: int = None,\n        max_length: int = None,\n        regex: str = None,\n        deprecated: bool = None,\n        **extra: Any,\n    ):\n        self.deprecated = deprecated\n        super().__init__(\n            default,\n            alias=alias,\n            title=title,\n            description=description,\n            gt=gt,\n            ge=ge,\n            lt=lt,\n            le=le,\n            min_length=min_length,\n            max_length=max_length,\n            regex=regex,\n            **extra,\n        )",
        "begin_line": 17,
        "end_line": 48,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.004545454545454545,
            "pseudo_dstar_susp": 0.004651162790697674,
            "pseudo_tarantula_susp": 0.004784688995215311,
            "pseudo_op2_susp": 0.004651162790697674,
            "pseudo_barinel_susp": 0.004784688995215311
        }
    },
    {
        "name": "fastapi.params.Query.__init__#92",
        "src_path": "fastapi/params.py",
        "class_name": "fastapi.params.Query",
        "signature": "fastapi.params.Query.__init__(self, default: Any, *, alias: str=None, title: str=None, description: str=None, gt: float=None, ge: float=None, lt: float=None, le: float=None, min_length: int=None, max_length: int=None, regex: str=None, deprecated: bool=None, **extra: Any)",
        "snippet": "    def __init__(\n        self,\n        default: Any,\n        *,\n        alias: str = None,\n        title: str = None,\n        description: str = None,\n        gt: float = None,\n        ge: float = None,\n        lt: float = None,\n        le: float = None,\n        min_length: int = None,\n        max_length: int = None,\n        regex: str = None,\n        deprecated: bool = None,\n        **extra: Any,\n    ):\n        super().__init__(\n            default,\n            alias=alias,\n            title=title,\n            description=description,\n            gt=gt,\n            ge=ge,\n            lt=lt,\n            le=le,\n            min_length=min_length,\n            max_length=max_length,\n            regex=regex,\n            deprecated=deprecated,\n            **extra,\n        )",
        "begin_line": 92,
        "end_line": 123,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.004545454545454545,
            "pseudo_dstar_susp": 0.004651162790697674,
            "pseudo_tarantula_susp": 0.004784688995215311,
            "pseudo_op2_susp": 0.004651162790697674,
            "pseudo_barinel_susp": 0.004784688995215311
        }
    },
    {
        "name": "fastapi.params.Body.__init__#203",
        "src_path": "fastapi/params.py",
        "class_name": "fastapi.params.Body",
        "signature": "fastapi.params.Body.__init__(self, default: Any, *, embed: bool=False, media_type: str='application/json', alias: str=None, title: str=None, description: str=None, gt: float=None, ge: float=None, lt: float=None, le: float=None, min_length: int=None, max_length: int=None, regex: str=None, **extra: Any)",
        "snippet": "    def __init__(\n        self,\n        default: Any,\n        *,\n        embed: bool = False,\n        media_type: str = \"application/json\",\n        alias: str = None,\n        title: str = None,\n        description: str = None,\n        gt: float = None,\n        ge: float = None,\n        lt: float = None,\n        le: float = None,\n        min_length: int = None,\n        max_length: int = None,\n        regex: str = None,\n        **extra: Any,\n    ):\n        self.embed = embed\n        self.media_type = media_type\n        super().__init__(\n            default,\n            alias=alias,\n            title=title,\n            description=description,\n            gt=gt,\n            ge=ge,\n            lt=lt,\n            le=le,\n            min_length=min_length,\n            max_length=max_length,\n            regex=regex,\n            **extra,\n        )",
        "begin_line": 203,
        "end_line": 236,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0007564296520423601,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.dependency_testing.tutorial001.common_parameters#7",
        "src_path": "docs/src/dependency_testing/tutorial001.py",
        "class_name": "docs.src.dependency_testing.tutorial001",
        "signature": "docs.src.dependency_testing.tutorial001.common_parameters(q: str=None, skip: int=0, limit: int=100)",
        "snippet": "async def common_parameters(q: str = None, skip: int = 0, limit: int = 100):\n    return {\"q\": q, \"skip\": skip, \"limit\": limit}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.dependency_testing.tutorial001.read_items#12",
        "src_path": "docs/src/dependency_testing/tutorial001.py",
        "class_name": "docs.src.dependency_testing.tutorial001",
        "signature": "docs.src.dependency_testing.tutorial001.read_items(commons: dict=Depends(common_parameters))",
        "snippet": "async def read_items(commons: dict = Depends(common_parameters)):\n    return {\"message\": \"Hello Items!\", \"params\": commons}",
        "begin_line": 12,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0007564296520423601,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.dependency_testing.tutorial001.read_users#17",
        "src_path": "docs/src/dependency_testing/tutorial001.py",
        "class_name": "docs.src.dependency_testing.tutorial001",
        "signature": "docs.src.dependency_testing.tutorial001.read_users(commons: dict=Depends(common_parameters))",
        "snippet": "async def read_users(commons: dict = Depends(common_parameters)):\n    return {\"message\": \"Hello Users!\", \"params\": commons}",
        "begin_line": 17,
        "end_line": 18,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0008896797153024911,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.dependency_testing.tutorial001.override_dependency#24",
        "src_path": "docs/src/dependency_testing/tutorial001.py",
        "class_name": "docs.src.dependency_testing.tutorial001",
        "signature": "docs.src.dependency_testing.tutorial001.override_dependency(q: str=None)",
        "snippet": "async def override_dependency(q: str = None):\n    return {\"q\": q, \"skip\": 5, \"limit\": 10}",
        "begin_line": 24,
        "end_line": 25,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0007288629737609329,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.dependency_testing.tutorial001.test_override_in_items#31",
        "src_path": "docs/src/dependency_testing/tutorial001.py",
        "class_name": "docs.src.dependency_testing.tutorial001",
        "signature": "docs.src.dependency_testing.tutorial001.test_override_in_items()",
        "snippet": "def test_override_in_items():\n    response = client.get(\"/items/\")\n    assert response.status_code == 200\n    assert response.json() == {\n        \"message\": \"Hello Items!\",\n        \"params\": {\"q\": None, \"skip\": 5, \"limit\": 10},\n    }",
        "begin_line": 31,
        "end_line": 37,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.dependency_testing.tutorial001.test_override_in_items_with_q#40",
        "src_path": "docs/src/dependency_testing/tutorial001.py",
        "class_name": "docs.src.dependency_testing.tutorial001",
        "signature": "docs.src.dependency_testing.tutorial001.test_override_in_items_with_q()",
        "snippet": "def test_override_in_items_with_q():\n    response = client.get(\"/items/?q=foo\")\n    assert response.status_code == 200\n    assert response.json() == {\n        \"message\": \"Hello Items!\",\n        \"params\": {\"q\": \"foo\", \"skip\": 5, \"limit\": 10},\n    }",
        "begin_line": 40,
        "end_line": 46,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.dependency_testing.tutorial001.test_override_in_items_with_params#49",
        "src_path": "docs/src/dependency_testing/tutorial001.py",
        "class_name": "docs.src.dependency_testing.tutorial001",
        "signature": "docs.src.dependency_testing.tutorial001.test_override_in_items_with_params()",
        "snippet": "def test_override_in_items_with_params():\n    response = client.get(\"/items/?q=foo&skip=100&limit=200\")\n    assert response.status_code == 200\n    assert response.json() == {\n        \"message\": \"Hello Items!\",\n        \"params\": {\"q\": \"foo\", \"skip\": 5, \"limit\": 10},\n    }",
        "begin_line": 49,
        "end_line": 55,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.body_multiple_params.tutorial003.update_item#20",
        "src_path": "docs/src/body_multiple_params/tutorial003.py",
        "class_name": "docs.src.body_multiple_params.tutorial003",
        "signature": "docs.src.body_multiple_params.tutorial003.update_item(*, item_id: int, item: Item, user: User, importance: int=Body(...))",
        "snippet": "async def update_item(\n    *, item_id: int, item: Item, user: User, importance: int = Body(...)\n):\n    results = {\"item_id\": item_id, \"item\": item, \"user\": user, \"importance\": importance}\n    return results",
        "begin_line": 20,
        "end_line": 24,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.app_testing.main.read_main#7",
        "src_path": "docs/src/app_testing/main.py",
        "class_name": "docs.src.app_testing.main",
        "signature": "docs.src.app_testing.main.read_main()",
        "snippet": "async def read_main():\n    return {\"msg\": \"Hello World\"}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0008896797153024911,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.openapi.docs.get_swagger_ui_html#6",
        "src_path": "fastapi/openapi/docs.py",
        "class_name": "fastapi.openapi.docs",
        "signature": "fastapi.openapi.docs.get_swagger_ui_html(*, openapi_url: str, title: str, swagger_js_url: str='https://cdn.jsdelivr.net/npm/swagger-ui-dist@3/swagger-ui-bundle.js', swagger_css_url: str='https://cdn.jsdelivr.net/npm/swagger-ui-dist@3/swagger-ui.css', swagger_favicon_url: str='https://fastapi.tiangolo.com/img/favicon.png', oauth2_redirect_url: Optional[str]=None)",
        "snippet": "def get_swagger_ui_html(\n    *,\n    openapi_url: str,\n    title: str,\n    swagger_js_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@3/swagger-ui-bundle.js\",\n    swagger_css_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@3/swagger-ui.css\",\n    swagger_favicon_url: str = \"https://fastapi.tiangolo.com/img/favicon.png\",\n    oauth2_redirect_url: Optional[str] = None,\n) -> HTMLResponse:\n\n    html = f\"\"\"\n    <! doctype html>\n    <html>\n    <head>\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"{swagger_css_url}\">\n    <link rel=\"shortcut icon\" href=\"{swagger_favicon_url}\">\n    <title>{title}</title>\n    </head>\n    <body>\n    <div id=\"swagger-ui\">\n    </div>\n    <script src=\"{swagger_js_url}\"></script>\n    <!-- `SwaggerUIBundle` is now available on the page -->\n    <script>\n    const ui = SwaggerUIBundle({{\n        url: '{openapi_url}',\n    \"\"\"\n\n    if oauth2_redirect_url:\n        html += f\"oauth2RedirectUrl: window.location.origin + '{oauth2_redirect_url}',\"\n\n    html += \"\"\"\n        dom_id: '#swagger-ui',\n        presets: [\n        SwaggerUIBundle.presets.apis,\n        SwaggerUIBundle.SwaggerUIStandalonePreset\n        ],\n        layout: \"BaseLayout\",\n        deepLinking: true\n    })\n    </script>\n    </body>\n    </html>\n    \"\"\"\n    return HTMLResponse(html)",
        "begin_line": 6,
        "end_line": 50,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.openapi.docs.get_redoc_html#53",
        "src_path": "fastapi/openapi/docs.py",
        "class_name": "fastapi.openapi.docs",
        "signature": "fastapi.openapi.docs.get_redoc_html(*, openapi_url: str, title: str, redoc_js_url: str='https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js', redoc_favicon_url: str='https://fastapi.tiangolo.com/img/favicon.png')",
        "snippet": "def get_redoc_html(\n    *,\n    openapi_url: str,\n    title: str,\n    redoc_js_url: str = \"https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js\",\n    redoc_favicon_url: str = \"https://fastapi.tiangolo.com/img/favicon.png\",\n) -> HTMLResponse:\n    html = f\"\"\"\n    <!DOCTYPE html>\n    <html>\n    <head>\n    <title>{title}</title>\n    <!-- needed for adaptive design -->\n    <meta charset=\"utf-8\"/>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link href=\"https://fonts.googleapis.com/css?family=Montserrat:300,400,700|Roboto:300,400,700\" rel=\"stylesheet\">\n    <link rel=\"shortcut icon\" href=\"{redoc_favicon_url}\">\n    <!--\n    ReDoc doesn't change outer page styles\n    -->\n    <style>\n      body {{\n        margin: 0;\n        padding: 0;\n      }}\n    </style>\n    </head>\n    <body>\n    <redoc spec-url=\"{openapi_url}\"></redoc>\n    <script src=\"{redoc_js_url}\"> </script>\n    </body>\n    </html>\n    \"\"\"\n    return HTMLResponse(html)",
        "begin_line": 53,
        "end_line": 86,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0008896797153024911,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.openapi.docs.get_swagger_ui_oauth2_redirect_html#89",
        "src_path": "fastapi/openapi/docs.py",
        "class_name": "fastapi.openapi.docs",
        "signature": "fastapi.openapi.docs.get_swagger_ui_oauth2_redirect_html()",
        "snippet": "def get_swagger_ui_oauth2_redirect_html() -> HTMLResponse:\n    html = \"\"\"\n    <!doctype html>\n    <html lang=\"en-US\">\n    <body onload=\"run()\">\n    </body>\n    </html>\n    <script>\n        'use strict';\n        function run () {\n            var oauth2 = window.opener.swaggerUIRedirectOauth2;\n            var sentState = oauth2.state;\n            var redirectUrl = oauth2.redirectUrl;\n            var isValid, qp, arr;\n\n            if (/code|token|error/.test(window.location.hash)) {\n                qp = window.location.hash.substring(1);\n            } else {\n                qp = location.search.substring(1);\n            }\n\n            arr = qp.split(\"&\")\n            arr.forEach(function (v,i,_arr) { _arr[i] = '\"' + v.replace('=', '\":\"') + '\"';})\n            qp = qp ? JSON.parse('{' + arr.join() + '}',\n                    function (key, value) {\n                        return key === \"\" ? value : decodeURIComponent(value)\n                    }\n            ) : {}\n\n            isValid = qp.state === sentState\n\n            if ((\n            oauth2.auth.schema.get(\"flow\") === \"accessCode\"||\n            oauth2.auth.schema.get(\"flow\") === \"authorizationCode\"\n            ) && !oauth2.auth.code) {\n                if (!isValid) {\n                    oauth2.errCb({\n                        authId: oauth2.auth.name,\n                        source: \"auth\",\n                        level: \"warning\",\n                        message: \"Authorization may be unsafe, passed state was changed in server Passed state wasn't returned from auth server\"\n                    });\n                }\n\n                if (qp.code) {\n                    delete oauth2.state;\n                    oauth2.auth.code = qp.code;\n                    oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});\n                } else {\n                    let oauthErrorMsg\n                    if (qp.error) {\n                        oauthErrorMsg = \"[\"+qp.error+\"]: \" +\n                            (qp.error_description ? qp.error_description+ \". \" : \"no accessCode received from the server. \") +\n                            (qp.error_uri ? \"More info: \"+qp.error_uri : \"\");\n                    }\n\n                    oauth2.errCb({\n                        authId: oauth2.auth.name,\n                        source: \"auth\",\n                        level: \"error\",\n                        message: oauthErrorMsg || \"[Authorization failed]: no accessCode received from the server\"\n                    });\n                }\n            } else {\n                oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});\n            }\n            window.close();\n        }\n    </script>\n        \"\"\"\n    return HTMLResponse(content=html)",
        "begin_line": 89,
        "end_line": 159,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.handling_errors.tutorial001.read_item#9",
        "src_path": "docs/src/handling_errors/tutorial001.py",
        "class_name": "docs.src.handling_errors.tutorial001",
        "signature": "docs.src.handling_errors.tutorial001.read_item(item_id: str)",
        "snippet": "async def read_item(item_id: str):\n    if item_id not in items:\n        raise HTTPException(status_code=404, detail=\"Item not found\")\n    return {\"item\": items[item_id]}",
        "begin_line": 9,
        "end_line": 12,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.applications.FastAPI.__init__#25",
        "src_path": "fastapi/applications.py",
        "class_name": "fastapi.applications.FastAPI",
        "signature": "fastapi.applications.FastAPI.__init__(self, debug: bool=False, routes: List[BaseRoute]=None, template_directory: str=None, title: str='Fast API', description: str='', version: str='0.1.0', openapi_url: Optional[str]='/openapi.json', openapi_prefix: str='', docs_url: Optional[str]='/docs', redoc_url: Optional[str]='/redoc', swagger_ui_oauth2_redirect_url: Optional[str]='/docs/oauth2-redirect', **extra: Dict[str, Any])",
        "snippet": "    def __init__(\n        self,\n        debug: bool = False,\n        routes: List[BaseRoute] = None,\n        template_directory: str = None,\n        title: str = \"Fast API\",\n        description: str = \"\",\n        version: str = \"0.1.0\",\n        openapi_url: Optional[str] = \"/openapi.json\",\n        openapi_prefix: str = \"\",\n        docs_url: Optional[str] = \"/docs\",\n        redoc_url: Optional[str] = \"/redoc\",\n        swagger_ui_oauth2_redirect_url: Optional[str] = \"/docs/oauth2-redirect\",\n        **extra: Dict[str, Any],\n    ) -> None:\n        self._debug = debug\n        self.router: routing.APIRouter = routing.APIRouter(\n            routes, dependency_overrides_provider=self\n        )\n        self.exception_middleware = ExceptionMiddleware(self.router, debug=debug)\n        self.error_middleware = ServerErrorMiddleware(\n            self.exception_middleware, debug=debug\n        )\n\n        self.title = title\n        self.description = description\n        self.version = version\n        self.openapi_url = openapi_url\n        self.openapi_prefix = openapi_prefix.rstrip(\"/\")\n        self.docs_url = docs_url\n        self.redoc_url = redoc_url\n        self.swagger_ui_oauth2_redirect_url = swagger_ui_oauth2_redirect_url\n        self.extra = extra\n        self.dependency_overrides: Dict[Callable, Callable] = {}\n\n        self.openapi_version = \"3.0.2\"\n\n        if self.openapi_url:\n            assert self.title, \"A title must be provided for OpenAPI, e.g.: 'My API'\"\n            assert self.version, \"A version must be provided for OpenAPI, e.g.: '2.1.0'\"\n\n        if self.docs_url or self.redoc_url:\n            assert self.openapi_url, \"The openapi_url is required for the docs\"\n        self.openapi_schema: Optional[Dict[str, Any]] = None\n        self.setup()",
        "begin_line": 25,
        "end_line": 69,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0006784260515603799,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.applications.FastAPI.openapi#71",
        "src_path": "fastapi/applications.py",
        "class_name": "fastapi.applications.FastAPI",
        "signature": "fastapi.applications.FastAPI.openapi(self)",
        "snippet": "    def openapi(self) -> Dict:\n        if not self.openapi_schema:\n            self.openapi_schema = get_openapi(\n                title=self.title,\n                version=self.version,\n                openapi_version=self.openapi_version,\n                description=self.description,\n                routes=self.routes,\n                openapi_prefix=self.openapi_prefix,\n            )\n        return self.openapi_schema",
        "begin_line": 71,
        "end_line": 81,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0005820721769499418,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.applications.FastAPI.setup#83",
        "src_path": "fastapi/applications.py",
        "class_name": "fastapi.applications.FastAPI",
        "signature": "fastapi.applications.FastAPI.setup(self)",
        "snippet": "    def setup(self) -> None:\n        if self.openapi_url:\n\n            async def openapi(req: Request) -> JSONResponse:\n                return JSONResponse(self.openapi())\n\n            self.add_route(self.openapi_url, openapi, include_in_schema=False)\n            openapi_url = self.openapi_prefix + self.openapi_url\n        if self.openapi_url and self.docs_url:\n\n            async def swagger_ui_html(req: Request) -> HTMLResponse:\n                return get_swagger_ui_html(\n                    openapi_url=openapi_url,\n                    title=self.title + \" - Swagger UI\",\n                    oauth2_redirect_url=self.swagger_ui_oauth2_redirect_url,\n                )\n\n            self.add_route(self.docs_url, swagger_ui_html, include_in_schema=False)\n\n            if self.swagger_ui_oauth2_redirect_url:\n\n                async def swagger_ui_redirect(req: Request) -> HTMLResponse:\n                    return get_swagger_ui_oauth2_redirect_html()\n\n                self.add_route(\n                    self.swagger_ui_oauth2_redirect_url,\n                    swagger_ui_redirect,\n                    include_in_schema=False,\n                )\n        if self.openapi_url and self.redoc_url:\n\n            async def redoc_html(req: Request) -> HTMLResponse:\n                return get_redoc_html(\n                    openapi_url=openapi_url, title=self.title + \" - ReDoc\"\n                )\n\n            self.add_route(self.redoc_url, redoc_html, include_in_schema=False)\n        self.add_exception_handler(HTTPException, http_exception_handler)\n        self.add_exception_handler(\n            RequestValidationError, request_validation_exception_handler\n        )",
        "begin_line": 83,
        "end_line": 123,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0006784260515603799,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.applications.FastAPI.openapi#86",
        "src_path": "fastapi/applications.py",
        "class_name": "fastapi.applications.FastAPI",
        "signature": "fastapi.applications.FastAPI.openapi(req: Request)",
        "snippet": "            async def openapi(req: Request) -> JSONResponse:\n                return JSONResponse(self.openapi())",
        "begin_line": 86,
        "end_line": 87,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0005605381165919282,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.applications.FastAPI.swagger_ui_html#93",
        "src_path": "fastapi/applications.py",
        "class_name": "fastapi.applications.FastAPI",
        "signature": "fastapi.applications.FastAPI.swagger_ui_html(req: Request)",
        "snippet": "            async def swagger_ui_html(req: Request) -> HTMLResponse:\n                return get_swagger_ui_html(\n                    openapi_url=openapi_url,\n                    title=self.title + \" - Swagger UI\",\n                    oauth2_redirect_url=self.swagger_ui_oauth2_redirect_url,\n                )",
        "begin_line": 93,
        "end_line": 98,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0008896797153024911,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.applications.FastAPI.swagger_ui_redirect#104",
        "src_path": "fastapi/applications.py",
        "class_name": "fastapi.applications.FastAPI",
        "signature": "fastapi.applications.FastAPI.swagger_ui_redirect(req: Request)",
        "snippet": "                async def swagger_ui_redirect(req: Request) -> HTMLResponse:\n                    return get_swagger_ui_oauth2_redirect_html()",
        "begin_line": 104,
        "end_line": 105,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.applications.FastAPI.redoc_html#114",
        "src_path": "fastapi/applications.py",
        "class_name": "fastapi.applications.FastAPI",
        "signature": "fastapi.applications.FastAPI.redoc_html(req: Request)",
        "snippet": "            async def redoc_html(req: Request) -> HTMLResponse:\n                return get_redoc_html(\n                    openapi_url=openapi_url, title=self.title + \" - ReDoc\"\n                )",
        "begin_line": 114,
        "end_line": 117,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.applications.FastAPI.include_router#234",
        "src_path": "fastapi/applications.py",
        "class_name": "fastapi.applications.FastAPI",
        "signature": "fastapi.applications.FastAPI.include_router(self, router: routing.APIRouter, *, prefix: str='', tags: List[str]=None, dependencies: Sequence[Depends]=None, responses: Dict[Union[int, str], Dict[str, Any]]=None)",
        "snippet": "    def include_router(\n        self,\n        router: routing.APIRouter,\n        *,\n        prefix: str = \"\",\n        tags: List[str] = None,\n        dependencies: Sequence[Depends] = None,\n        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n    ) -> None:\n        self.router.include_router(\n            router,\n            prefix=prefix,\n            tags=tags,\n            dependencies=dependencies,\n            responses=responses or {},\n        )",
        "begin_line": 234,
        "end_line": 249,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.applications.FastAPI.get#251",
        "src_path": "fastapi/applications.py",
        "class_name": "fastapi.applications.FastAPI",
        "signature": "fastapi.applications.FastAPI.get(self, path: str, *, response_model: Type[Any]=None, status_code: int=200, tags: List[str]=None, dependencies: Sequence[Depends]=None, summary: str=None, description: str=None, response_description: str='Successful Response', responses: Dict[Union[int, str], Dict[str, Any]]=None, deprecated: bool=None, operation_id: str=None, response_model_include: Set[str]=None, response_model_exclude: Set[str]=set(), response_model_by_alias: bool=True, response_model_skip_defaults: bool=False, include_in_schema: bool=True, response_class: Type[Response]=JSONResponse, name: str=None)",
        "snippet": "    def get(\n        self,\n        path: str,\n        *,\n        response_model: Type[Any] = None,\n        status_code: int = 200,\n        tags: List[str] = None,\n        dependencies: Sequence[Depends] = None,\n        summary: str = None,\n        description: str = None,\n        response_description: str = \"Successful Response\",\n        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n        deprecated: bool = None,\n        operation_id: str = None,\n        response_model_include: Set[str] = None,\n        response_model_exclude: Set[str] = set(),\n        response_model_by_alias: bool = True,\n        response_model_skip_defaults: bool = False,\n        include_in_schema: bool = True,\n        response_class: Type[Response] = JSONResponse,\n        name: str = None,\n    ) -> Callable:\n        return self.router.get(\n            path,\n            response_model=response_model,\n            status_code=status_code,\n            tags=tags or [],\n            dependencies=dependencies,\n            summary=summary,\n            description=description,\n            response_description=response_description,\n            responses=responses or {},\n            deprecated=deprecated,\n            operation_id=operation_id,\n            response_model_include=response_model_include,\n            response_model_exclude=response_model_exclude,\n            response_model_by_alias=response_model_by_alias,\n            response_model_skip_defaults=response_model_skip_defaults,\n            include_in_schema=include_in_schema,\n            response_class=response_class,\n            name=name,\n        )",
        "begin_line": 251,
        "end_line": 292,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0006784260515603799,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.body_nested_models.tutorial009.create_index_weights#9",
        "src_path": "docs/src/body_nested_models/tutorial009.py",
        "class_name": "docs.src.body_nested_models.tutorial009",
        "signature": "docs.src.body_nested_models.tutorial009.create_index_weights(weights: Dict[int, float])",
        "snippet": "async def create_index_weights(weights: Dict[int, float]):\n    return weights",
        "begin_line": 9,
        "end_line": 10,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.security.utils.get_authorization_scheme_param#4",
        "src_path": "fastapi/security/utils.py",
        "class_name": "fastapi.security.utils",
        "signature": "fastapi.security.utils.get_authorization_scheme_param(authorization_header_value: str)",
        "snippet": "def get_authorization_scheme_param(authorization_header_value: str) -> Tuple[str, str]:\n    if not authorization_header_value:\n        return \"\", \"\"\n    scheme, _, param = authorization_header_value.partition(\" \")\n    return scheme, param",
        "begin_line": 4,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0006365372374283895,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.background_tasks.tutorial001.write_notification#6",
        "src_path": "docs/src/background_tasks/tutorial001.py",
        "class_name": "docs.src.background_tasks.tutorial001",
        "signature": "docs.src.background_tasks.tutorial001.write_notification(email: str, message='')",
        "snippet": "def write_notification(email: str, message=\"\"):\n    with open(\"log.txt\", mode=\"w\") as email_file:\n        content = f\"notification for {email}: {message}\"\n        email_file.write(content)",
        "begin_line": 6,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.background_tasks.tutorial001.send_notification#13",
        "src_path": "docs/src/background_tasks/tutorial001.py",
        "class_name": "docs.src.background_tasks.tutorial001",
        "signature": "docs.src.background_tasks.tutorial001.send_notification(email: str, background_tasks: BackgroundTasks)",
        "snippet": "async def send_notification(email: str, background_tasks: BackgroundTasks):\n    background_tasks.add_task(write_notification, email, message=\"some notification\")\n    return {\"message\": \"Notification sent in the background\"}",
        "begin_line": 13,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.path_operation_advanced_configuration.tutorial001.read_items#7",
        "src_path": "docs/src/path_operation_advanced_configuration/tutorial001.py",
        "class_name": "docs.src.path_operation_advanced_configuration.tutorial001",
        "signature": "docs.src.path_operation_advanced_configuration.tutorial001.read_items()",
        "snippet": "async def read_items():\n    return [{\"item_id\": \"Foo\"}]",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.application_configuration.tutorial001.read_items#11",
        "src_path": "docs/src/application_configuration/tutorial001.py",
        "class_name": "docs.src.application_configuration.tutorial001",
        "signature": "docs.src.application_configuration.tutorial001.read_items()",
        "snippet": "async def read_items():\n    return [{\"name\": \"Foo\"}]",
        "begin_line": 11,
        "end_line": 12,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.handling_errors.tutorial004.http_exception_handler#10",
        "src_path": "docs/src/handling_errors/tutorial004.py",
        "class_name": "docs.src.handling_errors.tutorial004",
        "signature": "docs.src.handling_errors.tutorial004.http_exception_handler(request, exc)",
        "snippet": "async def http_exception_handler(request, exc):\n    return PlainTextResponse(str(exc.detail), status_code=exc.status_code)",
        "begin_line": 10,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.handling_errors.tutorial004.read_item#20",
        "src_path": "docs/src/handling_errors/tutorial004.py",
        "class_name": "docs.src.handling_errors.tutorial004",
        "signature": "docs.src.handling_errors.tutorial004.read_item(item_id: int)",
        "snippet": "async def read_item(item_id: int):\n    if item_id == 3:\n        raise HTTPException(status_code=418, detail=\"Nope! I don't like 3.\")\n    return {\"item_id\": item_id}",
        "begin_line": 20,
        "end_line": 23,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.exceptions.HTTPException.__init__#8",
        "src_path": "fastapi/exceptions.py",
        "class_name": "fastapi.exceptions.HTTPException",
        "signature": "fastapi.exceptions.HTTPException.__init__(self, status_code: int, detail: Any=None, headers: dict=None)",
        "snippet": "    def __init__(\n        self, status_code: int, detail: Any = None, headers: dict = None\n    ) -> None:\n        super().__init__(status_code=status_code, detail=detail)\n        self.headers = headers",
        "begin_line": 8,
        "end_line": 12,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0029239766081871343,
            "pseudo_dstar_susp": 0.0029239766081871343,
            "pseudo_tarantula_susp": 0.0030303030303030303,
            "pseudo_op2_susp": 0.0029239766081871343,
            "pseudo_barinel_susp": 0.0030303030303030303
        }
    },
    {
        "name": "docs.src.response_model.tutorial003.create_user#22",
        "src_path": "docs/src/response_model/tutorial003.py",
        "class_name": "docs.src.response_model.tutorial003",
        "signature": "docs.src.response_model.tutorial003.create_user(*, user: UserIn)",
        "snippet": "async def create_user(*, user: UserIn):\n    return user",
        "begin_line": 22,
        "end_line": 23,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial003.fake_hash_password#26",
        "src_path": "docs/src/security/tutorial003.py",
        "class_name": "docs.src.security.tutorial003",
        "signature": "docs.src.security.tutorial003.fake_hash_password(password: str)",
        "snippet": "def fake_hash_password(password: str):\n    return \"fakehashed\" + password",
        "begin_line": 26,
        "end_line": 27,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial003.get_user#44",
        "src_path": "docs/src/security/tutorial003.py",
        "class_name": "docs.src.security.tutorial003",
        "signature": "docs.src.security.tutorial003.get_user(db, username: str)",
        "snippet": "def get_user(db, username: str):\n    if username in db:\n        user_dict = db[username]\n        return UserInDB(**user_dict)",
        "begin_line": 44,
        "end_line": 47,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial003.fake_decode_token#50",
        "src_path": "docs/src/security/tutorial003.py",
        "class_name": "docs.src.security.tutorial003",
        "signature": "docs.src.security.tutorial003.fake_decode_token(token)",
        "snippet": "def fake_decode_token(token):\n    # This doesn't provide any security at all\n    # Check the next version\n    user = get_user(fake_users_db, token)\n    return user",
        "begin_line": 50,
        "end_line": 54,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0008896797153024911,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial003.get_current_user#57",
        "src_path": "docs/src/security/tutorial003.py",
        "class_name": "docs.src.security.tutorial003",
        "signature": "docs.src.security.tutorial003.get_current_user(token: str=Depends(oauth2_scheme))",
        "snippet": "async def get_current_user(token: str = Depends(oauth2_scheme)):\n    user = fake_decode_token(token)\n    if not user:\n        raise HTTPException(\n            status_code=HTTP_401_UNAUTHORIZED,\n            detail=\"Invalid authentication credentials\",\n            headers={\"WWW-Authenticate\": \"Bearer\"},\n        )\n    return user",
        "begin_line": 57,
        "end_line": 65,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial003.get_current_active_user#68",
        "src_path": "docs/src/security/tutorial003.py",
        "class_name": "docs.src.security.tutorial003",
        "signature": "docs.src.security.tutorial003.get_current_active_user(current_user: User=Depends(get_current_user))",
        "snippet": "async def get_current_active_user(current_user: User = Depends(get_current_user)):\n    if current_user.disabled:\n        raise HTTPException(status_code=400, detail=\"Inactive user\")\n    return current_user",
        "begin_line": 68,
        "end_line": 71,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial003.login#75",
        "src_path": "docs/src/security/tutorial003.py",
        "class_name": "docs.src.security.tutorial003",
        "signature": "docs.src.security.tutorial003.login(form_data: OAuth2PasswordRequestForm=Depends())",
        "snippet": "async def login(form_data: OAuth2PasswordRequestForm = Depends()):\n    user_dict = fake_users_db.get(form_data.username)\n    if not user_dict:\n        raise HTTPException(status_code=400, detail=\"Incorrect username or password\")\n    user = UserInDB(**user_dict)\n    hashed_password = fake_hash_password(form_data.password)\n    if not hashed_password == user.hashed_password:\n        raise HTTPException(status_code=400, detail=\"Incorrect username or password\")\n\n    return {\"access_token\": user.username, \"token_type\": \"bearer\"}",
        "begin_line": 75,
        "end_line": 84,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial003.read_users_me#88",
        "src_path": "docs/src/security/tutorial003.py",
        "class_name": "docs.src.security.tutorial003",
        "signature": "docs.src.security.tutorial003.read_users_me(current_user: User=Depends(get_current_active_user))",
        "snippet": "async def read_users_me(current_user: User = Depends(get_current_active_user)):\n    return current_user",
        "begin_line": 88,
        "end_line": 89,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.security.http.HTTPBase.__call__#35",
        "src_path": "fastapi/security/http.py",
        "class_name": "fastapi.security.http.HTTPBase",
        "signature": "fastapi.security.http.HTTPBase.__call__(self, request: Request)",
        "snippet": "    async def __call__(\n        self, request: Request\n    ) -> Optional[HTTPAuthorizationCredentials]:\n        authorization: str = request.headers.get(\"Authorization\")\n        scheme, credentials = get_authorization_scheme_param(authorization)\n        if not (authorization and scheme and credentials):\n            if self.auto_error:\n                raise HTTPException(\n                    status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n                )\n            else:\n                return None\n        return HTTPAuthorizationCredentials(scheme=scheme, credentials=credentials)",
        "begin_line": 35,
        "end_line": 47,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.security.http.HTTPBasic.__call__#59",
        "src_path": "fastapi/security/http.py",
        "class_name": "fastapi.security.http.HTTPBasic",
        "signature": "fastapi.security.http.HTTPBasic.__call__(self, request: Request)",
        "snippet": "    async def __call__(  # type: ignore\n        self, request: Request\n    ) -> Optional[HTTPBasicCredentials]:\n        authorization: str = request.headers.get(\"Authorization\")\n        scheme, param = get_authorization_scheme_param(authorization)\n        if self.realm:\n            unauthorized_headers = {\"WWW-Authenticate\": f'Basic realm=\"{self.realm}\"'}\n        else:\n            unauthorized_headers = {\"WWW-Authenticate\": \"Basic\"}\n        invalid_user_credentials_exc = HTTPException(\n            status_code=HTTP_401_UNAUTHORIZED,\n            detail=\"Invalid authentication credentials\",\n            headers=unauthorized_headers,\n        )\n        if not authorization or scheme.lower() != \"basic\":\n            if self.auto_error:\n                raise HTTPException(\n                    status_code=HTTP_401_UNAUTHORIZED,\n                    detail=\"Not authenticated\",\n                    headers=unauthorized_headers,\n                )\n            else:\n                return None\n        try:\n            data = b64decode(param).decode(\"ascii\")\n        except (ValueError, UnicodeDecodeError, binascii.Error):\n            raise invalid_user_credentials_exc\n        username, separator, password = data.partition(\":\")\n        if not (separator):\n            raise invalid_user_credentials_exc\n        return HTTPBasicCredentials(username=username, password=password)",
        "begin_line": 59,
        "end_line": 89,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.security.http.HTTPBearer.__call__#104",
        "src_path": "fastapi/security/http.py",
        "class_name": "fastapi.security.http.HTTPBearer",
        "signature": "fastapi.security.http.HTTPBearer.__call__(self, request: Request)",
        "snippet": "    async def __call__(\n        self, request: Request\n    ) -> Optional[HTTPAuthorizationCredentials]:\n        authorization: str = request.headers.get(\"Authorization\")\n        scheme, credentials = get_authorization_scheme_param(authorization)\n        if not (authorization and scheme and credentials):\n            if self.auto_error:\n                raise HTTPException(\n                    status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n                )\n            else:\n                return None\n        if scheme.lower() != \"bearer\":\n            if self.auto_error:\n                raise HTTPException(\n                    status_code=HTTP_403_FORBIDDEN,\n                    detail=\"Invalid authentication credentials\",\n                )\n            else:\n                return None\n        return HTTPAuthorizationCredentials(scheme=scheme, credentials=credentials)",
        "begin_line": 104,
        "end_line": 124,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.security.http.HTTPDigest.__call__#133",
        "src_path": "fastapi/security/http.py",
        "class_name": "fastapi.security.http.HTTPDigest",
        "signature": "fastapi.security.http.HTTPDigest.__call__(self, request: Request)",
        "snippet": "    async def __call__(\n        self, request: Request\n    ) -> Optional[HTTPAuthorizationCredentials]:\n        authorization: str = request.headers.get(\"Authorization\")\n        scheme, credentials = get_authorization_scheme_param(authorization)\n        if not (authorization and scheme and credentials):\n            if self.auto_error:\n                raise HTTPException(\n                    status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n                )\n            else:\n                return None\n        if scheme.lower() != \"digest\":\n            raise HTTPException(\n                status_code=HTTP_403_FORBIDDEN,\n                detail=\"Invalid authentication credentials\",\n            )\n        return HTTPAuthorizationCredentials(scheme=scheme, credentials=credentials)",
        "begin_line": 133,
        "end_line": 150,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.extra_models.tutorial004.read_items#21",
        "src_path": "docs/src/extra_models/tutorial004.py",
        "class_name": "docs.src.extra_models.tutorial004",
        "signature": "docs.src.extra_models.tutorial004.read_items()",
        "snippet": "async def read_items():\n    return items",
        "begin_line": 21,
        "end_line": 22,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.dependencies.tutorial004.CommonQueryParams.__init__#10",
        "src_path": "docs/src/dependencies/tutorial004.py",
        "class_name": "docs.src.dependencies.tutorial004.CommonQueryParams",
        "signature": "docs.src.dependencies.tutorial004.CommonQueryParams.__init__(self, q: str=None, skip: int=0, limit: int=100)",
        "snippet": "    def __init__(self, q: str = None, skip: int = 0, limit: int = 100):\n        self.q = q\n        self.skip = skip\n        self.limit = limit",
        "begin_line": 10,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0007849293563579278,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.dependencies.tutorial004.read_items#17",
        "src_path": "docs/src/dependencies/tutorial004.py",
        "class_name": "docs.src.dependencies.tutorial004",
        "signature": "docs.src.dependencies.tutorial004.read_items(commons: CommonQueryParams=Depends())",
        "snippet": "async def read_items(commons: CommonQueryParams = Depends()):\n    response = {}\n    if commons.q:\n        response.update({\"q\": commons.q})\n    items = fake_items_db[commons.skip : commons.skip + commons.limit]\n    response.update({\"items\": items})\n    return response",
        "begin_line": 17,
        "end_line": 23,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0008064516129032258,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.cookie_params.tutorial001.read_items#7",
        "src_path": "docs/src/cookie_params/tutorial001.py",
        "class_name": "docs.src.cookie_params.tutorial001",
        "signature": "docs.src.cookie_params.tutorial001.read_items(*, ads_id: str=Cookie(None))",
        "snippet": "async def read_items(*, ads_id: str = Cookie(None)):\n    return {\"ads_id\": ads_id}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0008368200836820083,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.background_tasks.tutorial002.write_log#6",
        "src_path": "docs/src/background_tasks/tutorial002.py",
        "class_name": "docs.src.background_tasks.tutorial002",
        "signature": "docs.src.background_tasks.tutorial002.write_log(message: str)",
        "snippet": "def write_log(message: str):\n    with open(\"log.txt\", mode=\"a\") as log:\n        log.write(message)",
        "begin_line": 6,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.background_tasks.tutorial002.get_query#11",
        "src_path": "docs/src/background_tasks/tutorial002.py",
        "class_name": "docs.src.background_tasks.tutorial002",
        "signature": "docs.src.background_tasks.tutorial002.get_query(background_tasks: BackgroundTasks, q: str=None)",
        "snippet": "def get_query(background_tasks: BackgroundTasks, q: str = None):\n    if q:\n        message = f\"found query: {q}\\n\"\n        background_tasks.add_task(write_log, message)\n    return q",
        "begin_line": 11,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.background_tasks.tutorial002.send_notification#19",
        "src_path": "docs/src/background_tasks/tutorial002.py",
        "class_name": "docs.src.background_tasks.tutorial002",
        "signature": "docs.src.background_tasks.tutorial002.send_notification(email: str, background_tasks: BackgroundTasks, q: str=Depends(get_query))",
        "snippet": "async def send_notification(\n    email: str, background_tasks: BackgroundTasks, q: str = Depends(get_query)\n):\n    message = f\"message to {email}\\n\"\n    background_tasks.add_task(write_log, message)\n    return {\"message\": \"Message sent\"}",
        "begin_line": 19,
        "end_line": 24,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.query_params.tutorial007.read_user_item#9",
        "src_path": "docs/src/query_params/tutorial007.py",
        "class_name": "docs.src.query_params.tutorial007",
        "signature": "docs.src.query_params.tutorial007.read_user_item(item_id: str, limit: Optional[int]=None)",
        "snippet": "async def read_user_item(item_id: str, limit: Optional[int] = None):\n    item = {\"item_id\": item_id, \"limit\": limit}\n    return item",
        "begin_line": 9,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.events.tutorial002.shutdown_event#7",
        "src_path": "docs/src/events/tutorial002.py",
        "class_name": "docs.src.events.tutorial002",
        "signature": "docs.src.events.tutorial002.shutdown_event()",
        "snippet": "def shutdown_event():\n    with open(\"log.txt\", mode=\"a\") as log:\n        log.write(\"Application shutdown\")",
        "begin_line": 7,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.events.tutorial002.read_items#13",
        "src_path": "docs/src/events/tutorial002.py",
        "class_name": "docs.src.events.tutorial002",
        "signature": "docs.src.events.tutorial002.read_items()",
        "snippet": "async def read_items():\n    return [{\"name\": \"Foo\"}]",
        "begin_line": 13,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.request_forms_and_files.tutorial001.create_file#7",
        "src_path": "docs/src/request_forms_and_files/tutorial001.py",
        "class_name": "docs.src.request_forms_and_files.tutorial001",
        "signature": "docs.src.request_forms_and_files.tutorial001.create_file(file: bytes=File(...), fileb: UploadFile=File(...), token: str=Form(...))",
        "snippet": "async def create_file(\n    file: bytes = File(...), fileb: UploadFile = File(...), token: str = Form(...)\n):\n    return {\n        \"file_size\": len(file),\n        \"token\": token,\n        \"fileb_content_type\": fileb.content_type,\n    }",
        "begin_line": 7,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.body_schema.tutorial001.update_item#15",
        "src_path": "docs/src/body_schema/tutorial001.py",
        "class_name": "docs.src.body_schema.tutorial001",
        "signature": "docs.src.body_schema.tutorial001.update_item(*, item_id: int, item: Item=Body(..., embed=True))",
        "snippet": "async def update_item(*, item_id: int, item: Item = Body(..., embed=True)):\n    results = {\"item_id\": item_id, \"item\": item}\n    return results",
        "begin_line": 15,
        "end_line": 17,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.dependencies.tutorial001.common_parameters#6",
        "src_path": "docs/src/dependencies/tutorial001.py",
        "class_name": "docs.src.dependencies.tutorial001",
        "signature": "docs.src.dependencies.tutorial001.common_parameters(q: str=None, skip: int=0, limit: int=100)",
        "snippet": "async def common_parameters(q: str = None, skip: int = 0, limit: int = 100):\n    return {\"q\": q, \"skip\": skip, \"limit\": limit}",
        "begin_line": 6,
        "end_line": 7,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0008064516129032258,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.dependencies.tutorial001.read_items#11",
        "src_path": "docs/src/dependencies/tutorial001.py",
        "class_name": "docs.src.dependencies.tutorial001",
        "signature": "docs.src.dependencies.tutorial001.read_items(commons: dict=Depends(common_parameters))",
        "snippet": "async def read_items(commons: dict = Depends(common_parameters)):\n    return commons",
        "begin_line": 11,
        "end_line": 12,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0008368200836820083,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.dependencies.tutorial001.read_users#16",
        "src_path": "docs/src/dependencies/tutorial001.py",
        "class_name": "docs.src.dependencies.tutorial001",
        "signature": "docs.src.dependencies.tutorial001.read_users(commons: dict=Depends(common_parameters))",
        "snippet": "async def read_users(commons: dict = Depends(common_parameters)):\n    return commons",
        "begin_line": 16,
        "end_line": 17,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.events.tutorial001.startup_event#9",
        "src_path": "docs/src/events/tutorial001.py",
        "class_name": "docs.src.events.tutorial001",
        "signature": "docs.src.events.tutorial001.startup_event()",
        "snippet": "async def startup_event():\n    items[\"foo\"] = {\"name\": \"Fighters\"}\n    items[\"bar\"] = {\"name\": \"Tenders\"}",
        "begin_line": 9,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.events.tutorial001.read_items#15",
        "src_path": "docs/src/events/tutorial001.py",
        "class_name": "docs.src.events.tutorial001",
        "signature": "docs.src.events.tutorial001.read_items(item_id: str)",
        "snippet": "async def read_items(item_id: str):\n    return items[item_id]",
        "begin_line": 15,
        "end_line": 16,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.app_testing.tutorial001.read_main#8",
        "src_path": "docs/src/app_testing/tutorial001.py",
        "class_name": "docs.src.app_testing.tutorial001",
        "signature": "docs.src.app_testing.tutorial001.read_main()",
        "snippet": "async def read_main():\n    return {\"msg\": \"Hello World\"}",
        "begin_line": 8,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.app_testing.tutorial001.test_read_main#15",
        "src_path": "docs/src/app_testing/tutorial001.py",
        "class_name": "docs.src.app_testing.tutorial001",
        "signature": "docs.src.app_testing.tutorial001.test_read_main()",
        "snippet": "def test_read_main():\n    response = client.get(\"/\")\n    assert response.status_code == 200\n    assert response.json() == {\"msg\": \"Hello World\"}",
        "begin_line": 15,
        "end_line": 18,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.path_params.tutorial004.read_user_me#7",
        "src_path": "docs/src/path_params/tutorial004.py",
        "class_name": "docs.src.path_params.tutorial004",
        "signature": "docs.src.path_params.tutorial004.read_user_me(file_path: str)",
        "snippet": "async def read_user_me(file_path: str):\n    return {\"file_path\": file_path}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.param_functions.Query#39",
        "src_path": "fastapi/param_functions.py",
        "class_name": "fastapi.param_functions",
        "signature": "fastapi.param_functions.Query(default: Any, *, alias: str=None, title: str=None, description: str=None, gt: float=None, ge: float=None, lt: float=None, le: float=None, min_length: int=None, max_length: int=None, regex: str=None, deprecated: bool=None, **extra: Any)",
        "snippet": "def Query(  # noqa: N802\n    default: Any,\n    *,\n    alias: str = None,\n    title: str = None,\n    description: str = None,\n    gt: float = None,\n    ge: float = None,\n    lt: float = None,\n    le: float = None,\n    min_length: int = None,\n    max_length: int = None,\n    regex: str = None,\n    deprecated: bool = None,\n    **extra: Any,\n) -> Any:\n    return params.Query(\n        default,\n        alias=alias,\n        title=title,\n        description=description,\n        gt=gt,\n        ge=ge,\n        lt=lt,\n        le=le,\n        min_length=min_length,\n        max_length=max_length,\n        regex=regex,\n        deprecated=deprecated,\n        **extra,\n    )",
        "begin_line": 39,
        "end_line": 69,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0008368200836820083,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.dependencies.models.Dependant.__init__#16",
        "src_path": "fastapi/dependencies/models.py",
        "class_name": "fastapi.dependencies.models.Dependant",
        "signature": "fastapi.dependencies.models.Dependant.__init__(self, *, path_params: List[Field]=None, query_params: List[Field]=None, header_params: List[Field]=None, cookie_params: List[Field]=None, body_params: List[Field]=None, dependencies: List['Dependant']=None, security_schemes: List[SecurityRequirement]=None, name: str=None, call: Callable=None, request_param_name: str=None, websocket_param_name: str=None, response_param_name: str=None, background_tasks_param_name: str=None, security_scopes_param_name: str=None, security_scopes: List[str]=None, use_cache: bool=True, path: str=None)",
        "snippet": "    def __init__(\n        self,\n        *,\n        path_params: List[Field] = None,\n        query_params: List[Field] = None,\n        header_params: List[Field] = None,\n        cookie_params: List[Field] = None,\n        body_params: List[Field] = None,\n        dependencies: List[\"Dependant\"] = None,\n        security_schemes: List[SecurityRequirement] = None,\n        name: str = None,\n        call: Callable = None,\n        request_param_name: str = None,\n        websocket_param_name: str = None,\n        response_param_name: str = None,\n        background_tasks_param_name: str = None,\n        security_scopes_param_name: str = None,\n        security_scopes: List[str] = None,\n        use_cache: bool = True,\n        path: str = None,\n    ) -> None:\n        self.path_params = path_params or []\n        self.query_params = query_params or []\n        self.header_params = header_params or []\n        self.cookie_params = cookie_params or []\n        self.body_params = body_params or []\n        self.dependencies = dependencies or []\n        self.security_requirements = security_schemes or []\n        self.request_param_name = request_param_name\n        self.websocket_param_name = websocket_param_name\n        self.response_param_name = response_param_name\n        self.background_tasks_param_name = background_tasks_param_name\n        self.security_scopes = security_scopes\n        self.security_scopes_param_name = security_scopes_param_name\n        self.name = name\n        self.call = call\n        self.use_cache = use_cache\n        # Store the path to be able to re-generate a dependable from it in overrides\n        self.path = path\n        # Save the cache key at creation to optimize performance\n        self.cache_key = (self.call, tuple(sorted(set(self.security_scopes or []))))",
        "begin_line": 16,
        "end_line": 56,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0035087719298245615,
            "pseudo_dstar_susp": 0.003745318352059925,
            "pseudo_tarantula_susp": 0.003257328990228013,
            "pseudo_op2_susp": 0.003745318352059925,
            "pseudo_barinel_susp": 0.003257328990228013
        }
    },
    {
        "name": "docs.src.bigger_applications.app.routers.users.read_users#7",
        "src_path": "docs/src/bigger_applications/app/routers/users.py",
        "class_name": "docs.src.bigger_applications.app.routers.users",
        "signature": "docs.src.bigger_applications.app.routers.users.read_users()",
        "snippet": "async def read_users():\n    return [{\"username\": \"Foo\"}, {\"username\": \"Bar\"}]",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.bigger_applications.app.routers.users.read_user_me#12",
        "src_path": "docs/src/bigger_applications/app/routers/users.py",
        "class_name": "docs.src.bigger_applications.app.routers.users",
        "signature": "docs.src.bigger_applications.app.routers.users.read_user_me()",
        "snippet": "async def read_user_me():\n    return {\"username\": \"fakecurrentuser\"}",
        "begin_line": 12,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.bigger_applications.app.routers.users.read_user#17",
        "src_path": "docs/src/bigger_applications/app/routers/users.py",
        "class_name": "docs.src.bigger_applications.app.routers.users",
        "signature": "docs.src.bigger_applications.app.routers.users.read_user(username: str)",
        "snippet": "async def read_user(username: str):\n    return {\"username\": username}",
        "begin_line": 17,
        "end_line": 18,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.response_change_status_code.tutorial001.get_or_create_task#11",
        "src_path": "docs/src/response_change_status_code/tutorial001.py",
        "class_name": "docs.src.response_change_status_code.tutorial001",
        "signature": "docs.src.response_change_status_code.tutorial001.get_or_create_task(task_id: str, response: Response)",
        "snippet": "def get_or_create_task(task_id: str, response: Response):\n    if task_id not in tasks:\n        tasks[task_id] = \"This didn't exist before\"\n        response.status_code = HTTP_201_CREATED\n    return tasks[task_id]",
        "begin_line": 11,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.openapi.utils.get_openapi_params#47",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.get_openapi_params(dependant: Dependant)",
        "snippet": "def get_openapi_params(dependant: Dependant) -> List[Field]:\n    flat_dependant = get_flat_dependant(dependant, skip_repeats=True)\n    return (\n        flat_dependant.path_params\n        + flat_dependant.query_params\n        + flat_dependant.header_params\n        + flat_dependant.cookie_params\n    )",
        "begin_line": 47,
        "end_line": 54,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0005820721769499418,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.openapi.utils.get_openapi_security_definitions#57",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.get_openapi_security_definitions(flat_dependant: Dependant)",
        "snippet": "def get_openapi_security_definitions(flat_dependant: Dependant) -> Tuple[Dict, List]:\n    security_definitions = {}\n    operation_security = []\n    for security_requirement in flat_dependant.security_requirements:\n        security_definition = jsonable_encoder(\n            security_requirement.security_scheme.model,\n            by_alias=True,\n            include_none=False,\n        )\n        security_name = security_requirement.security_scheme.scheme_name\n        security_definitions[security_name] = security_definition\n        operation_security.append({security_name: security_requirement.scopes})\n    return security_definitions, operation_security",
        "begin_line": 57,
        "end_line": 69,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0006269592476489029,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.openapi.utils.get_openapi_operation_parameters#72",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.get_openapi_operation_parameters(all_route_params: Sequence[Field])",
        "snippet": "def get_openapi_operation_parameters(\n    all_route_params: Sequence[Field]\n) -> Tuple[Dict[str, Dict], List[Dict[str, Any]]]:\n    definitions: Dict[str, Dict] = {}\n    parameters = []\n    for param in all_route_params:\n        schema = param.schema\n        schema = cast(Param, schema)\n        if \"ValidationError\" not in definitions:\n            definitions[\"ValidationError\"] = validation_error_definition\n            definitions[\"HTTPValidationError\"] = validation_error_response_definition\n        parameter = {\n            \"name\": param.alias,\n            \"in\": schema.in_.value,\n            \"required\": param.required,\n            \"schema\": field_schema(param, model_name_map={})[0],\n        }\n        if schema.description:\n            parameter[\"description\"] = schema.description\n        if schema.deprecated:\n            parameter[\"deprecated\"] = schema.deprecated\n        parameters.append(parameter)\n    return definitions, parameters",
        "begin_line": 72,
        "end_line": 94,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.openapi.utils.get_openapi_operation_request_body#97",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.get_openapi_operation_request_body(*, body_field: Optional[Field], model_name_map: Dict[Type, str])",
        "snippet": "def get_openapi_operation_request_body(\n    *, body_field: Optional[Field], model_name_map: Dict[Type, str]\n) -> Optional[Dict]:\n    if not body_field:\n        return None\n    assert isinstance(body_field, Field)\n    body_schema, _, _ = field_schema(\n        body_field, model_name_map=model_name_map, ref_prefix=REF_PREFIX\n    )\n    body_field.schema = cast(Body, body_field.schema)\n    request_media_type = body_field.schema.media_type\n    required = body_field.required\n    request_body_oai: Dict[str, Any] = {}\n    if required:\n        request_body_oai[\"required\"] = required\n    request_body_oai[\"content\"] = {request_media_type: {\"schema\": body_schema}}\n    return request_body_oai",
        "begin_line": 97,
        "end_line": 113,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.openapi.utils.generate_operation_id#116",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.generate_operation_id(*, route: routing.APIRoute, method: str)",
        "snippet": "def generate_operation_id(*, route: routing.APIRoute, method: str) -> str:\n    if route.operation_id:\n        return route.operation_id\n    path: str = route.path_format\n    return generate_operation_id_for_path(name=route.name, path=path, method=method)",
        "begin_line": 116,
        "end_line": 120,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.openapi.utils.generate_operation_summary#123",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.generate_operation_summary(*, route: routing.APIRoute, method: str)",
        "snippet": "def generate_operation_summary(*, route: routing.APIRoute, method: str) -> str:\n    if route.summary:\n        return route.summary\n    return route.name.replace(\"_\", \" \").title()",
        "begin_line": 123,
        "end_line": 126,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.openapi.utils.get_openapi_operation_metadata#129",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.get_openapi_operation_metadata(*, route: routing.APIRoute, method: str)",
        "snippet": "def get_openapi_operation_metadata(*, route: routing.APIRoute, method: str) -> Dict:\n    operation: Dict[str, Any] = {}\n    if route.tags:\n        operation[\"tags\"] = route.tags\n    operation[\"summary\"] = generate_operation_summary(route=route, method=method)\n    if route.description:\n        operation[\"description\"] = route.description\n    operation[\"operationId\"] = generate_operation_id(route=route, method=method)\n    if route.deprecated:\n        operation[\"deprecated\"] = route.deprecated\n    return operation",
        "begin_line": 129,
        "end_line": 139,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.openapi.utils.get_openapi_path#142",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.get_openapi_path(*, route: routing.APIRoute, model_name_map: Dict[Type, str])",
        "snippet": "def get_openapi_path(\n    *, route: routing.APIRoute, model_name_map: Dict[Type, str]\n) -> Tuple[Dict, Dict, Dict]:\n    path = {}\n    security_schemes: Dict[str, Any] = {}\n    definitions: Dict[str, Any] = {}\n    assert route.methods is not None, \"Methods must be a list\"\n    if route.include_in_schema:\n        for method in route.methods:\n            operation = get_openapi_operation_metadata(route=route, method=method)\n            parameters: List[Dict] = []\n            flat_dependant = get_flat_dependant(route.dependant, skip_repeats=True)\n            security_definitions, operation_security = get_openapi_security_definitions(\n                flat_dependant=flat_dependant\n            )\n            if operation_security:\n                operation.setdefault(\"security\", []).extend(operation_security)\n            if security_definitions:\n                security_schemes.update(security_definitions)\n            all_route_params = get_openapi_params(route.dependant)\n            validation_definitions, operation_parameters = get_openapi_operation_parameters(\n                all_route_params=all_route_params\n            )\n            definitions.update(validation_definitions)\n            parameters.extend(operation_parameters)\n            if parameters:\n                operation[\"parameters\"] = parameters\n            if method in METHODS_WITH_BODY:\n                request_body_oai = get_openapi_operation_request_body(\n                    body_field=route.body_field, model_name_map=model_name_map\n                )\n                if request_body_oai:\n                    operation[\"requestBody\"] = request_body_oai\n                    if \"ValidationError\" not in definitions:\n                        definitions[\"ValidationError\"] = validation_error_definition\n                        definitions[\n                            \"HTTPValidationError\"\n                        ] = validation_error_response_definition\n            if route.responses:\n                for (additional_status_code, response) in route.responses.items():\n                    assert isinstance(\n                        response, dict\n                    ), \"An additional response must be a dict\"\n                    field = route.response_fields.get(additional_status_code)\n                    if field:\n                        response_schema, _, _ = field_schema(\n                            field, model_name_map=model_name_map, ref_prefix=REF_PREFIX\n                        )\n                        response.setdefault(\"content\", {}).setdefault(\n                            \"application/json\", {}\n                        )[\"schema\"] = response_schema\n                    status_text = http.client.responses.get(int(additional_status_code))\n                    response.setdefault(\n                        \"description\", status_text or \"Additional Response\"\n                    )\n                    operation.setdefault(\"responses\", {})[\n                        str(additional_status_code)\n                    ] = response\n            status_code = str(route.status_code)\n            response_schema = {\"type\": \"string\"}\n            if lenient_issubclass(route.response_class, JSONResponse):\n                if route.response_field:\n                    response_schema, _, _ = field_schema(\n                        route.response_field,\n                        model_name_map=model_name_map,\n                        ref_prefix=REF_PREFIX,\n                    )\n                else:\n                    response_schema = {}\n            operation.setdefault(\"responses\", {}).setdefault(status_code, {})[\n                \"description\"\n            ] = route.response_description\n            operation.setdefault(\"responses\", {}).setdefault(\n                status_code, {}\n            ).setdefault(\"content\", {}).setdefault(route.response_class.media_type, {})[\n                \"schema\"\n            ] = response_schema\n            if all_route_params or route.body_field:\n                operation[\"responses\"][str(HTTP_422_UNPROCESSABLE_ENTITY)] = {\n                    \"description\": \"Validation Error\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\"$ref\": REF_PREFIX + \"HTTPValidationError\"}\n                        }\n                    },\n                }\n            path[method.lower()] = operation\n    return path, security_schemes, definitions",
        "begin_line": 142,
        "end_line": 229,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.openapi.utils.get_openapi#232",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.get_openapi(*, title: str, version: str, openapi_version: str='3.0.2', description: str=None, routes: Sequence[BaseRoute], openapi_prefix: str='')",
        "snippet": "def get_openapi(\n    *,\n    title: str,\n    version: str,\n    openapi_version: str = \"3.0.2\",\n    description: str = None,\n    routes: Sequence[BaseRoute],\n    openapi_prefix: str = \"\"\n) -> Dict:\n    info = {\"title\": title, \"version\": version}\n    if description:\n        info[\"description\"] = description\n    output = {\"openapi\": openapi_version, \"info\": info}\n    components: Dict[str, Dict] = {}\n    paths: Dict[str, Dict] = {}\n    flat_models = get_flat_models_from_routes(routes)\n    model_name_map = get_model_name_map(flat_models)\n    definitions = get_model_definitions(\n        flat_models=flat_models, model_name_map=model_name_map\n    )\n    for route in routes:\n        if isinstance(route, routing.APIRoute):\n            result = get_openapi_path(route=route, model_name_map=model_name_map)\n            if result:\n                path, security_schemes, path_definitions = result\n                if path:\n                    paths.setdefault(openapi_prefix + route.path_format, {}).update(\n                        path\n                    )\n                if security_schemes:\n                    components.setdefault(\"securitySchemes\", {}).update(\n                        security_schemes\n                    )\n                if path_definitions:\n                    definitions.update(path_definitions)\n    if definitions:\n        components.setdefault(\"schemas\", {}).update(definitions)\n    if components:\n        output[\"components\"] = components\n    output[\"paths\"] = paths\n    return jsonable_encoder(OpenAPI(**output), by_alias=True, include_none=False)",
        "begin_line": 232,
        "end_line": 272,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.routing.serialize_response#37",
        "src_path": "fastapi/routing.py",
        "class_name": "fastapi.routing",
        "signature": "fastapi.routing.serialize_response(*, field: Field=None, response: Response, include: Set[str]=None, exclude: Set[str]=set(), by_alias: bool=True, skip_defaults: bool=False)",
        "snippet": "def serialize_response(\n    *,\n    field: Field = None,\n    response: Response,\n    include: Set[str] = None,\n    exclude: Set[str] = set(),\n    by_alias: bool = True,\n    skip_defaults: bool = False,\n) -> Any:\n    if field:\n        errors = []\n        value, errors_ = field.validate(response, {}, loc=(\"response\",))\n        if isinstance(errors_, ErrorWrapper):\n            errors.append(errors_)\n        elif isinstance(errors_, list):\n            errors.extend(errors_)\n        if errors:\n            raise ValidationError(errors)\n        return jsonable_encoder(\n            value,\n            include=include,\n            exclude=exclude,\n            by_alias=by_alias,\n            skip_defaults=skip_defaults,\n        )\n    else:\n        return jsonable_encoder(response)",
        "begin_line": 37,
        "end_line": 63,
        "comment": "",
        "is_bug": true,
        "susp": {
            "pseudo_ochiai_susp": 0.006493506493506494,
            "pseudo_dstar_susp": 0.003484320557491289,
            "pseudo_tarantula_susp": 0.08333333333333333,
            "pseudo_op2_susp": 0.003484320557491289,
            "pseudo_barinel_susp": 0.08333333333333333
        }
    },
    {
        "name": "fastapi.routing.get_app#66",
        "src_path": "fastapi/routing.py",
        "class_name": "fastapi.routing",
        "signature": "fastapi.routing.get_app(dependant: Dependant, body_field: Field=None, status_code: int=200, response_class: Type[Response]=JSONResponse, response_field: Field=None, response_model_include: Set[str]=None, response_model_exclude: Set[str]=set(), response_model_by_alias: bool=True, response_model_skip_defaults: bool=False, dependency_overrides_provider: Any=None)",
        "snippet": "def get_app(\n    dependant: Dependant,\n    body_field: Field = None,\n    status_code: int = 200,\n    response_class: Type[Response] = JSONResponse,\n    response_field: Field = None,\n    response_model_include: Set[str] = None,\n    response_model_exclude: Set[str] = set(),\n    response_model_by_alias: bool = True,\n    response_model_skip_defaults: bool = False,\n    dependency_overrides_provider: Any = None,\n) -> Callable:\n    assert dependant.call is not None, \"dependant.call must be a function\"\n    is_coroutine = asyncio.iscoroutinefunction(dependant.call)\n    is_body_form = body_field and isinstance(body_field.schema, params.Form)\n\n    async def app(request: Request) -> Response:\n        try:\n            body = None\n            if body_field:\n                if is_body_form:\n                    body = await request.form()\n                else:\n                    body_bytes = await request.body()\n                    if body_bytes:\n                        body = await request.json()\n        except Exception as e:\n            logging.error(f\"Error getting request body: {e}\")\n            raise HTTPException(\n                status_code=400, detail=\"There was an error parsing the body\"\n            ) from e\n        solved_result = await solve_dependencies(\n            request=request,\n            dependant=dependant,\n            body=body,\n            dependency_overrides_provider=dependency_overrides_provider,\n        )\n        values, errors, background_tasks, sub_response, _ = solved_result\n        if errors:\n            raise RequestValidationError(errors)\n        else:\n            assert dependant.call is not None, \"dependant.call must be a function\"\n            if is_coroutine:\n                raw_response = await dependant.call(**values)\n            else:\n                raw_response = await run_in_threadpool(dependant.call, **values)\n            if isinstance(raw_response, Response):\n                if raw_response.background is None:\n                    raw_response.background = background_tasks\n                return raw_response\n            response_data = serialize_response(\n                field=response_field,\n                response=raw_response,\n                include=response_model_include,\n                exclude=response_model_exclude,\n                by_alias=response_model_by_alias,\n                skip_defaults=response_model_skip_defaults,\n            )\n            response = response_class(\n                content=response_data,\n                status_code=status_code,\n                background=background_tasks,\n            )\n            response.headers.raw.extend(sub_response.headers.raw)\n            if sub_response.status_code:\n                response.status_code = sub_response.status_code\n            return response\n\n    return app",
        "begin_line": 66,
        "end_line": 134,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.routing.app#82",
        "src_path": "fastapi/routing.py",
        "class_name": "fastapi.routing",
        "signature": "fastapi.routing.app(request: Request)",
        "snippet": "    async def app(request: Request) -> Response:\n        try:\n            body = None\n            if body_field:\n                if is_body_form:\n                    body = await request.form()\n                else:\n                    body_bytes = await request.body()\n                    if body_bytes:\n                        body = await request.json()\n        except Exception as e:\n            logging.error(f\"Error getting request body: {e}\")\n            raise HTTPException(\n                status_code=400, detail=\"There was an error parsing the body\"\n            ) from e\n        solved_result = await solve_dependencies(\n            request=request,\n            dependant=dependant,\n            body=body,\n            dependency_overrides_provider=dependency_overrides_provider,\n        )\n        values, errors, background_tasks, sub_response, _ = solved_result\n        if errors:\n            raise RequestValidationError(errors)\n        else:\n            assert dependant.call is not None, \"dependant.call must be a function\"\n            if is_coroutine:\n                raw_response = await dependant.call(**values)\n            else:\n                raw_response = await run_in_threadpool(dependant.call, **values)\n            if isinstance(raw_response, Response):\n                if raw_response.background is None:\n                    raw_response.background = background_tasks\n                return raw_response\n            response_data = serialize_response(\n                field=response_field,\n                response=raw_response,\n                include=response_model_include,\n                exclude=response_model_exclude,\n                by_alias=response_model_by_alias,\n                skip_defaults=response_model_skip_defaults,\n            )\n            response = response_class(\n                content=response_data,\n                status_code=status_code,\n                background=background_tasks,\n            )\n            response.headers.raw.extend(sub_response.headers.raw)\n            if sub_response.status_code:\n                response.status_code = sub_response.status_code\n            return response",
        "begin_line": 82,
        "end_line": 132,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 1.0,
            "pseudo_dstar_susp": 1.0,
            "pseudo_tarantula_susp": 0.08333333333333333,
            "pseudo_op2_susp": 1.0,
            "pseudo_barinel_susp": 0.08333333333333333
        }
    },
    {
        "name": "fastapi.routing.app#140",
        "src_path": "fastapi/routing.py",
        "class_name": "fastapi.routing",
        "signature": "fastapi.routing.app(websocket: WebSocket)",
        "snippet": "    async def app(websocket: WebSocket) -> None:\n        solved_result = await solve_dependencies(\n            request=websocket,\n            dependant=dependant,\n            dependency_overrides_provider=dependency_overrides_provider,\n        )\n        values, errors, _, _2, _3 = solved_result\n        if errors:\n            await websocket.close(code=WS_1008_POLICY_VIOLATION)\n            raise WebSocketRequestValidationError(errors)\n        assert dependant.call is not None, \"dependant.call must be a function\"\n        await dependant.call(**values)",
        "begin_line": 140,
        "end_line": 151,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.routing.APIRoute.__init__#179",
        "src_path": "fastapi/routing.py",
        "class_name": "fastapi.routing.APIRoute",
        "signature": "fastapi.routing.APIRoute.__init__(self, path: str, endpoint: Callable, *, response_model: Type[Any]=None, status_code: int=200, tags: List[str]=None, dependencies: Sequence[params.Depends]=None, summary: str=None, description: str=None, response_description: str='Successful Response', responses: Dict[Union[int, str], Dict[str, Any]]=None, deprecated: bool=None, name: str=None, methods: Optional[Union[Set[str], List[str]]]=None, operation_id: str=None, response_model_include: Set[str]=None, response_model_exclude: Set[str]=set(), response_model_by_alias: bool=True, response_model_skip_defaults: bool=False, include_in_schema: bool=True, response_class: Type[Response]=JSONResponse, dependency_overrides_provider: Any=None)",
        "snippet": "    def __init__(\n        self,\n        path: str,\n        endpoint: Callable,\n        *,\n        response_model: Type[Any] = None,\n        status_code: int = 200,\n        tags: List[str] = None,\n        dependencies: Sequence[params.Depends] = None,\n        summary: str = None,\n        description: str = None,\n        response_description: str = \"Successful Response\",\n        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n        deprecated: bool = None,\n        name: str = None,\n        methods: Optional[Union[Set[str], List[str]]] = None,\n        operation_id: str = None,\n        response_model_include: Set[str] = None,\n        response_model_exclude: Set[str] = set(),\n        response_model_by_alias: bool = True,\n        response_model_skip_defaults: bool = False,\n        include_in_schema: bool = True,\n        response_class: Type[Response] = JSONResponse,\n        dependency_overrides_provider: Any = None,\n    ) -> None:\n        self.path = path\n        self.endpoint = endpoint\n        self.name = get_name(endpoint) if name is None else name\n        self.path_regex, self.path_format, self.param_convertors = compile_path(path)\n        if methods is None:\n            methods = [\"GET\"]\n        self.methods = set([method.upper() for method in methods])\n        self.unique_id = generate_operation_id_for_path(\n            name=self.name, path=self.path_format, method=list(methods)[0]\n        )\n        self.response_model = response_model\n        if self.response_model:\n            assert lenient_issubclass(\n                response_class, JSONResponse\n            ), \"To declare a type the response must be a JSON response\"\n            response_name = \"Response_\" + self.unique_id\n            self.response_field: Optional[Field] = Field(\n                name=response_name,\n                type_=self.response_model,\n                class_validators={},\n                default=None,\n                required=False,\n                model_config=BaseConfig,\n                schema=Schema(None),\n            )\n            # Create a clone of the field, so that a Pydantic submodel is not returned\n            # as is just because it's an instance of a subclass of a more limited class\n            # e.g. UserInDB (containing hashed_password) could be a subclass of User\n            # that doesn't have the hashed_password. But because it's a subclass, it\n            # would pass the validation and be returned as is.\n            # By being a new field, no inheritance will be passed as is. A new model\n            # will be always created.\n            self.secure_cloned_response_field: Optional[Field] = create_cloned_field(\n                self.response_field\n            )\n        else:\n            self.response_field = None\n            self.secure_cloned_response_field = None\n        self.status_code = status_code\n        self.tags = tags or []\n        if dependencies:\n            self.dependencies = list(dependencies)\n        else:\n            self.dependencies = []\n        self.summary = summary\n        self.description = description or inspect.cleandoc(self.endpoint.__doc__ or \"\")\n        self.response_description = response_description\n        self.responses = responses or {}\n        response_fields = {}\n        for additional_status_code, response in self.responses.items():\n            assert isinstance(response, dict), \"An additional response must be a dict\"\n            model = response.get(\"model\")\n            if model:\n                assert lenient_issubclass(\n                    model, BaseModel\n                ), \"A response model must be a Pydantic model\"\n                response_name = f\"Response_{additional_status_code}_{self.unique_id}\"\n                response_field = Field(\n                    name=response_name,\n                    type_=model,\n                    class_validators=None,\n                    default=None,\n                    required=False,\n                    model_config=BaseConfig,\n                    schema=Schema(None),\n                )\n                response_fields[additional_status_code] = response_field\n        if response_fields:\n            self.response_fields: Dict[Union[int, str], Field] = response_fields\n        else:\n            self.response_fields = {}\n        self.deprecated = deprecated\n        self.operation_id = operation_id\n        self.response_model_include = response_model_include\n        self.response_model_exclude = response_model_exclude\n        self.response_model_by_alias = response_model_by_alias\n        self.response_model_skip_defaults = response_model_skip_defaults\n        self.include_in_schema = include_in_schema\n        self.response_class = response_class\n\n        assert inspect.isfunction(endpoint) or inspect.ismethod(\n            endpoint\n        ), f\"An endpoint must be a function or method\"\n        self.dependant = get_dependant(path=self.path_format, call=self.endpoint)\n        for depends in self.dependencies[::-1]:\n            self.dependant.dependencies.insert(\n                0,\n                get_parameterless_sub_dependant(depends=depends, path=self.path_format),\n            )\n        self.body_field = get_body_field(dependant=self.dependant, name=self.unique_id)\n        self.dependency_overrides_provider = dependency_overrides_provider\n        self.app = request_response(\n            get_app(\n                dependant=self.dependant,\n                body_field=self.body_field,\n                status_code=self.status_code,\n                response_class=self.response_class,\n                response_field=self.secure_cloned_response_field,\n                response_model_include=self.response_model_include,\n                response_model_exclude=self.response_model_exclude,\n                response_model_by_alias=self.response_model_by_alias,\n                response_model_skip_defaults=self.response_model_skip_defaults,\n                dependency_overrides_provider=self.dependency_overrides_provider,\n            )\n        )",
        "begin_line": 179,
        "end_line": 308,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.routing.APIRouter.__init__#312",
        "src_path": "fastapi/routing.py",
        "class_name": "fastapi.routing.APIRouter",
        "signature": "fastapi.routing.APIRouter.__init__(self, routes: List[routing.BaseRoute]=None, redirect_slashes: bool=True, default: ASGIApp=None, dependency_overrides_provider: Any=None)",
        "snippet": "    def __init__(\n        self,\n        routes: List[routing.BaseRoute] = None,\n        redirect_slashes: bool = True,\n        default: ASGIApp = None,\n        dependency_overrides_provider: Any = None,\n    ) -> None:\n        super().__init__(\n            routes=routes, redirect_slashes=redirect_slashes, default=default\n        )\n        self.dependency_overrides_provider = dependency_overrides_provider",
        "begin_line": 312,
        "end_line": 322,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0006784260515603799,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.routing.APIRouter.add_api_route#324",
        "src_path": "fastapi/routing.py",
        "class_name": "fastapi.routing.APIRouter",
        "signature": "fastapi.routing.APIRouter.add_api_route(self, path: str, endpoint: Callable, *, response_model: Type[Any]=None, status_code: int=200, tags: List[str]=None, dependencies: Sequence[params.Depends]=None, summary: str=None, description: str=None, response_description: str='Successful Response', responses: Dict[Union[int, str], Dict[str, Any]]=None, deprecated: bool=None, methods: Optional[Union[Set[str], List[str]]]=None, operation_id: str=None, response_model_include: Set[str]=None, response_model_exclude: Set[str]=set(), response_model_by_alias: bool=True, response_model_skip_defaults: bool=False, include_in_schema: bool=True, response_class: Type[Response]=JSONResponse, name: str=None)",
        "snippet": "    def add_api_route(\n        self,\n        path: str,\n        endpoint: Callable,\n        *,\n        response_model: Type[Any] = None,\n        status_code: int = 200,\n        tags: List[str] = None,\n        dependencies: Sequence[params.Depends] = None,\n        summary: str = None,\n        description: str = None,\n        response_description: str = \"Successful Response\",\n        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n        deprecated: bool = None,\n        methods: Optional[Union[Set[str], List[str]]] = None,\n        operation_id: str = None,\n        response_model_include: Set[str] = None,\n        response_model_exclude: Set[str] = set(),\n        response_model_by_alias: bool = True,\n        response_model_skip_defaults: bool = False,\n        include_in_schema: bool = True,\n        response_class: Type[Response] = JSONResponse,\n        name: str = None,\n    ) -> None:\n        route = APIRoute(\n            path,\n            endpoint=endpoint,\n            response_model=response_model,\n            status_code=status_code,\n            tags=tags or [],\n            dependencies=dependencies,\n            summary=summary,\n            description=description,\n            response_description=response_description,\n            responses=responses or {},\n            deprecated=deprecated,\n            methods=methods,\n            operation_id=operation_id,\n            response_model_include=response_model_include,\n            response_model_exclude=response_model_exclude,\n            response_model_by_alias=response_model_by_alias,\n            response_model_skip_defaults=response_model_skip_defaults,\n            include_in_schema=include_in_schema,\n            response_class=response_class,\n            name=name,\n            dependency_overrides_provider=self.dependency_overrides_provider,\n        )\n        self.routes.append(route)",
        "begin_line": 324,
        "end_line": 371,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.routing.APIRouter.api_route#373",
        "src_path": "fastapi/routing.py",
        "class_name": "fastapi.routing.APIRouter",
        "signature": "fastapi.routing.APIRouter.api_route(self, path: str, *, response_model: Type[Any]=None, status_code: int=200, tags: List[str]=None, dependencies: Sequence[params.Depends]=None, summary: str=None, description: str=None, response_description: str='Successful Response', responses: Dict[Union[int, str], Dict[str, Any]]=None, deprecated: bool=None, methods: List[str]=None, operation_id: str=None, response_model_include: Set[str]=None, response_model_exclude: Set[str]=set(), response_model_by_alias: bool=True, response_model_skip_defaults: bool=False, include_in_schema: bool=True, response_class: Type[Response]=JSONResponse, name: str=None)",
        "snippet": "    def api_route(\n        self,\n        path: str,\n        *,\n        response_model: Type[Any] = None,\n        status_code: int = 200,\n        tags: List[str] = None,\n        dependencies: Sequence[params.Depends] = None,\n        summary: str = None,\n        description: str = None,\n        response_description: str = \"Successful Response\",\n        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n        deprecated: bool = None,\n        methods: List[str] = None,\n        operation_id: str = None,\n        response_model_include: Set[str] = None,\n        response_model_exclude: Set[str] = set(),\n        response_model_by_alias: bool = True,\n        response_model_skip_defaults: bool = False,\n        include_in_schema: bool = True,\n        response_class: Type[Response] = JSONResponse,\n        name: str = None,\n    ) -> Callable:\n        def decorator(func: Callable) -> Callable:\n            self.add_api_route(\n                path,\n                func,\n                response_model=response_model,\n                status_code=status_code,\n                tags=tags or [],\n                dependencies=dependencies,\n                summary=summary,\n                description=description,\n                response_description=response_description,\n                responses=responses or {},\n                deprecated=deprecated,\n                methods=methods,\n                operation_id=operation_id,\n                response_model_include=response_model_include,\n                response_model_exclude=response_model_exclude,\n                response_model_by_alias=response_model_by_alias,\n                response_model_skip_defaults=response_model_skip_defaults,\n                include_in_schema=include_in_schema,\n                response_class=response_class,\n                name=name,\n            )\n            return func\n\n        return decorator",
        "begin_line": 373,
        "end_line": 421,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0006784260515603799,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.routing.APIRouter.decorator#396",
        "src_path": "fastapi/routing.py",
        "class_name": "fastapi.routing.APIRouter",
        "signature": "fastapi.routing.APIRouter.decorator(func: Callable)",
        "snippet": "        def decorator(func: Callable) -> Callable:\n            self.add_api_route(\n                path,\n                func,\n                response_model=response_model,\n                status_code=status_code,\n                tags=tags or [],\n                dependencies=dependencies,\n                summary=summary,\n                description=description,\n                response_description=response_description,\n                responses=responses or {},\n                deprecated=deprecated,\n                methods=methods,\n                operation_id=operation_id,\n                response_model_include=response_model_include,\n                response_model_exclude=response_model_exclude,\n                response_model_by_alias=response_model_by_alias,\n                response_model_skip_defaults=response_model_skip_defaults,\n                include_in_schema=include_in_schema,\n                response_class=response_class,\n                name=name,\n            )\n            return func",
        "begin_line": 396,
        "end_line": 419,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.routing.APIRouter.include_router#436",
        "src_path": "fastapi/routing.py",
        "class_name": "fastapi.routing.APIRouter",
        "signature": "fastapi.routing.APIRouter.include_router(self, router: 'APIRouter', *, prefix: str='', tags: List[str]=None, dependencies: Sequence[params.Depends]=None, responses: Dict[Union[int, str], Dict[str, Any]]=None)",
        "snippet": "    def include_router(\n        self,\n        router: \"APIRouter\",\n        *,\n        prefix: str = \"\",\n        tags: List[str] = None,\n        dependencies: Sequence[params.Depends] = None,\n        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n    ) -> None:\n        if prefix:\n            assert prefix.startswith(\"/\"), \"A path prefix must start with '/'\"\n            assert not prefix.endswith(\n                \"/\"\n            ), \"A path prefix must not end with '/', as the routes will start with '/'\"\n        else:\n            for r in router.routes:\n                path = getattr(r, \"path\")\n                name = getattr(r, \"name\", \"unknown\")\n                if path is not None and not path:\n                    raise Exception(\n                        f\"Prefix and path cannot be both empty (path operation: {name})\"\n                    )\n        if responses is None:\n            responses = {}\n        for route in router.routes:\n            if isinstance(route, APIRoute):\n                combined_responses = {**responses, **route.responses}\n                self.add_api_route(\n                    prefix + route.path,\n                    route.endpoint,\n                    response_model=route.response_model,\n                    status_code=route.status_code,\n                    tags=(route.tags or []) + (tags or []),\n                    dependencies=list(dependencies or [])\n                    + list(route.dependencies or []),\n                    summary=route.summary,\n                    description=route.description,\n                    response_description=route.response_description,\n                    responses=combined_responses,\n                    deprecated=route.deprecated,\n                    methods=route.methods,\n                    operation_id=route.operation_id,\n                    response_model_include=route.response_model_include,\n                    response_model_exclude=route.response_model_exclude,\n                    response_model_by_alias=route.response_model_by_alias,\n                    response_model_skip_defaults=route.response_model_skip_defaults,\n                    include_in_schema=route.include_in_schema,\n                    response_class=route.response_class,\n                    name=route.name,\n                )\n            elif isinstance(route, routing.Route):\n                self.add_route(\n                    prefix + route.path,\n                    route.endpoint,\n                    methods=list(route.methods or []),\n                    include_in_schema=route.include_in_schema,\n                    name=route.name,\n                )\n            elif isinstance(route, APIWebSocketRoute):\n                self.add_api_websocket_route(\n                    prefix + route.path, route.endpoint, name=route.name\n                )\n            elif isinstance(route, routing.WebSocketRoute):\n                self.add_websocket_route(\n                    prefix + route.path, route.endpoint, name=route.name\n                )",
        "begin_line": 436,
        "end_line": 501,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.routing.APIRouter.get#503",
        "src_path": "fastapi/routing.py",
        "class_name": "fastapi.routing.APIRouter",
        "signature": "fastapi.routing.APIRouter.get(self, path: str, *, response_model: Type[Any]=None, status_code: int=200, tags: List[str]=None, dependencies: Sequence[params.Depends]=None, summary: str=None, description: str=None, response_description: str='Successful Response', responses: Dict[Union[int, str], Dict[str, Any]]=None, deprecated: bool=None, operation_id: str=None, response_model_include: Set[str]=None, response_model_exclude: Set[str]=set(), response_model_by_alias: bool=True, response_model_skip_defaults: bool=False, include_in_schema: bool=True, response_class: Type[Response]=JSONResponse, name: str=None)",
        "snippet": "    def get(\n        self,\n        path: str,\n        *,\n        response_model: Type[Any] = None,\n        status_code: int = 200,\n        tags: List[str] = None,\n        dependencies: Sequence[params.Depends] = None,\n        summary: str = None,\n        description: str = None,\n        response_description: str = \"Successful Response\",\n        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n        deprecated: bool = None,\n        operation_id: str = None,\n        response_model_include: Set[str] = None,\n        response_model_exclude: Set[str] = set(),\n        response_model_by_alias: bool = True,\n        response_model_skip_defaults: bool = False,\n        include_in_schema: bool = True,\n        response_class: Type[Response] = JSONResponse,\n        name: str = None,\n    ) -> Callable:\n\n        return self.api_route(\n            path=path,\n            response_model=response_model,\n            status_code=status_code,\n            tags=tags or [],\n            dependencies=dependencies,\n            summary=summary,\n            description=description,\n            response_description=response_description,\n            responses=responses or {},\n            deprecated=deprecated,\n            methods=[\"GET\"],\n            operation_id=operation_id,\n            response_model_include=response_model_include,\n            response_model_exclude=response_model_exclude,\n            response_model_by_alias=response_model_by_alias,\n            response_model_skip_defaults=response_model_skip_defaults,\n            include_in_schema=include_in_schema,\n            response_class=response_class,\n            name=name,\n        )",
        "begin_line": 503,
        "end_line": 546,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0006784260515603799,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.app_testing.tutorial003.startup_event#10",
        "src_path": "docs/src/app_testing/tutorial003.py",
        "class_name": "docs.src.app_testing.tutorial003",
        "signature": "docs.src.app_testing.tutorial003.startup_event()",
        "snippet": "async def startup_event():\n    items[\"foo\"] = {\"name\": \"Fighters\"}\n    items[\"bar\"] = {\"name\": \"Tenders\"}",
        "begin_line": 10,
        "end_line": 12,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.app_testing.tutorial003.read_items#16",
        "src_path": "docs/src/app_testing/tutorial003.py",
        "class_name": "docs.src.app_testing.tutorial003",
        "signature": "docs.src.app_testing.tutorial003.read_items(item_id: str)",
        "snippet": "async def read_items(item_id: str):\n    return items[item_id]",
        "begin_line": 16,
        "end_line": 17,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.app_testing.tutorial003.test_read_items#20",
        "src_path": "docs/src/app_testing/tutorial003.py",
        "class_name": "docs.src.app_testing.tutorial003",
        "signature": "docs.src.app_testing.tutorial003.test_read_items()",
        "snippet": "def test_read_items():\n    with TestClient(app) as client:\n        response = client.get(\"/items/foo\")\n        assert response.status_code == 200\n        assert response.json() == {\"name\": \"Fighters\"}",
        "begin_line": 20,
        "end_line": 24,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.response_headers.tutorial002.get_headers#8",
        "src_path": "docs/src/response_headers/tutorial002.py",
        "class_name": "docs.src.response_headers.tutorial002",
        "signature": "docs.src.response_headers.tutorial002.get_headers(response: Response)",
        "snippet": "def get_headers(response: Response):\n    response.headers[\"X-Cat-Dog\"] = \"alone in the world\"\n    return {\"message\": \"Hello World\"}",
        "begin_line": 8,
        "end_line": 10,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.additional_responses.tutorial002.read_item#24",
        "src_path": "docs/src/additional_responses/tutorial002.py",
        "class_name": "docs.src.additional_responses.tutorial002",
        "signature": "docs.src.additional_responses.tutorial002.read_item(item_id: str, img: bool=None)",
        "snippet": "async def read_item(item_id: str, img: bool = None):\n    if img:\n        return FileResponse(\"image.png\", media_type=\"image/png\")\n    else:\n        return {\"id\": \"foo\", \"value\": \"there goes my hero\"}",
        "begin_line": 24,
        "end_line": 28,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.extra_data_types.tutorial001.read_items#10",
        "src_path": "docs/src/extra_data_types/tutorial001.py",
        "class_name": "docs.src.extra_data_types.tutorial001",
        "signature": "docs.src.extra_data_types.tutorial001.read_items(item_id: UUID, start_datetime: datetime=Body(None), end_datetime: datetime=Body(None), repeat_at: time=Body(None), process_after: timedelta=Body(None))",
        "snippet": "async def read_items(\n    item_id: UUID,\n    start_datetime: datetime = Body(None),\n    end_datetime: datetime = Body(None),\n    repeat_at: time = Body(None),\n    process_after: timedelta = Body(None),\n):\n    start_process = start_datetime + process_after\n    duration = end_datetime - start_process\n    return {\n        \"item_id\": item_id,\n        \"start_datetime\": start_datetime,\n        \"end_datetime\": end_datetime,\n        \"repeat_at\": repeat_at,\n        \"process_after\": process_after,\n        \"start_process\": start_process,\n        \"duration\": duration,\n    }",
        "begin_line": 10,
        "end_line": 27,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.custom_response.tutorial004.generate_html_response#7",
        "src_path": "docs/src/custom_response/tutorial004.py",
        "class_name": "docs.src.custom_response.tutorial004",
        "signature": "docs.src.custom_response.tutorial004.generate_html_response()",
        "snippet": "def generate_html_response():\n    html_content = \"\"\"\n    <html>\n        <head>\n            <title>Some HTML in here</title>\n        </head>\n        <body>\n            <h1>Look ma! HTML!</h1>\n        </body>\n    </html>\n    \"\"\"\n    return HTMLResponse(content=html_content, status_code=200)",
        "begin_line": 7,
        "end_line": 18,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.custom_response.tutorial004.read_items#22",
        "src_path": "docs/src/custom_response/tutorial004.py",
        "class_name": "docs.src.custom_response.tutorial004",
        "signature": "docs.src.custom_response.tutorial004.read_items()",
        "snippet": "async def read_items():\n    return generate_html_response()",
        "begin_line": 22,
        "end_line": 23,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.response_model.tutorial006.read_item_name#31",
        "src_path": "docs/src/response_model/tutorial006.py",
        "class_name": "docs.src.response_model.tutorial006",
        "signature": "docs.src.response_model.tutorial006.read_item_name(item_id: str)",
        "snippet": "async def read_item_name(item_id: str):\n    return items[item_id]",
        "begin_line": 31,
        "end_line": 32,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.response_model.tutorial006.read_item_public_data#36",
        "src_path": "docs/src/response_model/tutorial006.py",
        "class_name": "docs.src.response_model.tutorial006",
        "signature": "docs.src.response_model.tutorial006.read_item_public_data(item_id: str)",
        "snippet": "async def read_item_public_data(item_id: str):\n    return items[item_id]",
        "begin_line": 36,
        "end_line": 37,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.request_forms.tutorial001.login#7",
        "src_path": "docs/src/request_forms/tutorial001.py",
        "class_name": "docs.src.request_forms.tutorial001",
        "signature": "docs.src.request_forms.tutorial001.login(*, username: str=Form(...), password: str=Form(...))",
        "snippet": "async def login(*, username: str = Form(...), password: str = Form(...)):\n    return {\"username\": username}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.extra_models.tutorial003.read_item#34",
        "src_path": "docs/src/extra_models/tutorial003.py",
        "class_name": "docs.src.extra_models.tutorial003",
        "signature": "docs.src.extra_models.tutorial003.read_item(item_id: str)",
        "snippet": "async def read_item(item_id: str):\n    return items[item_id]",
        "begin_line": 34,
        "end_line": 35,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.query_params_str_validations.tutorial013.read_items#7",
        "src_path": "docs/src/query_params_str_validations/tutorial013.py",
        "class_name": "docs.src.query_params_str_validations.tutorial013",
        "signature": "docs.src.query_params_str_validations.tutorial013.read_items(q: list=Query(None))",
        "snippet": "async def read_items(q: list = Query(None)):\n    query_items = {\"q\": q}\n    return query_items",
        "begin_line": 7,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.security.tutorial001.read_items#10",
        "src_path": "docs/src/security/tutorial001.py",
        "class_name": "docs.src.security.tutorial001",
        "signature": "docs.src.security.tutorial001.read_items(token: str=Depends(oauth2_scheme))",
        "snippet": "async def read_items(token: str = Depends(oauth2_scheme)):\n    return {\"token\": token}",
        "begin_line": 10,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.dependencies.utils.get_param_sub_dependant#54",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.get_param_sub_dependant(*, param: inspect.Parameter, path: str, security_scopes: List[str]=None)",
        "snippet": "def get_param_sub_dependant(\n    *, param: inspect.Parameter, path: str, security_scopes: List[str] = None\n) -> Dependant:\n    depends: params.Depends = param.default\n    if depends.dependency:\n        dependency = depends.dependency\n    else:\n        dependency = param.annotation\n    return get_sub_dependant(\n        depends=depends,\n        dependency=dependency,\n        path=path,\n        name=param.name,\n        security_scopes=security_scopes,\n    )",
        "begin_line": 54,
        "end_line": 68,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.009615384615384616,
            "pseudo_dstar_susp": 0.007042253521126761,
            "pseudo_tarantula_susp": 0.02631578947368421,
            "pseudo_op2_susp": 0.007042253521126761,
            "pseudo_barinel_susp": 0.02631578947368421
        }
    },
    {
        "name": "fastapi.dependencies.utils.get_sub_dependant#78",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.get_sub_dependant(*, depends: params.Depends, dependency: Callable, path: str, name: str=None, security_scopes: List[str]=None)",
        "snippet": "def get_sub_dependant(\n    *,\n    depends: params.Depends,\n    dependency: Callable,\n    path: str,\n    name: str = None,\n    security_scopes: List[str] = None,\n) -> Dependant:\n    security_requirement = None\n    security_scopes = security_scopes or []\n    if isinstance(depends, params.Security):\n        dependency_scopes = depends.scopes\n        security_scopes.extend(dependency_scopes)\n    if isinstance(dependency, SecurityBase):\n        use_scopes: List[str] = []\n        if isinstance(dependency, (OAuth2, OpenIdConnect)):\n            use_scopes = security_scopes\n        security_requirement = SecurityRequirement(\n            security_scheme=dependency, scopes=use_scopes\n        )\n    sub_dependant = get_dependant(\n        path=path,\n        call=dependency,\n        name=name,\n        security_scopes=security_scopes,\n        use_cache=depends.use_cache,\n    )\n    if security_requirement:\n        sub_dependant.security_requirements.append(security_requirement)\n    sub_dependant.security_scopes = security_scopes\n    return sub_dependant",
        "begin_line": 78,
        "end_line": 108,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.009615384615384616,
            "pseudo_dstar_susp": 0.007042253521126761,
            "pseudo_tarantula_susp": 0.02631578947368421,
            "pseudo_op2_susp": 0.007042253521126761,
            "pseudo_barinel_susp": 0.02631578947368421
        }
    },
    {
        "name": "fastapi.dependencies.utils.get_flat_dependant#114",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.get_flat_dependant(dependant: Dependant, *, skip_repeats: bool=False, visited: List[CacheKey]=None)",
        "snippet": "def get_flat_dependant(\n    dependant: Dependant, *, skip_repeats: bool = False, visited: List[CacheKey] = None\n) -> Dependant:\n    if visited is None:\n        visited = []\n    visited.append(dependant.cache_key)\n\n    flat_dependant = Dependant(\n        path_params=dependant.path_params.copy(),\n        query_params=dependant.query_params.copy(),\n        header_params=dependant.header_params.copy(),\n        cookie_params=dependant.cookie_params.copy(),\n        body_params=dependant.body_params.copy(),\n        security_schemes=dependant.security_requirements.copy(),\n        use_cache=dependant.use_cache,\n        path=dependant.path,\n    )\n    for sub_dependant in dependant.dependencies:\n        if skip_repeats and sub_dependant.cache_key in visited:\n            continue\n        flat_sub = get_flat_dependant(\n            sub_dependant, skip_repeats=skip_repeats, visited=visited\n        )\n        flat_dependant.path_params.extend(flat_sub.path_params)\n        flat_dependant.query_params.extend(flat_sub.query_params)\n        flat_dependant.header_params.extend(flat_sub.header_params)\n        flat_dependant.cookie_params.extend(flat_sub.cookie_params)\n        flat_dependant.body_params.extend(flat_sub.body_params)\n        flat_dependant.security_requirements.extend(flat_sub.security_requirements)\n    return flat_dependant",
        "begin_line": 114,
        "end_line": 143,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.dependencies.utils.is_scalar_field#146",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.is_scalar_field(field: Field)",
        "snippet": "def is_scalar_field(field: Field) -> bool:\n    if not (\n        field.shape == Shape.SINGLETON\n        and not lenient_issubclass(field.type_, BaseModel)\n        and not lenient_issubclass(field.type_, sequence_types + (dict,))\n        and not isinstance(field.schema, params.Body)\n    ):\n        return False\n    if field.sub_fields:\n        if not all(is_scalar_field(f) for f in field.sub_fields):\n            return False\n    return True",
        "begin_line": 146,
        "end_line": 157,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.006060606060606061,
            "pseudo_dstar_susp": 0.006024096385542169,
            "pseudo_tarantula_susp": 0.01098901098901099,
            "pseudo_op2_susp": 0.006024096385542169,
            "pseudo_barinel_susp": 0.01098901098901099
        }
    },
    {
        "name": "fastapi.dependencies.utils.is_scalar_sequence_field#160",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.is_scalar_sequence_field(field: Field)",
        "snippet": "def is_scalar_sequence_field(field: Field) -> bool:\n    if (field.shape in sequence_shapes) and not lenient_issubclass(\n        field.type_, BaseModel\n    ):\n        if field.sub_fields is not None:\n            for sub_field in field.sub_fields:\n                if not is_scalar_field(sub_field):\n                    return False\n        return True\n    if lenient_issubclass(field.type_, sequence_types):\n        return True\n    return False",
        "begin_line": 160,
        "end_line": 171,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.01639344262295082,
            "pseudo_dstar_susp": 0.02040816326530612,
            "pseudo_tarantula_susp": 0.008620689655172414,
            "pseudo_op2_susp": 0.02040816326530612,
            "pseudo_barinel_susp": 0.008620689655172414
        }
    },
    {
        "name": "fastapi.dependencies.utils.get_dependant#174",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.get_dependant(*, path: str, call: Callable, name: str=None, security_scopes: List[str]=None, use_cache: bool=True)",
        "snippet": "def get_dependant(\n    *,\n    path: str,\n    call: Callable,\n    name: str = None,\n    security_scopes: List[str] = None,\n    use_cache: bool = True,\n) -> Dependant:\n    path_param_names = get_path_param_names(path)\n    endpoint_signature = inspect.signature(call)\n    signature_params = endpoint_signature.parameters\n    dependant = Dependant(call=call, name=name, path=path, use_cache=use_cache)\n    for param_name, param in signature_params.items():\n        if isinstance(param.default, params.Depends):\n            sub_dependant = get_param_sub_dependant(\n                param=param, path=path, security_scopes=security_scopes\n            )\n            dependant.dependencies.append(sub_dependant)\n    for param_name, param in signature_params.items():\n        if isinstance(param.default, params.Depends):\n            continue\n        if add_non_field_param_to_dependency(param=param, dependant=dependant):\n            continue\n        param_field = get_param_field(param=param, default_schema=params.Query)\n        if param_name in path_param_names:\n            assert param.default == param.empty or isinstance(\n                param.default, params.Path\n            ), \"Path params must have no defaults or use Path(...)\"\n            assert is_scalar_field(\n                field=param_field\n            ), f\"Path params must be of one of the supported types\"\n            param_field = get_param_field(\n                param=param,\n                default_schema=params.Path,\n                force_type=params.ParamTypes.path,\n            )\n            add_param_to_fields(field=param_field, dependant=dependant)\n        elif is_scalar_field(field=param_field):\n            add_param_to_fields(field=param_field, dependant=dependant)\n        elif isinstance(\n            param.default, (params.Query, params.Header)\n        ) and is_scalar_sequence_field(param_field):\n            add_param_to_fields(field=param_field, dependant=dependant)\n        else:\n            assert isinstance(\n                param_field.schema, params.Body\n            ), f\"Param: {param_field.name} can only be a request body, using Body(...)\"\n            dependant.body_params.append(param_field)\n    return dependant",
        "begin_line": 174,
        "end_line": 222,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.009615384615384616,
            "pseudo_dstar_susp": 0.007042253521126761,
            "pseudo_tarantula_susp": 0.02631578947368421,
            "pseudo_op2_susp": 0.007042253521126761,
            "pseudo_barinel_susp": 0.02631578947368421
        }
    },
    {
        "name": "fastapi.dependencies.utils.add_non_field_param_to_dependency#225",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.add_non_field_param_to_dependency(*, param: inspect.Parameter, dependant: Dependant)",
        "snippet": "def add_non_field_param_to_dependency(\n    *, param: inspect.Parameter, dependant: Dependant\n) -> Optional[bool]:\n    if lenient_issubclass(param.annotation, Request):\n        dependant.request_param_name = param.name\n        return True\n    elif lenient_issubclass(param.annotation, WebSocket):\n        dependant.websocket_param_name = param.name\n        return True\n    elif lenient_issubclass(param.annotation, Response):\n        dependant.response_param_name = param.name\n        return True\n    elif lenient_issubclass(param.annotation, BackgroundTasks):\n        dependant.background_tasks_param_name = param.name\n        return True\n    elif lenient_issubclass(param.annotation, SecurityScopes):\n        dependant.security_scopes_param_name = param.name\n        return True\n    return None",
        "begin_line": 225,
        "end_line": 243,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.004545454545454545,
            "pseudo_dstar_susp": 0.004651162790697674,
            "pseudo_tarantula_susp": 0.004784688995215311,
            "pseudo_op2_susp": 0.004651162790697674,
            "pseudo_barinel_susp": 0.004784688995215311
        }
    },
    {
        "name": "fastapi.dependencies.utils.get_param_field#246",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.get_param_field(*, param: inspect.Parameter, default_schema: Type[params.Param]=params.Param, force_type: params.ParamTypes=None)",
        "snippet": "def get_param_field(\n    *,\n    param: inspect.Parameter,\n    default_schema: Type[params.Param] = params.Param,\n    force_type: params.ParamTypes = None,\n) -> Field:\n    default_value = Required\n    had_schema = False\n    if not param.default == param.empty:\n        default_value = param.default\n    if isinstance(default_value, Schema):\n        had_schema = True\n        schema = default_value\n        default_value = schema.default\n        if isinstance(schema, params.Param) and getattr(schema, \"in_\", None) is None:\n            schema.in_ = default_schema.in_\n        if force_type:\n            schema.in_ = force_type  # type: ignore\n    else:\n        schema = default_schema(default_value)\n    required = default_value == Required\n    annotation: Any = Any\n    if not param.annotation == param.empty:\n        annotation = param.annotation\n    annotation = get_annotation_from_schema(annotation, schema)\n    if not schema.alias and getattr(schema, \"convert_underscores\", None):\n        alias = param.name.replace(\"_\", \"-\")\n    else:\n        alias = schema.alias or param.name\n    field = Field(\n        name=param.name,\n        type_=annotation,\n        default=None if required else default_value,\n        alias=alias,\n        required=required,\n        model_config=BaseConfig,\n        class_validators={},\n        schema=schema,\n    )\n    if not had_schema and not is_scalar_field(field=field):\n        field.schema = params.Body(schema.default)\n    return field",
        "begin_line": 246,
        "end_line": 287,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.005376344086021506,
            "pseudo_dstar_susp": 0.0055248618784530384,
            "pseudo_tarantula_susp": 0.007633587786259542,
            "pseudo_op2_susp": 0.0055248618784530384,
            "pseudo_barinel_susp": 0.007633587786259542
        }
    },
    {
        "name": "fastapi.dependencies.utils.add_param_to_fields#290",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.add_param_to_fields(*, field: Field, dependant: Dependant)",
        "snippet": "def add_param_to_fields(*, field: Field, dependant: Dependant) -> None:\n    field.schema = cast(params.Param, field.schema)\n    if field.schema.in_ == params.ParamTypes.path:\n        dependant.path_params.append(field)\n    elif field.schema.in_ == params.ParamTypes.query:\n        dependant.query_params.append(field)\n    elif field.schema.in_ == params.ParamTypes.header:\n        dependant.header_params.append(field)\n    else:\n        assert (\n            field.schema.in_ == params.ParamTypes.cookie\n        ), f\"non-body parameters must be in path, query, header or cookie: {field.name}\"\n        dependant.cookie_params.append(field)",
        "begin_line": 290,
        "end_line": 302,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.006060606060606061,
            "pseudo_dstar_susp": 0.006024096385542169,
            "pseudo_tarantula_susp": 0.01098901098901099,
            "pseudo_op2_susp": 0.006024096385542169,
            "pseudo_barinel_susp": 0.01098901098901099
        }
    },
    {
        "name": "fastapi.dependencies.utils.is_coroutine_callable#305",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.is_coroutine_callable(call: Callable)",
        "snippet": "def is_coroutine_callable(call: Callable) -> bool:\n    if inspect.isfunction(call):\n        return asyncio.iscoroutinefunction(call)\n    if inspect.isclass(call):\n        return False\n    call = getattr(call, \"__call__\", None)\n    return asyncio.iscoroutinefunction(call)",
        "begin_line": 305,
        "end_line": 311,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0028735632183908046,
            "pseudo_dstar_susp": 0.0028735632183908046,
            "pseudo_tarantula_susp": 0.0028735632183908046,
            "pseudo_op2_susp": 0.0028735632183908046,
            "pseudo_barinel_susp": 0.0028735632183908046
        }
    },
    {
        "name": "fastapi.dependencies.utils.solve_dependencies#314",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.solve_dependencies(*, request: Union[Request, WebSocket], dependant: Dependant, body: Optional[Union[Dict[str, Any], FormData]]=None, background_tasks: BackgroundTasks=None, response: Response=None, dependency_overrides_provider: Any=None, dependency_cache: Dict[Tuple[Callable, Tuple[str]], Any]=None)",
        "snippet": "async def solve_dependencies(\n    *,\n    request: Union[Request, WebSocket],\n    dependant: Dependant,\n    body: Optional[Union[Dict[str, Any], FormData]] = None,\n    background_tasks: BackgroundTasks = None,\n    response: Response = None,\n    dependency_overrides_provider: Any = None,\n    dependency_cache: Dict[Tuple[Callable, Tuple[str]], Any] = None,\n) -> Tuple[\n    Dict[str, Any],\n    List[ErrorWrapper],\n    Optional[BackgroundTasks],\n    Response,\n    Dict[Tuple[Callable, Tuple[str]], Any],\n]:\n    values: Dict[str, Any] = {}\n    errors: List[ErrorWrapper] = []\n    response = response or Response(  # type: ignore\n        content=None, status_code=None, headers=None, media_type=None, background=None\n    )\n    dependency_cache = dependency_cache or {}\n    sub_dependant: Dependant\n    for sub_dependant in dependant.dependencies:\n        sub_dependant.call = cast(Callable, sub_dependant.call)\n        sub_dependant.cache_key = cast(\n            Tuple[Callable, Tuple[str]], sub_dependant.cache_key\n        )\n        call = sub_dependant.call\n        use_sub_dependant = sub_dependant\n        if (\n            dependency_overrides_provider\n            and dependency_overrides_provider.dependency_overrides\n        ):\n            original_call = sub_dependant.call\n            call = getattr(\n                dependency_overrides_provider, \"dependency_overrides\", {}\n            ).get(original_call, original_call)\n            use_path: str = sub_dependant.path  # type: ignore\n            use_sub_dependant = get_dependant(\n                path=use_path,\n                call=call,\n                name=sub_dependant.name,\n                security_scopes=sub_dependant.security_scopes,\n            )\n\n        solved_result = await solve_dependencies(\n            request=request,\n            dependant=use_sub_dependant,\n            body=body,\n            background_tasks=background_tasks,\n            response=response,\n            dependency_overrides_provider=dependency_overrides_provider,\n            dependency_cache=dependency_cache,\n        )\n        sub_values, sub_errors, background_tasks, sub_response, sub_dependency_cache = (\n            solved_result\n        )\n        sub_response = cast(Response, sub_response)\n        response.headers.raw.extend(sub_response.headers.raw)\n        if sub_response.status_code:\n            response.status_code = sub_response.status_code\n        dependency_cache.update(sub_dependency_cache)\n        if sub_errors:\n            errors.extend(sub_errors)\n            continue\n        if sub_dependant.use_cache and sub_dependant.cache_key in dependency_cache:\n            solved = dependency_cache[sub_dependant.cache_key]\n        elif is_coroutine_callable(call):\n            solved = await call(**sub_values)\n        else:\n            solved = await run_in_threadpool(call, **sub_values)\n        if sub_dependant.name is not None:\n            values[sub_dependant.name] = solved\n        if sub_dependant.cache_key not in dependency_cache:\n            dependency_cache[sub_dependant.cache_key] = solved\n    path_values, path_errors = request_params_to_args(\n        dependant.path_params, request.path_params\n    )\n    query_values, query_errors = request_params_to_args(\n        dependant.query_params, request.query_params\n    )\n    header_values, header_errors = request_params_to_args(\n        dependant.header_params, request.headers\n    )\n    cookie_values, cookie_errors = request_params_to_args(\n        dependant.cookie_params, request.cookies\n    )\n    values.update(path_values)\n    values.update(query_values)\n    values.update(header_values)\n    values.update(cookie_values)\n    errors += path_errors + query_errors + header_errors + cookie_errors\n    if dependant.body_params:\n        body_values, body_errors = await request_body_to_args(  # type: ignore # body_params checked above\n            required_params=dependant.body_params, received_body=body\n        )\n        values.update(body_values)\n        errors.extend(body_errors)\n    if dependant.request_param_name and isinstance(request, Request):\n        values[dependant.request_param_name] = request\n    elif dependant.websocket_param_name and isinstance(request, WebSocket):\n        values[dependant.websocket_param_name] = request\n    if dependant.background_tasks_param_name:\n        if background_tasks is None:\n            background_tasks = BackgroundTasks()\n        values[dependant.background_tasks_param_name] = background_tasks\n    if dependant.response_param_name:\n        values[dependant.response_param_name] = response\n    if dependant.security_scopes_param_name:\n        values[dependant.security_scopes_param_name] = SecurityScopes(\n            scopes=dependant.security_scopes\n        )\n    return values, errors, background_tasks, response, dependency_cache",
        "begin_line": 314,
        "end_line": 427,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.1,
            "pseudo_dstar_susp": 0.3333333333333333,
            "pseudo_tarantula_susp": 0.08333333333333333,
            "pseudo_op2_susp": 0.3333333333333333,
            "pseudo_barinel_susp": 0.08333333333333333
        }
    },
    {
        "name": "fastapi.dependencies.utils.request_params_to_args#430",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.request_params_to_args(required_params: Sequence[Field], received_params: Union[Mapping[str, Any], QueryParams, Headers])",
        "snippet": "def request_params_to_args(\n    required_params: Sequence[Field],\n    received_params: Union[Mapping[str, Any], QueryParams, Headers],\n) -> Tuple[Dict[str, Any], List[ErrorWrapper]]:\n    values = {}\n    errors = []\n    for field in required_params:\n        if is_scalar_sequence_field(field) and isinstance(\n            received_params, (QueryParams, Headers)\n        ):\n            value = received_params.getlist(field.alias) or field.default\n        else:\n            value = received_params.get(field.alias)\n        schema = field.schema\n        assert isinstance(schema, params.Param), \"Params must be subclasses of Param\"\n        if value is None:\n            if field.required:\n                errors.append(\n                    ErrorWrapper(\n                        MissingError(),\n                        loc=(schema.in_.value, field.alias),\n                        config=BaseConfig,\n                    )\n                )\n            else:\n                values[field.name] = deepcopy(field.default)\n            continue\n        v_, errors_ = field.validate(value, values, loc=(schema.in_.value, field.alias))\n        if isinstance(errors_, ErrorWrapper):\n            errors.append(errors_)\n        elif isinstance(errors_, list):\n            errors.extend(errors_)\n        else:\n            values[field.name] = v_\n    return values, errors",
        "begin_line": 430,
        "end_line": 464,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.5,
            "pseudo_dstar_susp": 0.03571428571428571,
            "pseudo_tarantula_susp": 0.08333333333333333,
            "pseudo_op2_susp": 0.03571428571428571,
            "pseudo_barinel_susp": 0.08333333333333333
        }
    },
    {
        "name": "fastapi.dependencies.utils.request_body_to_args#467",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.request_body_to_args(required_params: List[Field], received_body: Optional[Union[Dict[str, Any], FormData]])",
        "snippet": "async def request_body_to_args(\n    required_params: List[Field],\n    received_body: Optional[Union[Dict[str, Any], FormData]],\n) -> Tuple[Dict[str, Any], List[ErrorWrapper]]:\n    values = {}\n    errors = []\n    if required_params:\n        field = required_params[0]\n        embed = getattr(field.schema, \"embed\", None)\n        if len(required_params) == 1 and not embed:\n            received_body = {field.alias: received_body}\n        for field in required_params:\n            value: Any = None\n            if received_body is not None:\n                if field.shape in sequence_shapes and isinstance(\n                    received_body, FormData\n                ):\n                    value = received_body.getlist(field.alias)\n                else:\n                    value = received_body.get(field.alias)\n            if (\n                value is None\n                or (isinstance(field.schema, params.Form) and value == \"\")\n                or (\n                    isinstance(field.schema, params.Form)\n                    and field.shape in sequence_shapes\n                    and len(value) == 0\n                )\n            ):\n                if field.required:\n                    errors.append(\n                        ErrorWrapper(\n                            MissingError(), loc=(\"body\", field.alias), config=BaseConfig\n                        )\n                    )\n                else:\n                    values[field.name] = deepcopy(field.default)\n                continue\n            if (\n                isinstance(field.schema, params.File)\n                and lenient_issubclass(field.type_, bytes)\n                and isinstance(value, UploadFile)\n            ):\n                value = await value.read()\n            elif (\n                field.shape in sequence_shapes\n                and isinstance(field.schema, params.File)\n                and lenient_issubclass(field.type_, bytes)\n                and isinstance(value, sequence_types)\n            ):\n                awaitables = [sub_value.read() for sub_value in value]\n                contents = await asyncio.gather(*awaitables)\n                value = sequence_shape_to_type[field.shape](contents)\n            v_, errors_ = field.validate(value, values, loc=(\"body\", field.alias))\n            if isinstance(errors_, ErrorWrapper):\n                errors.append(errors_)\n            elif isinstance(errors_, list):\n                errors.extend(errors_)\n            else:\n                values[field.name] = v_\n    return values, errors",
        "begin_line": 467,
        "end_line": 527,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.018518518518518517,
            "pseudo_dstar_susp": 0.015384615384615385,
            "pseudo_tarantula_susp": 0.08333333333333333,
            "pseudo_op2_susp": 0.015384615384615385,
            "pseudo_barinel_susp": 0.08333333333333333
        }
    },
    {
        "name": "fastapi.dependencies.utils.get_body_field#549",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.get_body_field(*, dependant: Dependant, name: str)",
        "snippet": "def get_body_field(*, dependant: Dependant, name: str) -> Optional[Field]:\n    flat_dependant = get_flat_dependant(dependant)\n    if not flat_dependant.body_params:\n        return None\n    first_param = flat_dependant.body_params[0]\n    embed = getattr(first_param.schema, \"embed\", None)\n    if len(flat_dependant.body_params) == 1 and not embed:\n        return get_schema_compatible_field(field=first_param)\n    model_name = \"Body_\" + name\n    BodyModel = create_model(model_name)\n    for f in flat_dependant.body_params:\n        BodyModel.__fields__[f.name] = get_schema_compatible_field(field=f)\n    required = any(True for f in flat_dependant.body_params if f.required)\n    if any(isinstance(f.schema, params.File) for f in flat_dependant.body_params):\n        BodySchema: Type[params.Body] = params.File\n    elif any(isinstance(f.schema, params.Form) for f in flat_dependant.body_params):\n        BodySchema = params.Form\n    else:\n        BodySchema = params.Body\n\n    field = Field(\n        name=\"body\",\n        type_=BodyModel,\n        default=None,\n        required=required,\n        model_config=BaseConfig,\n        class_validators={},\n        alias=\"body\",\n        schema=BodySchema(None),\n    )\n    return field",
        "begin_line": 549,
        "end_line": 579,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.additional_status_codes.tutorial001.upsert_item#11",
        "src_path": "docs/src/additional_status_codes/tutorial001.py",
        "class_name": "docs.src.additional_status_codes.tutorial001",
        "signature": "docs.src.additional_status_codes.tutorial001.upsert_item(item_id: str, name: str=Body(None), size: int=Body(None))",
        "snippet": "async def upsert_item(item_id: str, name: str = Body(None), size: int = Body(None)):\n    if item_id in items:\n        item = items[item_id]\n        item[\"name\"] = name\n        item[\"size\"] = size\n        return item\n    else:\n        item = {\"name\": name, \"size\": size}\n        items[item_id] = item\n        return JSONResponse(status_code=HTTP_201_CREATED, content=item)",
        "begin_line": 11,
        "end_line": 20,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.sql_databases.sql_app.crud.get_user#6",
        "src_path": "docs/src/sql_databases/sql_app/crud.py",
        "class_name": "docs.src.sql_databases.sql_app.crud",
        "signature": "docs.src.sql_databases.sql_app.crud.get_user(db: Session, user_id: int)",
        "snippet": "def get_user(db: Session, user_id: int):\n    return db.query(models.User).filter(models.User.id == user_id).first()",
        "begin_line": 6,
        "end_line": 7,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0008896797153024911,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.sql_databases.sql_app.crud.get_user_by_email#10",
        "src_path": "docs/src/sql_databases/sql_app/crud.py",
        "class_name": "docs.src.sql_databases.sql_app.crud",
        "signature": "docs.src.sql_databases.sql_app.crud.get_user_by_email(db: Session, email: str)",
        "snippet": "def get_user_by_email(db: Session, email: str):\n    return db.query(models.User).filter(models.User.email == email).first()",
        "begin_line": 10,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0037313432835820895,
            "pseudo_dstar_susp": 0.0032258064516129032,
            "pseudo_tarantula_susp": 0.08333333333333333,
            "pseudo_op2_susp": 0.0032258064516129032,
            "pseudo_barinel_susp": 0.08333333333333333
        }
    },
    {
        "name": "docs.src.sql_databases.sql_app.crud.get_users#14",
        "src_path": "docs/src/sql_databases/sql_app/crud.py",
        "class_name": "docs.src.sql_databases.sql_app.crud",
        "signature": "docs.src.sql_databases.sql_app.crud.get_users(db: Session, skip: int=0, limit: int=100)",
        "snippet": "def get_users(db: Session, skip: int = 0, limit: int = 100):\n    return db.query(models.User).offset(skip).limit(limit).all()",
        "begin_line": 14,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.sql_databases.sql_app.crud.get_items#27",
        "src_path": "docs/src/sql_databases/sql_app/crud.py",
        "class_name": "docs.src.sql_databases.sql_app.crud",
        "signature": "docs.src.sql_databases.sql_app.crud.get_items(db: Session, skip: int=0, limit: int=100)",
        "snippet": "def get_items(db: Session, skip: int = 0, limit: int = 100):\n    return db.query(models.Item).offset(skip).limit(limit).all()",
        "begin_line": 27,
        "end_line": 28,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.sql_databases.sql_app.crud.create_user_item#31",
        "src_path": "docs/src/sql_databases/sql_app/crud.py",
        "class_name": "docs.src.sql_databases.sql_app.crud",
        "signature": "docs.src.sql_databases.sql_app.crud.create_user_item(db: Session, item: schemas.ItemCreate, user_id: int)",
        "snippet": "def create_user_item(db: Session, item: schemas.ItemCreate, user_id: int):\n    db_item = models.Item(**item.dict(), owner_id=user_id)\n    db.add(db_item)\n    db.commit()\n    db.refresh(db_item)\n    return db_item",
        "begin_line": 31,
        "end_line": 36,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.async_sql_databases.tutorial001.startup#46",
        "src_path": "docs/src/async_sql_databases/tutorial001.py",
        "class_name": "docs.src.async_sql_databases.tutorial001",
        "signature": "docs.src.async_sql_databases.tutorial001.startup()",
        "snippet": "async def startup():\n    await database.connect()",
        "begin_line": 46,
        "end_line": 47,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.async_sql_databases.tutorial001.shutdown#51",
        "src_path": "docs/src/async_sql_databases/tutorial001.py",
        "class_name": "docs.src.async_sql_databases.tutorial001",
        "signature": "docs.src.async_sql_databases.tutorial001.shutdown()",
        "snippet": "async def shutdown():\n    await database.disconnect()",
        "begin_line": 51,
        "end_line": 52,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.async_sql_databases.tutorial001.read_notes#56",
        "src_path": "docs/src/async_sql_databases/tutorial001.py",
        "class_name": "docs.src.async_sql_databases.tutorial001",
        "signature": "docs.src.async_sql_databases.tutorial001.read_notes()",
        "snippet": "async def read_notes():\n    query = notes.select()\n    return await database.fetch_all(query)",
        "begin_line": 56,
        "end_line": 58,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.async_sql_databases.tutorial001.create_note#62",
        "src_path": "docs/src/async_sql_databases/tutorial001.py",
        "class_name": "docs.src.async_sql_databases.tutorial001",
        "signature": "docs.src.async_sql_databases.tutorial001.create_note(note: NoteIn)",
        "snippet": "async def create_note(note: NoteIn):\n    query = notes.insert().values(text=note.text, completed=note.completed)\n    last_record_id = await database.execute(query)\n    return {**note.dict(), \"id\": last_record_id}",
        "begin_line": 62,
        "end_line": 65,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.exception_handlers.http_exception_handler#8",
        "src_path": "fastapi/exception_handlers.py",
        "class_name": "fastapi.exception_handlers",
        "signature": "fastapi.exception_handlers.http_exception_handler(request: Request, exc: HTTPException)",
        "snippet": "async def http_exception_handler(request: Request, exc: HTTPException) -> JSONResponse:\n    headers = getattr(exc, \"headers\", None)\n    if headers:\n        return JSONResponse(\n            {\"detail\": exc.detail}, status_code=exc.status_code, headers=headers\n        )\n    else:\n        return JSONResponse({\"detail\": exc.detail}, status_code=exc.status_code)",
        "begin_line": 8,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0029498525073746312,
            "pseudo_dstar_susp": 0.0029498525073746312,
            "pseudo_tarantula_susp": 0.0030581039755351682,
            "pseudo_op2_susp": 0.0029498525073746312,
            "pseudo_barinel_susp": 0.0030581039755351682
        }
    },
    {
        "name": "docs.src.first_steps.tutorial001.root#7",
        "src_path": "docs/src/first_steps/tutorial001.py",
        "class_name": "docs.src.first_steps.tutorial001",
        "signature": "docs.src.first_steps.tutorial001.root()",
        "snippet": "async def root():\n    return {\"message\": \"Hello World\"}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.sql_databases.sql_app.main.db_session_middleware#17",
        "src_path": "docs/src/sql_databases/sql_app/main.py",
        "class_name": "docs.src.sql_databases.sql_app.main",
        "signature": "docs.src.sql_databases.sql_app.main.db_session_middleware(request: Request, call_next)",
        "snippet": "async def db_session_middleware(request: Request, call_next):\n    response = Response(\"Internal server error\", status_code=500)\n    try:\n        request.state.db = SessionLocal()\n        response = await call_next(request)\n    finally:\n        request.state.db.close()\n    return response",
        "begin_line": 17,
        "end_line": 24,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.003205128205128205,
            "pseudo_dstar_susp": 0.003076923076923077,
            "pseudo_tarantula_susp": 0.0038314176245210726,
            "pseudo_op2_susp": 0.003076923076923077,
            "pseudo_barinel_susp": 0.0038314176245210726
        }
    },
    {
        "name": "docs.src.sql_databases.sql_app.main.get_db#28",
        "src_path": "docs/src/sql_databases/sql_app/main.py",
        "class_name": "docs.src.sql_databases.sql_app.main",
        "signature": "docs.src.sql_databases.sql_app.main.get_db(request: Request)",
        "snippet": "def get_db(request: Request):\n    return request.state.db",
        "begin_line": 28,
        "end_line": 29,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0032679738562091504,
            "pseudo_dstar_susp": 0.003134796238244514,
            "pseudo_tarantula_susp": 0.00392156862745098,
            "pseudo_op2_susp": 0.003134796238244514,
            "pseudo_barinel_susp": 0.00392156862745098
        }
    },
    {
        "name": "docs.src.sql_databases.sql_app.main.create_user#33",
        "src_path": "docs/src/sql_databases/sql_app/main.py",
        "class_name": "docs.src.sql_databases.sql_app.main",
        "signature": "docs.src.sql_databases.sql_app.main.create_user(user: schemas.UserCreate, db: Session=Depends(get_db))",
        "snippet": "def create_user(user: schemas.UserCreate, db: Session = Depends(get_db)):\n    db_user = crud.get_user_by_email(db, email=user.email)\n    if db_user:\n        raise HTTPException(status_code=400, detail=\"Email already registered\")\n    return crud.create_user(db=db, user=user)",
        "begin_line": 33,
        "end_line": 37,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0037313432835820895,
            "pseudo_dstar_susp": 0.0032258064516129032,
            "pseudo_tarantula_susp": 0.08333333333333333,
            "pseudo_op2_susp": 0.0032258064516129032,
            "pseudo_barinel_susp": 0.08333333333333333
        }
    },
    {
        "name": "docs.src.sql_databases.sql_app.main.read_users#41",
        "src_path": "docs/src/sql_databases/sql_app/main.py",
        "class_name": "docs.src.sql_databases.sql_app.main",
        "signature": "docs.src.sql_databases.sql_app.main.read_users(skip: int=0, limit: int=100, db: Session=Depends(get_db))",
        "snippet": "def read_users(skip: int = 0, limit: int = 100, db: Session = Depends(get_db)):\n    users = crud.get_users(db, skip=skip, limit=limit)\n    return users",
        "begin_line": 41,
        "end_line": 43,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.sql_databases.sql_app.main.read_user#47",
        "src_path": "docs/src/sql_databases/sql_app/main.py",
        "class_name": "docs.src.sql_databases.sql_app.main",
        "signature": "docs.src.sql_databases.sql_app.main.read_user(user_id: int, db: Session=Depends(get_db))",
        "snippet": "def read_user(user_id: int, db: Session = Depends(get_db)):\n    db_user = crud.get_user(db, user_id=user_id)\n    if db_user is None:\n        raise HTTPException(status_code=404, detail=\"User not found\")\n    return db_user",
        "begin_line": 47,
        "end_line": 51,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.sql_databases.sql_app.main.create_item_for_user#55",
        "src_path": "docs/src/sql_databases/sql_app/main.py",
        "class_name": "docs.src.sql_databases.sql_app.main",
        "signature": "docs.src.sql_databases.sql_app.main.create_item_for_user(user_id: int, item: schemas.ItemCreate, db: Session=Depends(get_db))",
        "snippet": "def create_item_for_user(\n    user_id: int, item: schemas.ItemCreate, db: Session = Depends(get_db)\n):\n    return crud.create_user_item(db=db, item=item, user_id=user_id)",
        "begin_line": 55,
        "end_line": 58,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.sql_databases.sql_app.main.read_items#62",
        "src_path": "docs/src/sql_databases/sql_app/main.py",
        "class_name": "docs.src.sql_databases.sql_app.main",
        "signature": "docs.src.sql_databases.sql_app.main.read_items(skip: int=0, limit: int=100, db: Session=Depends(get_db))",
        "snippet": "def read_items(skip: int = 0, limit: int = 100, db: Session = Depends(get_db)):\n    items = crud.get_items(db, skip=skip, limit=limit)\n    return items",
        "begin_line": 62,
        "end_line": 64,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.body.tutorial001.create_item#16",
        "src_path": "docs/src/body/tutorial001.py",
        "class_name": "docs.src.body.tutorial001",
        "signature": "docs.src.body.tutorial001.create_item(item: Item)",
        "snippet": "async def create_item(item: Item):\n    return item",
        "begin_line": 16,
        "end_line": 17,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0008368200836820083,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.response_model.tutorial005.read_item_name#31",
        "src_path": "docs/src/response_model/tutorial005.py",
        "class_name": "docs.src.response_model.tutorial005",
        "signature": "docs.src.response_model.tutorial005.read_item_name(item_id: str)",
        "snippet": "async def read_item_name(item_id: str):\n    return items[item_id]",
        "begin_line": 31,
        "end_line": 32,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.response_model.tutorial005.read_item_public_data#36",
        "src_path": "docs/src/response_model/tutorial005.py",
        "class_name": "docs.src.response_model.tutorial005",
        "signature": "docs.src.response_model.tutorial005.read_item_public_data(item_id: str)",
        "snippet": "async def read_item_public_data(item_id: str):\n    return items[item_id]",
        "begin_line": 36,
        "end_line": 37,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.body_updates.tutorial001.read_item#26",
        "src_path": "docs/src/body_updates/tutorial001.py",
        "class_name": "docs.src.body_updates.tutorial001",
        "signature": "docs.src.body_updates.tutorial001.read_item(item_id: str)",
        "snippet": "async def read_item(item_id: str):\n    return items[item_id]",
        "begin_line": 26,
        "end_line": 27,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.body_updates.tutorial001.update_item#31",
        "src_path": "docs/src/body_updates/tutorial001.py",
        "class_name": "docs.src.body_updates.tutorial001",
        "signature": "docs.src.body_updates.tutorial001.update_item(item_id: str, item: Item)",
        "snippet": "async def update_item(item_id: str, item: Item):\n    update_item_encoded = jsonable_encoder(item)\n    items[item_id] = update_item_encoded\n    return update_item_encoded",
        "begin_line": 31,
        "end_line": 34,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.path_operation_configuration.tutorial006.read_items#7",
        "src_path": "docs/src/path_operation_configuration/tutorial006.py",
        "class_name": "docs.src.path_operation_configuration.tutorial006",
        "signature": "docs.src.path_operation_configuration.tutorial006.read_items()",
        "snippet": "async def read_items():\n    return [{\"name\": \"Foo\", \"price\": 42}]",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.path_operation_configuration.tutorial006.read_users#12",
        "src_path": "docs/src/path_operation_configuration/tutorial006.py",
        "class_name": "docs.src.path_operation_configuration.tutorial006",
        "signature": "docs.src.path_operation_configuration.tutorial006.read_users()",
        "snippet": "async def read_users():\n    return [{\"username\": \"johndoe\"}]",
        "begin_line": 12,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.path_operation_configuration.tutorial006.read_elements#17",
        "src_path": "docs/src/path_operation_configuration/tutorial006.py",
        "class_name": "docs.src.path_operation_configuration.tutorial006",
        "signature": "docs.src.path_operation_configuration.tutorial006.read_elements()",
        "snippet": "async def read_elements():\n    return [{\"item_id\": \"Foo\"}]",
        "begin_line": 17,
        "end_line": 18,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.query_params.tutorial006.read_user_item#7",
        "src_path": "docs/src/query_params/tutorial006.py",
        "class_name": "docs.src.query_params.tutorial006",
        "signature": "docs.src.query_params.tutorial006.read_user_item(item_id: str, needy: str, skip: int=0, limit: int=None)",
        "snippet": "async def read_user_item(item_id: str, needy: str, skip: int = 0, limit: int = None):\n    item = {\"item_id\": item_id, \"needy\": needy, \"skip\": skip, \"limit\": limit}\n    return item",
        "begin_line": 7,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.path_params.tutorial005.get_model#16",
        "src_path": "docs/src/path_params/tutorial005.py",
        "class_name": "docs.src.path_params.tutorial005",
        "signature": "docs.src.path_params.tutorial005.get_model(model_name: ModelName)",
        "snippet": "async def get_model(model_name: ModelName):\n    if model_name == ModelName.alexnet:\n        return {\"model_name\": model_name, \"message\": \"Deep Learning FTW!\"}\n    if model_name.value == \"lenet\":\n        return {\"model_name\": model_name, \"message\": \"LeCNN all the images\"}\n    return {\"model_name\": model_name, \"message\": \"Have some residuals\"}",
        "begin_line": 16,
        "end_line": 21,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.app_testing.tutorial002.read_main#9",
        "src_path": "docs/src/app_testing/tutorial002.py",
        "class_name": "docs.src.app_testing.tutorial002",
        "signature": "docs.src.app_testing.tutorial002.read_main()",
        "snippet": "async def read_main():\n    return {\"msg\": \"Hello World\"}",
        "begin_line": 9,
        "end_line": 10,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.app_testing.tutorial002.websocket#14",
        "src_path": "docs/src/app_testing/tutorial002.py",
        "class_name": "docs.src.app_testing.tutorial002",
        "signature": "docs.src.app_testing.tutorial002.websocket(websocket: WebSocket)",
        "snippet": "async def websocket(websocket: WebSocket):\n    await websocket.accept()\n    await websocket.send_json({\"msg\": \"Hello WebSocket\"})\n    await websocket.close()",
        "begin_line": 14,
        "end_line": 17,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.app_testing.tutorial002.test_read_main#20",
        "src_path": "docs/src/app_testing/tutorial002.py",
        "class_name": "docs.src.app_testing.tutorial002",
        "signature": "docs.src.app_testing.tutorial002.test_read_main()",
        "snippet": "def test_read_main():\n    client = TestClient(app)\n    response = client.get(\"/\")\n    assert response.status_code == 200\n    assert response.json() == {\"msg\": \"Hello World\"}",
        "begin_line": 20,
        "end_line": 24,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.app_testing.tutorial002.test_websocket#27",
        "src_path": "docs/src/app_testing/tutorial002.py",
        "class_name": "docs.src.app_testing.tutorial002",
        "signature": "docs.src.app_testing.tutorial002.test_websocket()",
        "snippet": "def test_websocket():\n    client = TestClient(app)\n    with client.websocket_connect(\"/ws\") as websocket:\n        data = websocket.receive_json()\n        assert data == {\"msg\": \"Hello WebSocket\"}",
        "begin_line": 27,
        "end_line": 31,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.response_cookies.tutorial001.create_cookie#8",
        "src_path": "docs/src/response_cookies/tutorial001.py",
        "class_name": "docs.src.response_cookies.tutorial001",
        "signature": "docs.src.response_cookies.tutorial001.create_cookie()",
        "snippet": "def create_cookie():\n    content = {\"message\": \"Come to the dark side, we have cookies\"}\n    response = JSONResponse(content=content)\n    response.set_cookie(key=\"fakesession\", value=\"fake-cookie-session-value\")\n    return response",
        "begin_line": 8,
        "end_line": 12,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.response_model.tutorial004.read_item#25",
        "src_path": "docs/src/response_model/tutorial004.py",
        "class_name": "docs.src.response_model.tutorial004",
        "signature": "docs.src.response_model.tutorial004.read_item(item_id: str)",
        "snippet": "async def read_item(item_id: str):\n    return items[item_id]",
        "begin_line": 25,
        "end_line": 26,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0008896797153024911,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.encoders.jsonable_encoder#9",
        "src_path": "fastapi/encoders.py",
        "class_name": "fastapi.encoders",
        "signature": "fastapi.encoders.jsonable_encoder(obj: Any, include: Set[str]=None, exclude: Set[str]=set(), by_alias: bool=True, skip_defaults: bool=False, include_none: bool=True, custom_encoder: dict={}, sqlalchemy_safe: bool=True)",
        "snippet": "def jsonable_encoder(\n    obj: Any,\n    include: Set[str] = None,\n    exclude: Set[str] = set(),\n    by_alias: bool = True,\n    skip_defaults: bool = False,\n    include_none: bool = True,\n    custom_encoder: dict = {},\n    sqlalchemy_safe: bool = True,\n) -> Any:\n    if include is not None and not isinstance(include, set):\n        include = set(include)\n    if exclude is not None and not isinstance(exclude, set):\n        exclude = set(exclude)\n    if isinstance(obj, BaseModel):\n        encoder = getattr(obj.Config, \"json_encoders\", custom_encoder)\n        return jsonable_encoder(\n            obj.dict(\n                include=include,\n                exclude=exclude,\n                by_alias=by_alias,\n                skip_defaults=skip_defaults,\n            ),\n            include_none=include_none,\n            custom_encoder=encoder,\n            sqlalchemy_safe=sqlalchemy_safe,\n        )\n    if isinstance(obj, Enum):\n        return obj.value\n    if isinstance(obj, (str, int, float, type(None))):\n        return obj\n    if isinstance(obj, dict):\n        encoded_dict = {}\n        for key, value in obj.items():\n            if (\n                (\n                    not sqlalchemy_safe\n                    or (not isinstance(key, str))\n                    or (not key.startswith(\"_sa\"))\n                )\n                and (value is not None or include_none)\n                and ((include and key in include) or key not in exclude)\n            ):\n                encoded_key = jsonable_encoder(\n                    key,\n                    by_alias=by_alias,\n                    skip_defaults=skip_defaults,\n                    include_none=include_none,\n                    custom_encoder=custom_encoder,\n                    sqlalchemy_safe=sqlalchemy_safe,\n                )\n                encoded_value = jsonable_encoder(\n                    value,\n                    by_alias=by_alias,\n                    skip_defaults=skip_defaults,\n                    include_none=include_none,\n                    custom_encoder=custom_encoder,\n                    sqlalchemy_safe=sqlalchemy_safe,\n                )\n                encoded_dict[encoded_key] = encoded_value\n        return encoded_dict\n    if isinstance(obj, (list, set, frozenset, GeneratorType, tuple)):\n        encoded_list = []\n        for item in obj:\n            encoded_list.append(\n                jsonable_encoder(\n                    item,\n                    include=include,\n                    exclude=exclude,\n                    by_alias=by_alias,\n                    skip_defaults=skip_defaults,\n                    include_none=include_none,\n                    custom_encoder=custom_encoder,\n                    sqlalchemy_safe=sqlalchemy_safe,\n                )\n            )\n        return encoded_list\n    errors: List[Exception] = []\n    try:\n        if custom_encoder and type(obj) in custom_encoder:\n            encoder = custom_encoder[type(obj)]\n        else:\n            encoder = ENCODERS_BY_TYPE[type(obj)]\n        return encoder(obj)\n    except KeyError as e:\n        errors.append(e)\n        try:\n            data = dict(obj)\n        except Exception as e:\n            errors.append(e)\n            try:\n                data = vars(obj)\n            except Exception as e:\n                errors.append(e)\n                raise ValueError(errors)\n    return jsonable_encoder(\n        data,\n        by_alias=by_alias,\n        skip_defaults=skip_defaults,\n        include_none=include_none,\n        custom_encoder=custom_encoder,\n        sqlalchemy_safe=sqlalchemy_safe,\n    )",
        "begin_line": 9,
        "end_line": 111,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.002770083102493075,
            "pseudo_dstar_susp": 0.002770083102493075,
            "pseudo_tarantula_susp": 0.002770083102493075,
            "pseudo_op2_susp": 0.002770083102493075,
            "pseudo_barinel_susp": 0.002770083102493075
        }
    },
    {
        "name": "fastapi.security.open_id_connect_url.OpenIdConnect.__call__#18",
        "src_path": "fastapi/security/open_id_connect_url.py",
        "class_name": "fastapi.security.open_id_connect_url.OpenIdConnect",
        "signature": "fastapi.security.open_id_connect_url.OpenIdConnect.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> Optional[str]:\n        authorization: str = request.headers.get(\"Authorization\")\n        if not authorization:\n            if self.auto_error:\n                raise HTTPException(\n                    status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n                )\n            else:\n                return None\n        return authorization",
        "begin_line": 18,
        "end_line": 27,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.utils.get_flat_models_from_routes#13",
        "src_path": "fastapi/utils.py",
        "class_name": "fastapi.utils",
        "signature": "fastapi.utils.get_flat_models_from_routes(routes: Sequence[BaseRoute])",
        "snippet": "def get_flat_models_from_routes(routes: Sequence[BaseRoute]) -> Set[Type[BaseModel]]:\n    body_fields_from_routes: List[Field] = []\n    responses_from_routes: List[Field] = []\n    for route in routes:\n        if getattr(route, \"include_in_schema\", None) and isinstance(\n            route, routing.APIRoute\n        ):\n            if route.body_field:\n                assert isinstance(\n                    route.body_field, Field\n                ), \"A request body must be a Pydantic Field\"\n                body_fields_from_routes.append(route.body_field)\n            if route.response_field:\n                responses_from_routes.append(route.response_field)\n            if route.response_fields:\n                responses_from_routes.extend(route.response_fields.values())\n    flat_models = get_flat_models_from_fields(\n        body_fields_from_routes + responses_from_routes, known_models=set()\n    )\n    return flat_models",
        "begin_line": 13,
        "end_line": 32,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0010090817356205853,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.utils.get_model_definitions#35",
        "src_path": "fastapi/utils.py",
        "class_name": "fastapi.utils",
        "signature": "fastapi.utils.get_model_definitions(*, flat_models: Set[Type[BaseModel]], model_name_map: Dict[Type[BaseModel], str])",
        "snippet": "def get_model_definitions(\n    *, flat_models: Set[Type[BaseModel]], model_name_map: Dict[Type[BaseModel], str]\n) -> Dict[str, Any]:\n    definitions: Dict[str, Dict] = {}\n    for model in flat_models:\n        m_schema, m_definitions, m_nested_models = model_process_schema(\n            model, model_name_map=model_name_map, ref_prefix=REF_PREFIX\n        )\n        definitions.update(m_definitions)\n        model_name = model_name_map[model]\n        definitions[model_name] = m_schema\n    return definitions",
        "begin_line": 35,
        "end_line": 46,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0006105006105006105,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.utils.get_path_param_names#49",
        "src_path": "fastapi/utils.py",
        "class_name": "fastapi.utils",
        "signature": "fastapi.utils.get_path_param_names(path: str)",
        "snippet": "def get_path_param_names(path: str) -> Set[str]:\n    return {item.strip(\"{}\") for item in re.findall(\"{[^}]*}\", path)}",
        "begin_line": 49,
        "end_line": 50,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.007633587786259542,
            "pseudo_dstar_susp": 0.008264462809917356,
            "pseudo_tarantula_susp": 0.004032258064516129,
            "pseudo_op2_susp": 0.008264462809917356,
            "pseudo_barinel_susp": 0.004032258064516129
        }
    },
    {
        "name": "fastapi.utils.create_cloned_field#53",
        "src_path": "fastapi/utils.py",
        "class_name": "fastapi.utils",
        "signature": "fastapi.utils.create_cloned_field(field: Field)",
        "snippet": "def create_cloned_field(field: Field) -> Field:\n    original_type = field.type_\n    use_type = original_type\n    if lenient_issubclass(original_type, BaseModel):\n        original_type = cast(Type[BaseModel], original_type)\n        use_type = create_model(  # type: ignore\n            original_type.__name__,\n            __config__=original_type.__config__,\n            __validators__=original_type.__validators__,\n        )\n        for f in original_type.__fields__.values():\n            use_type.__fields__[f.name] = f\n    new_field = Field(\n        name=field.name,\n        type_=use_type,\n        class_validators={},\n        default=None,\n        required=False,\n        model_config=BaseConfig,\n        schema=Schema(None),\n    )\n    new_field.has_alias = field.has_alias\n    new_field.alias = field.alias\n    new_field.class_validators = field.class_validators\n    new_field.default = field.default\n    new_field.required = field.required\n    new_field.model_config = field.model_config\n    new_field.schema = field.schema\n    new_field.allow_none = field.allow_none\n    new_field.validate_always = field.validate_always\n    if field.sub_fields:\n        new_field.sub_fields = [\n            create_cloned_field(sub_field) for sub_field in field.sub_fields\n        ]\n    if field.key_field:\n        new_field.key_field = create_cloned_field(field.key_field)\n    new_field.validators = field.validators\n    new_field.whole_pre_validators = field.whole_pre_validators\n    new_field.whole_post_validators = field.whole_post_validators\n    new_field.parse_json = field.parse_json\n    new_field.shape = field.shape\n    new_field._populate_validators()\n    return new_field",
        "begin_line": 53,
        "end_line": 95,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "fastapi.utils.generate_operation_id_for_path#98",
        "src_path": "fastapi/utils.py",
        "class_name": "fastapi.utils",
        "signature": "fastapi.utils.generate_operation_id_for_path(*, name: str, path: str, method: str)",
        "snippet": "def generate_operation_id_for_path(*, name: str, path: str, method: str) -> str:\n    operation_id = name + path\n    operation_id = operation_id.replace(\"{\", \"_\").replace(\"}\", \"_\").replace(\"/\", \"_\")\n    operation_id = operation_id + \"_\" + method.lower()\n    return operation_id",
        "begin_line": 98,
        "end_line": 102,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.000552791597567717,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.handling_errors.tutorial005.custom_http_exception_handler#13",
        "src_path": "docs/src/handling_errors/tutorial005.py",
        "class_name": "docs.src.handling_errors.tutorial005",
        "signature": "docs.src.handling_errors.tutorial005.custom_http_exception_handler(request, exc)",
        "snippet": "async def custom_http_exception_handler(request, exc):\n    print(f\"OMG! An HTTP error!: {exc}\")\n    return await http_exception_handler(request, exc)",
        "begin_line": 13,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    },
    {
        "name": "docs.src.handling_errors.tutorial005.read_item#25",
        "src_path": "docs/src/handling_errors/tutorial005.py",
        "class_name": "docs.src.handling_errors.tutorial005",
        "signature": "docs.src.handling_errors.tutorial005.read_item(item_id: int)",
        "snippet": "async def read_item(item_id: int):\n    if item_id == 3:\n        raise HTTPException(status_code=418, detail=\"Nope! I don't like 3.\")\n    return {\"item_id\": item_id}",
        "begin_line": 25,
        "end_line": 28,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0008952551477170994,
            "pseudo_dstar_susp": 0.0008952551477170994,
            "pseudo_tarantula_susp": 0.0008952551477170994,
            "pseudo_op2_susp": 0.0015384615384615385,
            "pseudo_barinel_susp": 0.0008952551477170994
        }
    }
]