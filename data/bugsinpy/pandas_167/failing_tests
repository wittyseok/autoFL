coverage run -m pytest pandas/tests/indexes/datetimes/test_partial_slicing.py::TestSlicing::test_slice_reduce_to_series
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.16.0
collected 1 item

pandas/tests/indexes/datetimes/test_partial_slicing.py F                 [100%]

=================================== FAILURES ===================================
___________________ TestSlicing.test_slice_reduce_to_series ____________________

self = <pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing object at 0x7f3b6b67e580>

    def test_slice_reduce_to_series(self):
        # GH 27516
        df = pd.DataFrame(
            {"A": range(24)}, index=pd.date_range("2000", periods=24, freq="M")
        )
        expected = pd.Series(
            range(12), index=pd.date_range("2000", periods=12, freq="M"), name="A"
        )
        result = df.loc["2000", "A"]
>       tm.assert_series_equal(result, expected)

pandas/tests/indexes/datetimes/test_partial_slicing.py:481: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11])
right = 2000-01-31     0
2000-02-29     1
2000-03-31     2
2000-04-30     3
2000-05-31     4
2000-06-30     5
2000-07-31     6
2000-08-31     7
2000-09-30     8
2000-10-31     9
2000-11-30    10
2000-12-31    11
Freq: M, Name: A, dtype: int64
cls = <class 'pandas.core.series.Series'>

    def _check_isinstance(left, right, cls):
        """
        Helper method for our assert_* methods that ensures that
        the two objects being compared have the right type before
        proceeding with the comparison.
    
        Parameters
        ----------
        left : The first object being compared.
        right : The second object being compared.
        cls : The class type to check against.
    
        Raises
        ------
        AssertionError : Either `left` or `right` is not an instance of `cls`.
        """
    
        err_msg = "{name} Expected type {exp_type}, found {act_type} instead"
        cls_name = cls.__name__
    
        if not isinstance(left, cls):
>           raise AssertionError(
                err_msg.format(name=cls_name, exp_type=cls, act_type=type(left))
            )
E           AssertionError: Series Expected type <class 'pandas.core.series.Series'>, found <class 'numpy.ndarray'> instead

pandas/util/testing.py:391: AssertionError
=========================== short test summary info ============================
FAILED pandas/tests/indexes/datetimes/test_partial_slicing.py::TestSlicing::test_slice_reduce_to_series
============================== 1 failed in 0.55s ===============================
