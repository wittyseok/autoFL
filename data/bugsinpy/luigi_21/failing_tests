coverage run -m pytest test/interface_test.py::InterfaceTest::test_just_run_main_task_cls
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
benchmark: 3.2.3 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /home/user/BugsInPy/temp/projects/luigi
plugins: benchmark-3.2.3, requests-mock-1.8.0, sanic-1.6.1, sugar-0.9.3, cov-2.9.0
collected 1 item

test/interface_test.py F                                                 [100%]

=================================== FAILURES ===================================
__________________ InterfaceTest.test_just_run_main_task_cls ___________________

self = <interface_test.InterfaceTest testMethod=test_just_run_main_task_cls>

    def test_just_run_main_task_cls(self):
        class MyTestTask(luigi.Task):
            pass
    
        class MyOtherTestTask(luigi.Task):
            my_param = luigi.Parameter()
    
        with patch.object(sys, 'argv', ['my_module.py', '--no-lock', '--local-scheduler']):
>           luigi.run(main_task_cls=MyTestTask)

test/interface_test.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cmdline_args = None
main_task_cls = <class 'interface_test.InterfaceTest.test_just_run_main_task_cls.<locals>.MyTestTask'>
worker_scheduler_factory = None, use_dynamic_argparse = False
local_scheduler = False

    def run(cmdline_args=None, main_task_cls=None,
            worker_scheduler_factory=None, use_dynamic_argparse=False, local_scheduler=False):
        """
        Please dont use. Instead use `luigi` binary.
    
        Run from cmdline using argparse.
    
        :param cmdline_args:
        :param main_task_cls:
        :param worker_scheduler_factory:
        :param use_dynamic_argparse:
        :param local_scheduler:
        """
        if use_dynamic_argparse:
            interface = DynamicArgParseInterface()
        else:
            interface = ArgParseInterface()
        if main_task_cls:
>           cmdline_args.insert(0, main_task_cls.task_family)
E           AttributeError: 'NoneType' object has no attribute 'insert'

luigi/interface.py:345: AttributeError
=============================== warnings summary ===============================
luigi/parameter.py:527
  /home/user/BugsInPy/temp/projects/luigi/luigi/parameter.py:527: DeprecationWarning: invalid escape sequence \d
    return "(?P<%s>\d+)%s" % (key, key[0].upper())

luigi/parameter.py:539
  /home/user/BugsInPy/temp/projects/luigi/luigi/parameter.py:539: DeprecationWarning: invalid escape sequence \d
    regex = "".join(["((?P<%s>\d+) ?%s(%s)?(%s)? ?)?" % (k, k[0], k[1:-1], k[-1]) for k in keys])

-- Docs: https://docs.pytest.org/en/latest/warnings.html
=========================== short test summary info ============================
FAILED test/interface_test.py::InterfaceTest::test_just_run_main_task_cls - A...
======================== 1 failed, 2 warnings in 0.19s =========================
