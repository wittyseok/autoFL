coverage run -m pytest tests/test_requests.py::test_url_for_without_server_name
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.2.1, py-1.8.1, pluggy-0.13.1
benchmark: 3.2.3 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /home/user/BugsInPy/temp/projects/sanic, inifile: tox.ini
plugins: sugar-0.9.3, benchmark-3.2.3, sanic-1.6.1, cov-2.9.0
collected 1 item

tests/test_requests.py F                                                 [100%]

=================================== FAILURES ===================================
_______________________ test_url_for_without_server_name _______________________

app = <sanic.app.Sanic object at 0x7fcf8924a580>

    def test_url_for_without_server_name(app):
        @app.route("/sample")
        def sample(request):
            return json({"url": request.url_for("url_for")})
    
        @app.route("/url-for")
        def url_for(request):
            return text("url-for")
    
        request, response = app.test_client.get("/sample")
>       assert (
            response.json["url"]
            == f"http://127.0.0.1:{app.test_client.port}/url-for"
        )
E       TypeError: 'NoneType' object is not subscriptable

tests/test_requests.py:2118: TypeError
----------------------------- Captured stdout call -----------------------------
[2023-09-02 03:18:07 +0000] [13214] [INFO] Goin' Fast @ http://127.0.0.1:42101
[2023-09-02 03:18:07 +0000] [13214] [INFO] http://127.0.0.1:42101/sample
[2023-09-02 03:18:07 +0000] [13214] [ERROR] Exception occurred while handling uri: 'http://127.0.0.1:42101/sample'
Traceback (most recent call last):
  File "/home/user/BugsInPy/temp/projects/sanic/sanic/config.py", line 52, in __getattr__
    return self[attr]
KeyError: 'SERVER_NAME'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/BugsInPy/temp/projects/sanic/sanic/app.py", line 947, in handle_request
    response = handler(request, *args, **kwargs)
  File "/home/user/BugsInPy/temp/projects/sanic/tests/test_requests.py", line 2111, in sample
    return json({"url": request.url_for("url_for")})
  File "/home/user/BugsInPy/temp/projects/sanic/sanic/request.py", line 522, in url_for
    if "//" in self.app.config.SERVER_NAME:
  File "/home/user/BugsInPy/temp/projects/sanic/sanic/config.py", line 54, in __getattr__
    raise AttributeError("Config has no '{}'".format(ke.args[0]))
AttributeError: Config has no 'SERVER_NAME'
[2023-09-02 03:18:07 +0000] - (sanic.access)[INFO][127.0.0.1:51066]: GET http://127.0.0.1:42101/sample  500 144
[2023-09-02 03:18:07 +0000] [13214] [INFO] Starting worker [13214]
[2023-09-02 03:18:07 +0000] [13214] [INFO] Stopping worker [13214]
[2023-09-02 03:18:07 +0000] [13214] [INFO] Server Stopped
------------------------------ Captured log call -------------------------------
INFO     sanic.root:app.py:1396 Goin' Fast @ http://127.0.0.1:42101
INFO     sanic.root:testing.py:34 http://127.0.0.1:42101/sample
ERROR    sanic.root:handlers.py:176 Exception occurred while handling uri: 'http://127.0.0.1:42101/sample'
Traceback (most recent call last):
  File "/home/user/BugsInPy/temp/projects/sanic/sanic/config.py", line 52, in __getattr__
    return self[attr]
KeyError: 'SERVER_NAME'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/BugsInPy/temp/projects/sanic/sanic/app.py", line 947, in handle_request
    response = handler(request, *args, **kwargs)
  File "/home/user/BugsInPy/temp/projects/sanic/tests/test_requests.py", line 2111, in sample
    return json({"url": request.url_for("url_for")})
  File "/home/user/BugsInPy/temp/projects/sanic/sanic/request.py", line 522, in url_for
    if "//" in self.app.config.SERVER_NAME:
  File "/home/user/BugsInPy/temp/projects/sanic/sanic/config.py", line 54, in __getattr__
    raise AttributeError("Config has no '{}'".format(ke.args[0]))
AttributeError: Config has no 'SERVER_NAME'
INFO     sanic.access:server.py:431 
INFO     sanic.root:server.py:884 Starting worker [13214]
INFO     sanic.root:server.py:887 Stopping worker [13214]
INFO     sanic.root:app.py:1150 Server Stopped
=============================== warnings summary ===============================
/opt/conda/envs/dc0cf70dcd569695fc404e40afc16e1f/lib/python3.8/site-packages/_pytest/mark/structures.py:321
  /opt/conda/envs/dc0cf70dcd569695fc404e40afc16e1f/lib/python3.8/site-packages/_pytest/mark/structures.py:321: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/latest/mark.html
    warnings.warn(

tests/test_requests.py::test_url_for_without_server_name
  /home/user/BugsInPy/temp/projects/sanic/sanic/server.py:135: DeprecationWarning: The loop argument is deprecated since Python 3.8, and scheduled for removal in Python 3.10.
    self._not_paused = asyncio.Event(loop=loop)

tests/test_requests.py::test_url_for_without_server_name
  /home/user/BugsInPy/temp/projects/sanic/sanic/server.py:919: DeprecationWarning: The loop argument is deprecated since Python 3.8, and scheduled for removal in Python 3.10.
    _shutdown = asyncio.gather(*coros, loop=loop)

-- Docs: https://docs.pytest.org/en/latest/warnings.html
======================== 1 failed, 3 warnings in 0.20s =========================
