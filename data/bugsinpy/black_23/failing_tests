coverage run -m unittest -q tests.test_black.BlackTestCase.test_python2
Expected tree:
file_input
  simple_stmt
    import_name
      NAME '#!/usr/bin/env python2\n\n' 'import'
      NAME ' ' 'sys'
    /import_name
    NEWLINE '\n'
  /simple_stmt
  simple_stmt
    testlist_star_expr
      shift_expr
        NAME '\n' 'print'
        RIGHTSHIFT ' ' '>>'
        power
          NAME 'sys'
          trailer
            DOT '.'
            NAME 'stderr'
          /trailer
        /power
      /shift_expr
      COMMA ','
      STRING ' ' '"Warning:"'
      COMMA ','
    /testlist_star_expr
    NEWLINE '\n'
  /simple_stmt
  simple_stmt
    testlist_star_expr
      shift_expr
        NAME 'print'
        RIGHTSHIFT ' ' '>>'
        power
          NAME 'sys'
          trailer
            DOT '.'
            NAME 'stderr'
          /trailer
        /power
      /shift_expr
      COMMA ','
      STRING ' ' '"this is a blast from the past."'
    /testlist_star_expr
    NEWLINE '\n'
  /simple_stmt
  simple_stmt
    testlist_star_expr
      shift_expr
        NAME 'print'
        RIGHTSHIFT ' ' '>>'
        power
          NAME 'sys'
          trailer
            DOT '.'
            NAME 'stderr'
          /trailer
        /power
      /shift_expr
      COMMA ','
      STRING ' ' '"Look, a repr:"'
      COMMA ','
      atom
        BACKQUOTE ' ' '`'
        NAME ' ' 'sys'
        BACKQUOTE ' ' '`'
      /atom
    /testlist_star_expr
    NEWLINE '\n'
  /simple_stmt
  funcdef
    NAME '\n\n' 'def'
    NAME ' ' 'function'
    parameters
      LPAR '('
      tfpdef
        LPAR '('
        tfplist
          NAME '_globals'
          COMMA ','
          NAME ' ' '_locals'
        /tfplist
        RPAR ')'
      /tfpdef
      RPAR ')'
    /parameters
    COLON ':'
    suite
      NEWLINE '\n'
      INDENT '    '
      simple_stmt
        exec_stmt
          NAME 'exec'
          STRING ' ' '"print \'hi from exec!\'"'
          NAME ' ' 'in'
          NAME ' ' '_globals'
          COMMA ','
          NAME ' ' '_locals'
        /exec_stmt
        NEWLINE '\n'
      /simple_stmt
      DEDENT ''
    /suite
  /funcdef
  simple_stmt
    power
      NAME '\n\n' 'function'
      trailer
        LPAR '('
        atom
          LPAR '('
          testlist_gexp
            power
              NAME 'globals'
              trailer
                LPAR '('
                RPAR ')'
              /trailer
            /power
            COMMA ','
            power
              NAME ' ' 'locals'
              trailer
                LPAR '('
                RPAR ')'
              /trailer
            /power
          /testlist_gexp
          RPAR ')'
        /atom
        RPAR ')'
      /trailer
    /power
    NEWLINE '\n'
  /simple_stmt
  ENDMARKER ''
/file_input
Actual tree:
file_input
  simple_stmt
    import_name
      NAME '#!/usr/bin/env python2\n\n' 'import'
      NAME ' ' 'sys'
    /import_name
    NEWLINE '\n'
  /simple_stmt
  simple_stmt
    testlist_star_expr
      shift_expr
        NAME '\n' 'print'
        RIGHTSHIFT ' ' '>>'
        power
          NAME ' ' 'sys'
          trailer
            DOT '.'
            NAME 'stderr'
          /trailer
        /power
      /shift_expr
      COMMA ','
      STRING ' ' '"Warning:"'
      COMMA ','
    /testlist_star_expr
    NEWLINE '\n'
  /simple_stmt
  simple_stmt
    testlist_star_expr
      shift_expr
        NAME 'print'
        RIGHTSHIFT ' ' '>>'
        power
          NAME ' ' 'sys'
          trailer
            DOT '.'
            NAME 'stderr'
          /trailer
        /power
      /shift_expr
      COMMA ','
      STRING ' ' '"this is a blast from the past."'
    /testlist_star_expr
    NEWLINE '\n'
  /simple_stmt
  simple_stmt
    testlist_star_expr
      shift_expr
        NAME 'print'
        RIGHTSHIFT ' ' '>>'
        power
          NAME ' ' 'sys'
          trailer
            DOT '.'
            NAME 'stderr'
          /trailer
        /power
      /shift_expr
      COMMA ','
      STRING ' ' '"Look, a repr:"'
      COMMA ','
      atom
        BACKQUOTE ' ' '`'
        NAME ' ' 'sys'
        BACKQUOTE ' ' '`'
      /atom
    /testlist_star_expr
    NEWLINE '\n'
  /simple_stmt
  funcdef
    NAME '\n\n' 'def'
    NAME ' ' 'function'
    parameters
      LPAR '('
      tfpdef
        LPAR '('
        tfplist
          NAME '_globals'
          COMMA ','
          NAME ' ' '_locals'
        /tfplist
        RPAR ')'
      /tfpdef
      RPAR ')'
    /parameters
    COLON ':'
    suite
      NEWLINE '\n'
      INDENT '    '
      simple_stmt
        exec_stmt
          NAME 'exec'
          STRING ' ' '"print \'hi from exec!\'"'
          NAME ' ' 'in'
          NAME ' ' '_globals'
          COMMA ','
          NAME ' ' '_locals'
        /exec_stmt
        NEWLINE '\n'
      /simple_stmt
      DEDENT ''
    /suite
  /funcdef
  simple_stmt
    power
      NAME '\n\n' 'function'
      trailer
        LPAR '('
        atom
          LPAR '('
          testlist_gexp
            power
              NAME 'globals'
              trailer
                LPAR '('
                RPAR ')'
              /trailer
            /power
            COMMA ','
            power
              NAME ' ' 'locals'
              trailer
                LPAR '('
                RPAR ')'
              /trailer
            /power
          /testlist_gexp
          RPAR ')'
        /atom
        RPAR ')'
      /trailer
    /power
    NEWLINE '\n'
  /simple_stmt
  ENDMARKER ''
/file_input
======================================================================
FAIL: test_python2 (tests.test_black.BlackTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/conda/envs/5619da77e622150490b9375f352afe47/lib/python3.8/unittest/mock.py", line 1325, in patched
    return func(*newargs, **newkeywargs)
  File "/home/user/BugsInPy/temp/projects/black/tests/test_black.py", line 187, in test_python2
    self.assertFormatEqual(expected, actual)
  File "/home/user/BugsInPy/temp/projects/black/tests/test_black.py", line 67, in assertFormatEqual
    self.assertEqual(expected, actual)
AssertionError: '#!/u[39 chars]nt >>sys.stderr, "Warning:",\nprint >>sys.stde[214 chars]))\n' != '#!/u[39 chars]nt >> sys.stderr, "Warning:",\nprint >> sys.st[217 chars]))\n'
  #!/usr/bin/env python2
  
  import sys
  
- print >>sys.stderr, "Warning:",
+ print >> sys.stderr, "Warning:",
?         +
- print >>sys.stderr, "this is a blast from the past."
+ print >> sys.stderr, "this is a blast from the past."
?         +
- print >>sys.stderr, "Look, a repr:", ` sys `
+ print >> sys.stderr, "Look, a repr:", ` sys `
?         +
  
  
  def function((_globals, _locals)):
      exec "print 'hi from exec!'" in _globals, _locals
  
  
  function((globals(), locals()))


----------------------------------------------------------------------
Ran 1 test in 0.032s

FAILED (failures=1)
