coverage run -m pytest test/units/galaxy/test_collection_install.py::test_build_requirement_from_path_with_manifest
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.10.1, py-1.11.0, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/ansible, inifile:
collected 3 items

test/units/galaxy/test_collection_install.py .FF                         [100%]

=================================== FAILURES ===================================
_____________ test_build_requirement_from_path_with_manifest[1.1] ______________

version = 1.1
collection_artifact = (b'/tmp/pytest-of-root/pytest-2/test-\xc3\x85\xc3\x91\xc5\x9a\xc3\x8c\xce\xb2\xc5\x81\xc3\x88 Collections Input1/ansib...\xc3\x85\xc3\x91\xc5\x9a\xc3\x8c\xce\xb2\xc5\x81\xc3\x88 Collections Input1/ansible_namespace-collection-0.1.0.tar.gz')

    @pytest.mark.parametrize('version', ['1.1.1', 1.1, 1])
    def test_build_requirement_from_path_with_manifest(version, collection_artifact):
        manifest_path = os.path.join(collection_artifact[0], b'MANIFEST.json')
        manifest_value = json.dumps({
            'collection_info': {
                'namespace': 'namespace',
                'name': 'name',
                'version': version,
                'dependencies': {
                    'ansible_namespace.collection': '*'
                }
            }
        })
        with open(manifest_path, 'wb') as manifest_obj:
            manifest_obj.write(to_bytes(manifest_value))
    
        actual = collection.CollectionRequirement.from_path(collection_artifact[0], True)
    
        # While the folder name suggests a different collection, we treat MANIFEST.json as the source of truth.
        assert actual.namespace == u'namespace'
        assert actual.name == u'name'
        assert actual.b_path == collection_artifact[0]
        assert actual.api is None
        assert actual.skip is True
>       assert actual.versions == set([to_text(version)])
E       AssertionError: assert {'*'} == {'1.1'}
E         Extra items in the left set:
E         '*'
E         Extra items in the right set:
E         '1.1'
E         Use -v to get the full diff

test/units/galaxy/test_collection_install.py:192: AssertionError
---------------------------- Captured stdout setup -----------------------------
- Collection ansible_namespace.collection was created successfully
Created collection for ansible_namespace.collection at /tmp/pytest-of-root/pytest-2/test-ÅÑŚÌβŁÈ Collections Input1/ansible_namespace-collection-0.1.0.tar.gz
----------------------------- Captured stderr call -----------------------------
[WARNING]: Collection at '/tmp/pytest-of-root/pytest-2/test-ÅÑŚÌβŁÈ Collections
Input1/ansible_namespace/collection' does not have a valid version set, falling
back to '*'. Found version: '1.1'
______________ test_build_requirement_from_path_with_manifest[1] _______________

version = 1
collection_artifact = (b'/tmp/pytest-of-root/pytest-2/test-\xc3\x85\xc3\x91\xc5\x9a\xc3\x8c\xce\xb2\xc5\x81\xc3\x88 Collections Input2/ansib...\xc3\x85\xc3\x91\xc5\x9a\xc3\x8c\xce\xb2\xc5\x81\xc3\x88 Collections Input2/ansible_namespace-collection-0.1.0.tar.gz')

    @pytest.mark.parametrize('version', ['1.1.1', 1.1, 1])
    def test_build_requirement_from_path_with_manifest(version, collection_artifact):
        manifest_path = os.path.join(collection_artifact[0], b'MANIFEST.json')
        manifest_value = json.dumps({
            'collection_info': {
                'namespace': 'namespace',
                'name': 'name',
                'version': version,
                'dependencies': {
                    'ansible_namespace.collection': '*'
                }
            }
        })
        with open(manifest_path, 'wb') as manifest_obj:
            manifest_obj.write(to_bytes(manifest_value))
    
        actual = collection.CollectionRequirement.from_path(collection_artifact[0], True)
    
        # While the folder name suggests a different collection, we treat MANIFEST.json as the source of truth.
        assert actual.namespace == u'namespace'
        assert actual.name == u'name'
        assert actual.b_path == collection_artifact[0]
        assert actual.api is None
        assert actual.skip is True
>       assert actual.versions == set([to_text(version)])
E       AssertionError: assert {'*'} == {'1'}
E         Extra items in the left set:
E         '*'
E         Extra items in the right set:
E         '1'
E         Use -v to get the full diff

test/units/galaxy/test_collection_install.py:192: AssertionError
---------------------------- Captured stdout setup -----------------------------
- Collection ansible_namespace.collection was created successfully
Created collection for ansible_namespace.collection at /tmp/pytest-of-root/pytest-2/test-ÅÑŚÌβŁÈ Collections Input2/ansible_namespace-collection-0.1.0.tar.gz
----------------------------- Captured stderr call -----------------------------
[WARNING]: Collection at '/tmp/pytest-of-root/pytest-2/test-ÅÑŚÌβŁÈ Collections
Input2/ansible_namespace/collection' does not have a valid version set, falling
back to '*'. Found version: '1'
====================== 2 failed, 1 passed in 1.56 seconds ======================

coverage run -m pytest test/units/galaxy/test_collection_install.py::test_build_requirement_from_path_no_version
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.10.1, py-1.11.0, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/ansible, inifile:
collected 1 item

test/units/galaxy/test_collection_install.py .                           [100%]

=========================== 1 passed in 1.32 seconds ===========================

coverage run -m pytest test/units/galaxy/test_collection_install.py::test_add_collection_requirement_to_unknown_installed_version
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.10.1, py-1.11.0, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/ansible, inifile:
collected 1 item

test/units/galaxy/test_collection_install.py .                           [100%]

=========================== 1 passed in 1.25 seconds ===========================
