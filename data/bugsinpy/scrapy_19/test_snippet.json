[
    {
        "name": "tests.test_http_cookies.WrappedRequestTest.setUp#10",
        "src_path": "tests/test_http_cookies.py",
        "class_name": "tests.test_http_cookies.WrappedRequestTest",
        "signature": "tests.test_http_cookies.WrappedRequestTest.setUp(self)",
        "snippet": "    def setUp(self):\n        self.request = Request(\"http://www.example.com/page.html\",\n                               headers={\"Content-Type\": \"text/html\"})\n        self.wrapped = WrappedRequest(self.request)",
        "begin_line": 10,
        "end_line": 13,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_http_cookies.WrappedRequestTest.test_get_full_url#15",
        "src_path": "tests/test_http_cookies.py",
        "class_name": "tests.test_http_cookies.WrappedRequestTest",
        "signature": "tests.test_http_cookies.WrappedRequestTest.test_get_full_url(self)",
        "snippet": "    def test_get_full_url(self):\n        self.assertEqual(self.wrapped.get_full_url(), self.request.url)\n        self.assertEqual(self.wrapped.full_url, self.request.url)",
        "begin_line": 15,
        "end_line": 17,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_http_cookies.WrappedRequestTest.test_get_host#19",
        "src_path": "tests/test_http_cookies.py",
        "class_name": "tests.test_http_cookies.WrappedRequestTest",
        "signature": "tests.test_http_cookies.WrappedRequestTest.test_get_host(self)",
        "snippet": "    def test_get_host(self):\n        self.assertEqual(self.wrapped.get_host(), urlparse(self.request.url).netloc)\n        self.assertEqual(self.wrapped.host, urlparse(self.request.url).netloc)",
        "begin_line": 19,
        "end_line": 21,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_http_cookies.WrappedRequestTest.test_get_type#23",
        "src_path": "tests/test_http_cookies.py",
        "class_name": "tests.test_http_cookies.WrappedRequestTest",
        "signature": "tests.test_http_cookies.WrappedRequestTest.test_get_type(self)",
        "snippet": "    def test_get_type(self):\n        self.assertEqual(self.wrapped.get_type(), urlparse(self.request.url).scheme)\n        self.assertEqual(self.wrapped.type, urlparse(self.request.url).scheme)",
        "begin_line": 23,
        "end_line": 25,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_http_cookies.WrappedRequestTest.test_is_unverifiable#27",
        "src_path": "tests/test_http_cookies.py",
        "class_name": "tests.test_http_cookies.WrappedRequestTest",
        "signature": "tests.test_http_cookies.WrappedRequestTest.test_is_unverifiable(self)",
        "snippet": "    def test_is_unverifiable(self):\n        self.assertFalse(self.wrapped.is_unverifiable())\n        self.assertFalse(self.wrapped.unverifiable)",
        "begin_line": 27,
        "end_line": 29,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_http_cookies.WrappedRequestTest.test_is_unverifiable2#31",
        "src_path": "tests/test_http_cookies.py",
        "class_name": "tests.test_http_cookies.WrappedRequestTest",
        "signature": "tests.test_http_cookies.WrappedRequestTest.test_is_unverifiable2(self)",
        "snippet": "    def test_is_unverifiable2(self):\n        self.request.meta['is_unverifiable'] = True\n        self.assertTrue(self.wrapped.is_unverifiable())\n        self.assertTrue(self.wrapped.unverifiable)",
        "begin_line": 31,
        "end_line": 34,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_http_cookies.WrappedRequestTest.test_get_origin_req_host#36",
        "src_path": "tests/test_http_cookies.py",
        "class_name": "tests.test_http_cookies.WrappedRequestTest",
        "signature": "tests.test_http_cookies.WrappedRequestTest.test_get_origin_req_host(self)",
        "snippet": "    def test_get_origin_req_host(self):\n        self.assertEqual(self.wrapped.get_origin_req_host(), 'www.example.com')\n        self.assertEqual(self.wrapped.origin_req_host, 'www.example.com')",
        "begin_line": 36,
        "end_line": 38,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_http_cookies.WrappedRequestTest.test_has_header#40",
        "src_path": "tests/test_http_cookies.py",
        "class_name": "tests.test_http_cookies.WrappedRequestTest",
        "signature": "tests.test_http_cookies.WrappedRequestTest.test_has_header(self)",
        "snippet": "    def test_has_header(self):\n        self.assertTrue(self.wrapped.has_header('content-type'))\n        self.assertFalse(self.wrapped.has_header('xxxxx'))",
        "begin_line": 40,
        "end_line": 42,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_http_cookies.WrappedRequestTest.test_get_header#44",
        "src_path": "tests/test_http_cookies.py",
        "class_name": "tests.test_http_cookies.WrappedRequestTest",
        "signature": "tests.test_http_cookies.WrappedRequestTest.test_get_header(self)",
        "snippet": "    def test_get_header(self):\n        self.assertEqual(self.wrapped.get_header('content-type'), 'text/html')\n        self.assertEqual(self.wrapped.get_header('xxxxx', 'def'), 'def')",
        "begin_line": 44,
        "end_line": 46,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_http_cookies.WrappedRequestTest.test_header_items#48",
        "src_path": "tests/test_http_cookies.py",
        "class_name": "tests.test_http_cookies.WrappedRequestTest",
        "signature": "tests.test_http_cookies.WrappedRequestTest.test_header_items(self)",
        "snippet": "    def test_header_items(self):\n        self.assertEqual(self.wrapped.header_items(),\n                         [('Content-Type', ['text/html'])])",
        "begin_line": 48,
        "end_line": 50,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_http_cookies.WrappedRequestTest.test_add_unredirected_header#52",
        "src_path": "tests/test_http_cookies.py",
        "class_name": "tests.test_http_cookies.WrappedRequestTest",
        "signature": "tests.test_http_cookies.WrappedRequestTest.test_add_unredirected_header(self)",
        "snippet": "    def test_add_unredirected_header(self):\n        self.wrapped.add_unredirected_header('hello', 'world')\n        self.assertEqual(self.request.headers['hello'], b'world')",
        "begin_line": 52,
        "end_line": 54,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_http_cookies.WrappedResponseTest.setUp#59",
        "src_path": "tests/test_http_cookies.py",
        "class_name": "tests.test_http_cookies.WrappedResponseTest",
        "signature": "tests.test_http_cookies.WrappedResponseTest.setUp(self)",
        "snippet": "    def setUp(self):\n        self.response = Response(\"http://www.example.com/page.html\",\n                                 headers={\"Content-TYpe\": \"text/html\"})\n        self.wrapped = WrappedResponse(self.response)",
        "begin_line": 59,
        "end_line": 62,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_http_cookies.WrappedResponseTest.test_info#64",
        "src_path": "tests/test_http_cookies.py",
        "class_name": "tests.test_http_cookies.WrappedResponseTest",
        "signature": "tests.test_http_cookies.WrappedResponseTest.test_info(self)",
        "snippet": "    def test_info(self):\n        self.assert_(self.wrapped.info() is self.wrapped)",
        "begin_line": 64,
        "end_line": 65,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_http_cookies.WrappedResponseTest.test_getheaders#67",
        "src_path": "tests/test_http_cookies.py",
        "class_name": "tests.test_http_cookies.WrappedResponseTest",
        "signature": "tests.test_http_cookies.WrappedResponseTest.test_getheaders(self)",
        "snippet": "    def test_getheaders(self):\n        self.assertEqual(self.wrapped.getheaders('content-type'), ['text/html'])",
        "begin_line": 67,
        "end_line": 68,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_http_cookies.WrappedResponseTest.test_get_all#70",
        "src_path": "tests/test_http_cookies.py",
        "class_name": "tests.test_http_cookies.WrappedResponseTest",
        "signature": "tests.test_http_cookies.WrappedResponseTest.test_get_all(self)",
        "snippet": "    def test_get_all(self):\n        # get_all result must be native string\n        self.assertEqual(self.wrapped.get_all('content-type'), ['text/html'])",
        "begin_line": 70,
        "end_line": 72,
        "comment": "",
        "is_bug": false
    }
]