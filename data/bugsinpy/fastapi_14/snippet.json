[
    {
        "name": "docs.src.events.tutorial002.startup_event#7",
        "src_path": "docs/src/events/tutorial002.py",
        "class_name": "docs.src.events.tutorial002",
        "signature": "docs.src.events.tutorial002.startup_event()",
        "snippet": "def startup_event():\n    with open(\"log.txt\", mode=\"a\") as log:\n        log.write(\"Application shutdown\")",
        "begin_line": 7,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.events.tutorial002.read_items#13",
        "src_path": "docs/src/events/tutorial002.py",
        "class_name": "docs.src.events.tutorial002",
        "signature": "docs.src.events.tutorial002.read_items()",
        "snippet": "async def read_items():\n    return [{\"name\": \"Foo\"}]",
        "begin_line": 13,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.path_operation_configuration.tutorial005.create_item#23",
        "src_path": "docs/src/path_operation_configuration/tutorial005.py",
        "class_name": "docs.src.path_operation_configuration.tutorial005",
        "signature": "docs.src.path_operation_configuration.tutorial005.create_item(*, item: Item)",
        "snippet": "async def create_item(*, item: Item):\n    \"\"\"\n    Create an item with all the information:\n    \n    * name: each item must have a name\n    * description: a long description\n    * price: required\n    * tax: if the item doesn't have tax, you can omit this\n    * tags: a set of unique tag strings for this item\n    \"\"\"\n    return item",
        "begin_line": 23,
        "end_line": 33,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.security.api_key.APIKeyQuery.__call__#17",
        "src_path": "fastapi/security/api_key.py",
        "class_name": "fastapi.security.api_key.APIKeyQuery",
        "signature": "fastapi.security.api_key.APIKeyQuery.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> str:\n        api_key: str = request.query_params.get(self.model.name)\n        if not api_key:\n            raise HTTPException(\n                status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n            )\n        return api_key",
        "begin_line": 17,
        "end_line": 23,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.security.api_key.APIKeyHeader.__call__#31",
        "src_path": "fastapi/security/api_key.py",
        "class_name": "fastapi.security.api_key.APIKeyHeader",
        "signature": "fastapi.security.api_key.APIKeyHeader.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> str:\n        api_key: str = request.headers.get(self.model.name)\n        if not api_key:\n            raise HTTPException(\n                status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n            )\n        return api_key",
        "begin_line": 31,
        "end_line": 37,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.security.api_key.APIKeyCookie.__call__#45",
        "src_path": "fastapi/security/api_key.py",
        "class_name": "fastapi.security.api_key.APIKeyCookie",
        "signature": "fastapi.security.api_key.APIKeyCookie.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> str:\n        api_key: str = request.cookies.get(self.model.name)\n        if not api_key:\n            raise HTTPException(\n                status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n            )\n        return api_key",
        "begin_line": 45,
        "end_line": 51,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.request_forms_and_files.tutorial001.create_file#7",
        "src_path": "docs/src/request_forms_and_files/tutorial001.py",
        "class_name": "docs.src.request_forms_and_files.tutorial001",
        "signature": "docs.src.request_forms_and_files.tutorial001.create_file(file: bytes=File(...), fileb: UploadFile=File(...), token: str=Form(...))",
        "snippet": "async def create_file(\n    file: bytes = File(...), fileb: UploadFile = File(...), token: str = Form(...)\n):\n    return {\n        \"file_size\": len(file),\n        \"token\": token,\n        \"fileb_content_type\": fileb.content_type,\n    }",
        "begin_line": 7,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.body_schema.tutorial001.update_item#15",
        "src_path": "docs/src/body_schema/tutorial001.py",
        "class_name": "docs.src.body_schema.tutorial001",
        "signature": "docs.src.body_schema.tutorial001.update_item(*, item_id: int, item: Item=Body(..., embed=True))",
        "snippet": "async def update_item(*, item_id: int, item: Item = Body(..., embed=True)):\n    results = {\"item_id\": item_id, \"item\": item}\n    return results",
        "begin_line": 15,
        "end_line": 17,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.001893939393939394,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.bigger_applications.app.routers.items.read_items#7",
        "src_path": "docs/src/bigger_applications/app/routers/items.py",
        "class_name": "docs.src.bigger_applications.app.routers.items",
        "signature": "docs.src.bigger_applications.app.routers.items.read_items()",
        "snippet": "async def read_items():\n    return [{\"name\": \"Item Foo\"}, {\"name\": \"item Bar\"}]",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.bigger_applications.app.routers.items.read_item#12",
        "src_path": "docs/src/bigger_applications/app/routers/items.py",
        "class_name": "docs.src.bigger_applications.app.routers.items",
        "signature": "docs.src.bigger_applications.app.routers.items.read_item(item_id: str)",
        "snippet": "async def read_item(item_id: str):\n    return {\"name\": \"Fake Specific Item\", \"item_id\": item_id}",
        "begin_line": 12,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.dependencies.tutorial001.common_parameters#6",
        "src_path": "docs/src/dependencies/tutorial001.py",
        "class_name": "docs.src.dependencies.tutorial001",
        "signature": "docs.src.dependencies.tutorial001.common_parameters(q: str=None, skip: int=0, limit: int=100)",
        "snippet": "async def common_parameters(q: str = None, skip: int = 0, limit: int = 100):\n    return {\"q\": q, \"skip\": skip, \"limit\": limit}",
        "begin_line": 6,
        "end_line": 7,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.0015151515151515152,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.dependencies.tutorial001.read_items#11",
        "src_path": "docs/src/dependencies/tutorial001.py",
        "class_name": "docs.src.dependencies.tutorial001",
        "signature": "docs.src.dependencies.tutorial001.read_items(commons: dict=Depends(common_parameters))",
        "snippet": "async def read_items(commons: dict = Depends(common_parameters)):\n    return commons",
        "begin_line": 11,
        "end_line": 12,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.0015698587127158557,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.dependencies.tutorial001.read_users#16",
        "src_path": "docs/src/dependencies/tutorial001.py",
        "class_name": "docs.src.dependencies.tutorial001",
        "signature": "docs.src.dependencies.tutorial001.read_users(commons: dict=Depends(common_parameters))",
        "snippet": "async def read_users(commons: dict = Depends(common_parameters)):\n    return commons",
        "begin_line": 16,
        "end_line": 17,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.events.tutorial001.startup_event#9",
        "src_path": "docs/src/events/tutorial001.py",
        "class_name": "docs.src.events.tutorial001",
        "signature": "docs.src.events.tutorial001.startup_event()",
        "snippet": "async def startup_event():\n    items[\"foo\"] = {\"name\": \"Fighters\"}\n    items[\"bar\"] = {\"name\": \"Tenders\"}",
        "begin_line": 9,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.events.tutorial001.read_item#15",
        "src_path": "docs/src/events/tutorial001.py",
        "class_name": "docs.src.events.tutorial001",
        "signature": "docs.src.events.tutorial001.read_item(item_id: str)",
        "snippet": "async def read_item(item_id: str):\n    return items[item_id]",
        "begin_line": 15,
        "end_line": 16,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.header_params.tutorial001.read_items#7",
        "src_path": "docs/src/header_params/tutorial001.py",
        "class_name": "docs.src.header_params.tutorial001",
        "signature": "docs.src.header_params.tutorial001.read_items(*, user_agent: str=Header(None))",
        "snippet": "async def read_items(*, user_agent: str = Header(None)):\n    return {\"User-Agent\": user_agent}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.0016835016835016834,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.query_params.tutorial005.read_user_item#7",
        "src_path": "docs/src/query_params/tutorial005.py",
        "class_name": "docs.src.query_params.tutorial005",
        "signature": "docs.src.query_params.tutorial005.read_user_item(item_id: str, needy: str)",
        "snippet": "async def read_user_item(item_id: str, needy: str):\n    item = {\"item_id\": item_id, \"needy\": needy}\n    return item",
        "begin_line": 7,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.datastructures.UploadFile.validate#12",
        "src_path": "fastapi/datastructures.py",
        "class_name": "fastapi.datastructures.UploadFile",
        "signature": "fastapi.datastructures.UploadFile.validate(cls: Type['UploadFile'], v: Any)",
        "snippet": "    def validate(cls: Type[\"UploadFile\"], v: Any) -> Any:\n        if not isinstance(v, StarletteUploadFile):\n            raise ValueError(f\"Expected UploadFile, received: {type(v)}\")\n        return v",
        "begin_line": 12,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.query_params_str_validations.tutorial010.read_items#7",
        "src_path": "docs/src/query_params_str_validations/tutorial010.py",
        "class_name": "docs.src.query_params_str_validations.tutorial010",
        "signature": "docs.src.query_params_str_validations.tutorial010.read_items(q: str=Query(None, alias='item-query', title='Query string', description='Query string for the items to search in the database that have a good match', min_length=3, max_length=50, regex='^fixedquery$', deprecated=True))",
        "snippet": "async def read_items(\n    q: str = Query(\n        None,\n        alias=\"item-query\",\n        title=\"Query string\",\n        description=\"Query string for the items to search in the database that have a good match\",\n        min_length=3,\n        max_length=50,\n        regex=\"^fixedquery$\",\n        deprecated=True,\n    )\n):\n    results = {\"items\": [{\"item_id\": \"Foo\"}, {\"item_id\": \"Bar\"}]}\n    if q:\n        results.update({\"q\": q})\n    return results",
        "begin_line": 7,
        "end_line": 22,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.sub_applications.tutorial001.read_main#7",
        "src_path": "docs/src/sub_applications/tutorial001.py",
        "class_name": "docs.src.sub_applications.tutorial001",
        "signature": "docs.src.sub_applications.tutorial001.read_main()",
        "snippet": "def read_main():\n    return {\"message\": \"Hello World from main app\"}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.sub_applications.tutorial001.read_sub#15",
        "src_path": "docs/src/sub_applications/tutorial001.py",
        "class_name": "docs.src.sub_applications.tutorial001",
        "signature": "docs.src.sub_applications.tutorial001.read_sub()",
        "snippet": "def read_sub():\n    return {\"message\": \"Hello World from sub API\"}",
        "begin_line": 15,
        "end_line": 16,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.dependencies.models.Dependant.__init__#16",
        "src_path": "fastapi/dependencies/models.py",
        "class_name": "fastapi.dependencies.models.Dependant",
        "signature": "fastapi.dependencies.models.Dependant.__init__(self, *, path_params: List[Field]=None, query_params: List[Field]=None, header_params: List[Field]=None, cookie_params: List[Field]=None, body_params: List[Field]=None, dependencies: List['Dependant']=None, security_schemes: List[SecurityRequirement]=None, name: str=None, call: Callable=None, request_param_name: str=None, background_tasks_param_name: str=None)",
        "snippet": "    def __init__(\n        self,\n        *,\n        path_params: List[Field] = None,\n        query_params: List[Field] = None,\n        header_params: List[Field] = None,\n        cookie_params: List[Field] = None,\n        body_params: List[Field] = None,\n        dependencies: List[\"Dependant\"] = None,\n        security_schemes: List[SecurityRequirement] = None,\n        name: str = None,\n        call: Callable = None,\n        request_param_name: str = None,\n        background_tasks_param_name: str = None,\n    ) -> None:\n        self.path_params = path_params or []\n        self.query_params = query_params or []\n        self.header_params = header_params or []\n        self.cookie_params = cookie_params or []\n        self.body_params = body_params or []\n        self.dependencies = dependencies or []\n        self.security_requirements = security_schemes or []\n        self.request_param_name = request_param_name\n        self.background_tasks_param_name = background_tasks_param_name\n        self.name = name\n        self.call = call",
        "begin_line": 16,
        "end_line": 41,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.011363636363636364,
            "pseudo_dstar_susp": 0.011363636363636364,
            "pseudo_tarantula_susp": 0.011494252873563218,
            "pseudo_op2_susp": 0.011363636363636364,
            "pseudo_barinel_susp": 0.011494252873563218
        }
    },
    {
        "name": "docs.src.bigger_applications.app.routers.users.read_users#7",
        "src_path": "docs/src/bigger_applications/app/routers/users.py",
        "class_name": "docs.src.bigger_applications.app.routers.users",
        "signature": "docs.src.bigger_applications.app.routers.users.read_users()",
        "snippet": "async def read_users():\n    return [{\"username\": \"Foo\"}, {\"username\": \"Bar\"}]",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.bigger_applications.app.routers.users.read_user_me#12",
        "src_path": "docs/src/bigger_applications/app/routers/users.py",
        "class_name": "docs.src.bigger_applications.app.routers.users",
        "signature": "docs.src.bigger_applications.app.routers.users.read_user_me()",
        "snippet": "async def read_user_me():\n    return {\"username\": \"fakecurrentuser\"}",
        "begin_line": 12,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.bigger_applications.app.routers.users.read_user#17",
        "src_path": "docs/src/bigger_applications/app/routers/users.py",
        "class_name": "docs.src.bigger_applications.app.routers.users",
        "signature": "docs.src.bigger_applications.app.routers.users.read_user(username: str)",
        "snippet": "async def read_user(username: str):\n    return {\"username\": username}",
        "begin_line": 17,
        "end_line": 18,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.body_multiple_params.tutorial001.update_item#15",
        "src_path": "docs/src/body_multiple_params/tutorial001.py",
        "class_name": "docs.src.body_multiple_params.tutorial001",
        "signature": "docs.src.body_multiple_params.tutorial001.update_item(*, item_id: int=Path(..., title='The ID of the item to get', ge=0, le=1000), q: str=None, item: Item=None)",
        "snippet": "async def update_item(\n    *,\n    item_id: int = Path(..., title=\"The ID of the item to get\", ge=0, le=1000),\n    q: str = None,\n    item: Item = None,\n):\n    results = {\"item_id\": item_id}\n    if q:\n        results.update({\"q\": q})\n    if item:\n        results.update({\"item\": item})\n    return results",
        "begin_line": 15,
        "end_line": 26,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.security.oauth2.OAuth2PasswordRequestForm.__init__#45",
        "src_path": "fastapi/security/oauth2.py",
        "class_name": "fastapi.security.oauth2.OAuth2PasswordRequestForm",
        "signature": "fastapi.security.oauth2.OAuth2PasswordRequestForm.__init__(self, grant_type: str=Form(None, regex='password'), username: str=Form(...), password: str=Form(...), scope: str=Form(''), client_id: Optional[str]=Form(None), client_secret: Optional[str]=Form(None))",
        "snippet": "    def __init__(\n        self,\n        grant_type: str = Form(None, regex=\"password\"),\n        username: str = Form(...),\n        password: str = Form(...),\n        scope: str = Form(\"\"),\n        client_id: Optional[str] = Form(None),\n        client_secret: Optional[str] = Form(None),\n    ):\n        self.grant_type = grant_type\n        self.username = username\n        self.password = password\n        self.scopes = scope.split()\n        self.client_id = client_id\n        self.client_secret = client_secret",
        "begin_line": 45,
        "end_line": 59,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.0015698587127158557,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.security.oauth2.OAuth2PasswordRequestFormStrict.__init__#95",
        "src_path": "fastapi/security/oauth2.py",
        "class_name": "fastapi.security.oauth2.OAuth2PasswordRequestFormStrict",
        "signature": "fastapi.security.oauth2.OAuth2PasswordRequestFormStrict.__init__(self, grant_type: str=Form(..., regex='password'), username: str=Form(...), password: str=Form(...), scope: str=Form(''), client_id: Optional[str]=Form(None), client_secret: Optional[str]=Form(None))",
        "snippet": "    def __init__(\n        self,\n        grant_type: str = Form(..., regex=\"password\"),\n        username: str = Form(...),\n        password: str = Form(...),\n        scope: str = Form(\"\"),\n        client_id: Optional[str] = Form(None),\n        client_secret: Optional[str] = Form(None),\n    ):\n        super().__init__(\n            grant_type=grant_type,\n            username=username,\n            password=password,\n            scope=scope,\n            client_id=client_id,\n            client_secret=client_secret,\n        )",
        "begin_line": 95,
        "end_line": 111,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.security.oauth2.OAuth2.__call__#121",
        "src_path": "fastapi/security/oauth2.py",
        "class_name": "fastapi.security.oauth2.OAuth2",
        "signature": "fastapi.security.oauth2.OAuth2.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> str:\n        authorization: str = request.headers.get(\"Authorization\")\n        if not authorization:\n            raise HTTPException(\n                status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n            )\n        return authorization",
        "begin_line": 121,
        "end_line": 127,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.security.oauth2.OAuth2PasswordBearer.__call__#137",
        "src_path": "fastapi/security/oauth2.py",
        "class_name": "fastapi.security.oauth2.OAuth2PasswordBearer",
        "signature": "fastapi.security.oauth2.OAuth2PasswordBearer.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> str:\n        authorization: str = request.headers.get(\"Authorization\")\n        scheme, param = get_authorization_scheme_param(authorization)\n        if not authorization or scheme.lower() != \"bearer\":\n            raise HTTPException(\n                status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n            )\n        return param",
        "begin_line": 137,
        "end_line": 144,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.0015698587127158557,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.openapi.utils.get_openapi_params#42",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.get_openapi_params(dependant: Dependant)",
        "snippet": "def get_openapi_params(dependant: Dependant) -> List[Field]:\n    flat_dependant = get_flat_dependant(dependant)\n    return (\n        flat_dependant.path_params\n        + flat_dependant.query_params\n        + flat_dependant.header_params\n        + flat_dependant.cookie_params\n    )",
        "begin_line": 42,
        "end_line": 49,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.011363636363636364,
            "pseudo_dstar_susp": 0.011363636363636364,
            "pseudo_tarantula_susp": 0.011494252873563218,
            "pseudo_op2_susp": 0.011363636363636364,
            "pseudo_barinel_susp": 0.011494252873563218
        }
    },
    {
        "name": "fastapi.openapi.utils.get_openapi_security_definitions#52",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.get_openapi_security_definitions(flat_dependant: Dependant)",
        "snippet": "def get_openapi_security_definitions(flat_dependant: Dependant) -> Tuple[Dict, List]:\n    security_definitions = {}\n    operation_security = []\n    for security_requirement in flat_dependant.security_requirements:\n        security_definition = jsonable_encoder(\n            security_requirement.security_scheme.model,\n            by_alias=True,\n            include_none=False,\n        )\n        security_name = security_requirement.security_scheme.scheme_name\n        security_definitions[security_name] = security_definition\n        operation_security.append({security_name: security_requirement.scopes})\n    return security_definitions, operation_security",
        "begin_line": 52,
        "end_line": 64,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.011363636363636364,
            "pseudo_dstar_susp": 0.011363636363636364,
            "pseudo_tarantula_susp": 0.011494252873563218,
            "pseudo_op2_susp": 0.011363636363636364,
            "pseudo_barinel_susp": 0.011494252873563218
        }
    },
    {
        "name": "fastapi.openapi.utils.get_openapi_operation_parameters#67",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.get_openapi_operation_parameters(all_route_params: Sequence[Field])",
        "snippet": "def get_openapi_operation_parameters(\n    all_route_params: Sequence[Field]\n) -> Tuple[Dict[str, Dict], List[Dict[str, Any]]]:\n    definitions: Dict[str, Dict] = {}\n    parameters = []\n    for param in all_route_params:\n        schema: Param = param.schema\n        if \"ValidationError\" not in definitions:\n            definitions[\"ValidationError\"] = validation_error_definition\n            definitions[\"HTTPValidationError\"] = validation_error_response_definition\n        parameter = {\n            \"name\": param.alias,\n            \"in\": schema.in_.value,\n            \"required\": param.required,\n            \"schema\": field_schema(param, model_name_map={})[0],\n        }\n        if schema.description:\n            parameter[\"description\"] = schema.description\n        if schema.deprecated:\n            parameter[\"deprecated\"] = schema.deprecated\n        parameters.append(parameter)\n    return definitions, parameters",
        "begin_line": 67,
        "end_line": 88,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.011363636363636364,
            "pseudo_dstar_susp": 0.011363636363636364,
            "pseudo_tarantula_susp": 0.011494252873563218,
            "pseudo_op2_susp": 0.011363636363636364,
            "pseudo_barinel_susp": 0.011494252873563218
        }
    },
    {
        "name": "fastapi.openapi.utils.get_openapi_operation_request_body#91",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.get_openapi_operation_request_body(*, body_field: Field, model_name_map: Dict[Type, str])",
        "snippet": "def get_openapi_operation_request_body(\n    *, body_field: Field, model_name_map: Dict[Type, str]\n) -> Optional[Dict]:\n    if not body_field:\n        return None\n    assert isinstance(body_field, Field)\n    body_schema, _ = field_schema(\n        body_field, model_name_map=model_name_map, ref_prefix=REF_PREFIX\n    )\n    schema: Schema = body_field.schema\n    if isinstance(schema, Body):\n        request_media_type = schema.media_type\n    else:\n        # Includes not declared media types (Schema)\n        request_media_type = \"application/json\"\n    required = body_field.required\n    request_body_oai: Dict[str, Any] = {}\n    if required:\n        request_body_oai[\"required\"] = required\n    request_body_oai[\"content\"] = {request_media_type: {\"schema\": body_schema}}\n    return request_body_oai",
        "begin_line": 91,
        "end_line": 111,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 1.0,
            "pseudo_dstar_susp": 0.5,
            "pseudo_tarantula_susp": 1.0,
            "pseudo_op2_susp": 0.5,
            "pseudo_barinel_susp": 1.0
        }
    },
    {
        "name": "fastapi.openapi.utils.generate_operation_id#114",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.generate_operation_id(*, route: routing.APIRoute, method: str)",
        "snippet": "def generate_operation_id(*, route: routing.APIRoute, method: str) -> str:\n    if route.operation_id:\n        return route.operation_id\n    path: str = route.path\n    operation_id = route.name + path\n    operation_id = operation_id.replace(\"{\", \"_\").replace(\"}\", \"_\").replace(\"/\", \"_\")\n    operation_id = operation_id + \"_\" + method.lower()\n    return operation_id",
        "begin_line": 114,
        "end_line": 121,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.022222222222222223,
            "pseudo_dstar_susp": 0.022222222222222223,
            "pseudo_tarantula_susp": 0.022727272727272728,
            "pseudo_op2_susp": 0.022222222222222223,
            "pseudo_barinel_susp": 0.022727272727272728
        }
    },
    {
        "name": "fastapi.openapi.utils.generate_operation_summary#124",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.generate_operation_summary(*, route: routing.APIRoute, method: str)",
        "snippet": "def generate_operation_summary(*, route: routing.APIRoute, method: str) -> str:\n    if route.summary:\n        return route.summary\n    return route.name.replace(\"_\", \" \").title() + \" \" + method.title()",
        "begin_line": 124,
        "end_line": 127,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.022222222222222223,
            "pseudo_dstar_susp": 0.022222222222222223,
            "pseudo_tarantula_susp": 0.022727272727272728,
            "pseudo_op2_susp": 0.022222222222222223,
            "pseudo_barinel_susp": 0.022727272727272728
        }
    },
    {
        "name": "fastapi.openapi.utils.get_openapi_operation_metadata#130",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.get_openapi_operation_metadata(*, route: routing.APIRoute, method: str)",
        "snippet": "def get_openapi_operation_metadata(*, route: routing.APIRoute, method: str) -> Dict:\n    operation: Dict[str, Any] = {}\n    if route.tags:\n        operation[\"tags\"] = route.tags\n    operation[\"summary\"] = generate_operation_summary(route=route, method=method)\n    if route.description:\n        operation[\"description\"] = route.description\n    operation[\"operationId\"] = generate_operation_id(route=route, method=method)\n    if route.deprecated:\n        operation[\"deprecated\"] = route.deprecated\n    return operation",
        "begin_line": 130,
        "end_line": 140,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.011363636363636364,
            "pseudo_dstar_susp": 0.011363636363636364,
            "pseudo_tarantula_susp": 0.011494252873563218,
            "pseudo_op2_susp": 0.011363636363636364,
            "pseudo_barinel_susp": 0.011494252873563218
        }
    },
    {
        "name": "fastapi.openapi.utils.get_openapi_path#143",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.get_openapi_path(*, route: routing.APIRoute, model_name_map: Dict[Type, str])",
        "snippet": "def get_openapi_path(\n    *, route: routing.APIRoute, model_name_map: Dict[Type, str]\n) -> Tuple[Dict, Dict, Dict]:\n    path = {}\n    security_schemes: Dict[str, Any] = {}\n    definitions: Dict[str, Any] = {}\n    assert route.methods is not None, \"Methods must be a list\"\n    if route.include_in_schema:\n        for method in route.methods:\n            operation = get_openapi_operation_metadata(route=route, method=method)\n            parameters: List[Dict] = []\n            flat_dependant = get_flat_dependant(route.dependant)\n            security_definitions, operation_security = get_openapi_security_definitions(\n                flat_dependant=flat_dependant\n            )\n            if operation_security:\n                operation.setdefault(\"security\", []).extend(operation_security)\n            if security_definitions:\n                security_schemes.update(security_definitions)\n            all_route_params = get_openapi_params(route.dependant)\n            validation_definitions, operation_parameters = get_openapi_operation_parameters(\n                all_route_params=all_route_params\n            )\n            definitions.update(validation_definitions)\n            parameters.extend(operation_parameters)\n            if parameters:\n                operation[\"parameters\"] = parameters\n            if method in METHODS_WITH_BODY:\n                request_body_oai = get_openapi_operation_request_body(\n                    body_field=route.body_field, model_name_map=model_name_map\n                )\n                if request_body_oai:\n                    operation[\"requestBody\"] = request_body_oai\n                    if \"ValidationError\" not in definitions:\n                        definitions[\"ValidationError\"] = validation_error_definition\n                        definitions[\n                            \"HTTPValidationError\"\n                        ] = validation_error_response_definition\n            status_code = str(route.status_code)\n            response_schema = {\"type\": \"string\"}\n            if lenient_issubclass(route.content_type, JSONResponse):\n                if route.response_field:\n                    response_schema, _ = field_schema(\n                        route.response_field,\n                        model_name_map=model_name_map,\n                        ref_prefix=REF_PREFIX,\n                    )\n                else:\n                    response_schema = {}\n            content = {route.content_type.media_type: {\"schema\": response_schema}}\n            operation[\"responses\"] = {\n                status_code: {\n                    \"description\": route.response_description,\n                    \"content\": content,\n                }\n            }\n            if all_route_params or route.body_field:\n                operation[\"responses\"][str(HTTP_422_UNPROCESSABLE_ENTITY)] = {\n                    \"description\": \"Validation Error\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\"$ref\": REF_PREFIX + \"HTTPValidationError\"}\n                        }\n                    },\n                }\n            path[method.lower()] = operation\n    return path, security_schemes, definitions",
        "begin_line": 143,
        "end_line": 209,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.3333333333333333,
            "pseudo_dstar_susp": 0.25,
            "pseudo_tarantula_susp": 0.3333333333333333,
            "pseudo_op2_susp": 0.25,
            "pseudo_barinel_susp": 0.3333333333333333
        }
    },
    {
        "name": "fastapi.openapi.utils.get_openapi#212",
        "src_path": "fastapi/openapi/utils.py",
        "class_name": "fastapi.openapi.utils",
        "signature": "fastapi.openapi.utils.get_openapi(*, title: str, version: str, openapi_version: str='3.0.2', description: str=None, routes: Sequence[BaseRoute], openapi_prefix: str='')",
        "snippet": "def get_openapi(\n    *,\n    title: str,\n    version: str,\n    openapi_version: str = \"3.0.2\",\n    description: str = None,\n    routes: Sequence[BaseRoute],\n    openapi_prefix: str = \"\"\n) -> Dict:\n    info = {\"title\": title, \"version\": version}\n    if description:\n        info[\"description\"] = description\n    output = {\"openapi\": openapi_version, \"info\": info}\n    components: Dict[str, Dict] = {}\n    paths: Dict[str, Dict] = {}\n    flat_models = get_flat_models_from_routes(routes)\n    model_name_map = get_model_name_map(flat_models)\n    definitions = get_model_definitions(\n        flat_models=flat_models, model_name_map=model_name_map\n    )\n    for route in routes:\n        if isinstance(route, routing.APIRoute):\n            result = get_openapi_path(route=route, model_name_map=model_name_map)\n            if result:\n                path, security_schemes, path_definitions = result\n                if path:\n                    paths.setdefault(openapi_prefix + route.path, {}).update(path)\n                if security_schemes:\n                    components.setdefault(\"securitySchemes\", {}).update(\n                        security_schemes\n                    )\n                if path_definitions:\n                    definitions.update(path_definitions)\n    if definitions:\n        components.setdefault(\"schemas\", {}).update(definitions)\n    if components:\n        output[\"components\"] = components\n    output[\"paths\"] = paths\n    return jsonable_encoder(OpenAPI(**output), by_alias=True, include_none=False)",
        "begin_line": 212,
        "end_line": 250,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.02857142857142857,
            "pseudo_dstar_susp": 0.02857142857142857,
            "pseudo_tarantula_susp": 0.029411764705882353,
            "pseudo_op2_susp": 0.02857142857142857,
            "pseudo_barinel_susp": 0.029411764705882353
        }
    },
    {
        "name": "fastapi.routing.serialize_response#24",
        "src_path": "fastapi/routing.py",
        "class_name": "fastapi.routing",
        "signature": "fastapi.routing.serialize_response(*, field: Field=None, response: Response)",
        "snippet": "def serialize_response(*, field: Field = None, response: Response) -> Any:\n    encoded = jsonable_encoder(response)\n    if field:\n        errors = []\n        value, errors_ = field.validate(encoded, {}, loc=(\"response\",))\n        if isinstance(errors_, ErrorWrapper):\n            errors.append(errors_)\n        elif isinstance(errors_, list):\n            errors.extend(errors_)\n        if errors:\n            raise ValidationError(errors)\n        return jsonable_encoder(value)\n    else:\n        return encoded",
        "begin_line": 24,
        "end_line": 37,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.routing.app#51",
        "src_path": "fastapi/routing.py",
        "class_name": "fastapi.routing",
        "signature": "fastapi.routing.app(request: Request)",
        "snippet": "    async def app(request: Request) -> Response:\n        try:\n            body = None\n            if body_field:\n                if is_body_form:\n                    raw_body = await request.form()\n                    form_fields = {}\n                    for field, value in raw_body.items():\n                        form_fields[field] = value\n                    if form_fields:\n                        body = form_fields\n                else:\n                    body_bytes = await request.body()\n                    if body_bytes:\n                        body = await request.json()\n        except Exception as e:\n            logging.error(\"Error getting request body\", e)\n            raise HTTPException(\n                status_code=400, detail=\"There was an error parsing the body\"\n            )\n        values, errors, background_tasks = await solve_dependencies(\n            request=request, dependant=dependant, body=body\n        )\n        if errors:\n            errors_out = ValidationError(errors)\n            raise HTTPException(\n                status_code=HTTP_422_UNPROCESSABLE_ENTITY, detail=errors_out.errors()\n            )\n        else:\n            assert dependant.call is not None, \"dependant.call must me a function\"\n            if is_coroutine:\n                raw_response = await dependant.call(**values)\n            else:\n                raw_response = await run_in_threadpool(dependant.call, **values)\n            if isinstance(raw_response, Response):\n                if raw_response.background is None:\n                    raw_response.background = background_tasks\n                return raw_response\n            response_data = serialize_response(\n                field=response_field, response=raw_response\n            )\n            return content_type(\n                content=response_data,\n                status_code=status_code,\n                background=background_tasks,\n            )",
        "begin_line": 51,
        "end_line": 96,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.query_params_str_validations.tutorial011.read_items#9",
        "src_path": "docs/src/query_params_str_validations/tutorial011.py",
        "class_name": "docs.src.query_params_str_validations.tutorial011",
        "signature": "docs.src.query_params_str_validations.tutorial011.read_items(q: List[str]=Query(None))",
        "snippet": "async def read_items(q: List[str] = Query(None)):\n    query_items = {\"q\": q}\n    return query_items",
        "begin_line": 9,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.request_files.tutorial001.create_file#7",
        "src_path": "docs/src/request_files/tutorial001.py",
        "class_name": "docs.src.request_files.tutorial001",
        "signature": "docs.src.request_files.tutorial001.create_file(file: bytes=File(...))",
        "snippet": "async def create_file(file: bytes = File(...)):\n    return {\"file_size\": len(file)}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.001893939393939394,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.request_files.tutorial001.create_upload_file#12",
        "src_path": "docs/src/request_files/tutorial001.py",
        "class_name": "docs.src.request_files.tutorial001",
        "signature": "docs.src.request_files.tutorial001.create_upload_file(file: UploadFile=File(...))",
        "snippet": "async def create_upload_file(file: UploadFile = File(...)):\n    return {\"filename\": file.filename}",
        "begin_line": 12,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.extra_data_types.tutorial001.read_items#10",
        "src_path": "docs/src/extra_data_types/tutorial001.py",
        "class_name": "docs.src.extra_data_types.tutorial001",
        "signature": "docs.src.extra_data_types.tutorial001.read_items(item_id: UUID, start_datetime: datetime=Body(None), end_datetime: datetime=Body(None), repeat_at: time=Body(None), process_after: timedelta=Body(None))",
        "snippet": "async def read_items(\n    item_id: UUID,\n    start_datetime: datetime = Body(None),\n    end_datetime: datetime = Body(None),\n    repeat_at: time = Body(None),\n    process_after: timedelta = Body(None),\n):\n    start_process = start_datetime + process_after\n    duration = end_datetime - start_process\n    return {\n        \"item_id\": item_id,\n        \"start_datetime\": start_datetime,\n        \"end_datetime\": end_datetime,\n        \"repeat_at\": repeat_at,\n        \"process_after\": process_after,\n        \"start_process\": start_process,\n        \"duration\": duration,\n    }",
        "begin_line": 10,
        "end_line": 27,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.sql_databases.tutorial001.get_user#48",
        "src_path": "docs/src/sql_databases/tutorial001.py",
        "class_name": "docs.src.sql_databases.tutorial001",
        "signature": "docs.src.sql_databases.tutorial001.get_user(db_session: Session, user_id: int)",
        "snippet": "def get_user(db_session: Session, user_id: int):\n    return db_session.query(User).filter(User.id == user_id).first()",
        "begin_line": 48,
        "end_line": 49,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.sql_databases.tutorial001.get_db#53",
        "src_path": "docs/src/sql_databases/tutorial001.py",
        "class_name": "docs.src.sql_databases.tutorial001",
        "signature": "docs.src.sql_databases.tutorial001.get_db(request: Request)",
        "snippet": "def get_db(request: Request):\n    return request.state.db",
        "begin_line": 53,
        "end_line": 54,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.sql_databases.tutorial001.read_user#62",
        "src_path": "docs/src/sql_databases/tutorial001.py",
        "class_name": "docs.src.sql_databases.tutorial001",
        "signature": "docs.src.sql_databases.tutorial001.read_user(user_id: int, db: Session=Depends(get_db))",
        "snippet": "def read_user(user_id: int, db: Session = Depends(get_db)):\n    user = get_user(db, user_id=user_id)\n    return user",
        "begin_line": 62,
        "end_line": 64,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.sql_databases.tutorial001.db_session_middleware#68",
        "src_path": "docs/src/sql_databases/tutorial001.py",
        "class_name": "docs.src.sql_databases.tutorial001",
        "signature": "docs.src.sql_databases.tutorial001.db_session_middleware(request: Request, call_next)",
        "snippet": "async def db_session_middleware(request: Request, call_next):\n    request.state.db = SessionLocal()\n    response = await call_next(request)\n    request.state.db.close()\n    return response",
        "begin_line": 68,
        "end_line": 72,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.001893939393939394,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.handling_errors.tutorial002.create_item_header#9",
        "src_path": "docs/src/handling_errors/tutorial002.py",
        "class_name": "docs.src.handling_errors.tutorial002",
        "signature": "docs.src.handling_errors.tutorial002.create_item_header(item_id: str)",
        "snippet": "async def create_item_header(item_id: str):\n    if item_id not in items:\n        raise HTTPException(\n            status_code=404,\n            detail=\"Item not found\",\n            headers={\"X-Error\": \"There goes my error\"},\n        )\n    return {\"item\": items[item_id]}",
        "begin_line": 9,
        "end_line": 16,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.custom_response.tutorial004.generate_html_response#7",
        "src_path": "docs/src/custom_response/tutorial004.py",
        "class_name": "docs.src.custom_response.tutorial004",
        "signature": "docs.src.custom_response.tutorial004.generate_html_response()",
        "snippet": "def generate_html_response():\n    html_content = \"\"\"\n    <html>\n        <head>\n            <title>Some HTML in here</title>\n        </head>\n        <body>\n            <h1>Look ma! HTML!</h1>\n        </body>\n    </html>\n    \"\"\"\n    return HTMLResponse(content=html_content, status_code=200)",
        "begin_line": 7,
        "end_line": 18,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.custom_response.tutorial004.read_items#22",
        "src_path": "docs/src/custom_response/tutorial004.py",
        "class_name": "docs.src.custom_response.tutorial004",
        "signature": "docs.src.custom_response.tutorial004.read_items()",
        "snippet": "async def read_items():\n    return generate_html_response()",
        "begin_line": 22,
        "end_line": 23,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.custom_response.tutorial001.read_items#8",
        "src_path": "docs/src/custom_response/tutorial001.py",
        "class_name": "docs.src.custom_response.tutorial001",
        "signature": "docs.src.custom_response.tutorial001.read_items()",
        "snippet": "async def read_items():\n    return [{\"item_id\": \"Foo\"}]",
        "begin_line": 8,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.path_operation_advanced_configuration.tutorial002.read_items#7",
        "src_path": "docs/src/path_operation_advanced_configuration/tutorial002.py",
        "class_name": "docs.src.path_operation_advanced_configuration.tutorial002",
        "signature": "docs.src.path_operation_advanced_configuration.tutorial002.read_items()",
        "snippet": "async def read_items():\n    return [{\"item_id\": \"Foo\"}]",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.request_forms.tutorial001.login#7",
        "src_path": "docs/src/request_forms/tutorial001.py",
        "class_name": "docs.src.request_forms.tutorial001",
        "signature": "docs.src.request_forms.tutorial001.login(*, username: str=Form(...), password: str=Form(...))",
        "snippet": "async def login(*, username: str = Form(...), password: str = Form(...)):\n    return {\"username\": username}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.extra_models.tutorial003.read_item#34",
        "src_path": "docs/src/extra_models/tutorial003.py",
        "class_name": "docs.src.extra_models.tutorial003",
        "signature": "docs.src.extra_models.tutorial003.read_item(item_id: str)",
        "snippet": "async def read_item(item_id: str):\n    return items[item_id]",
        "begin_line": 34,
        "end_line": 35,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.001893939393939394,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.security.tutorial001.read_items#10",
        "src_path": "docs/src/security/tutorial001.py",
        "class_name": "docs.src.security.tutorial001",
        "signature": "docs.src.security.tutorial001.read_items(token: str=Security(oauth2_scheme))",
        "snippet": "async def read_items(token: str = Security(oauth2_scheme)):\n    return {\"token\": token}",
        "begin_line": 10,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.openapi.docs.get_swagger_ui_html#4",
        "src_path": "fastapi/openapi/docs.py",
        "class_name": "fastapi.openapi.docs",
        "signature": "fastapi.openapi.docs.get_swagger_ui_html(*, openapi_url: str, title: str)",
        "snippet": "def get_swagger_ui_html(*, openapi_url: str, title: str) -> HTMLResponse:\n    return HTMLResponse(\n        \"\"\"\n    <! doctype html>\n    <html>\n    <head>\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@3/swagger-ui.css\">\n    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\n    <title>\n    \"\"\"\n        + title\n        + \"\"\"\n    </title>\n    </head>\n    <body>\n    <div id=\"swagger-ui\">\n    </div>\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@3/swagger-ui-bundle.js\"></script>\n    <!-- `SwaggerUIBundle` is now available on the page -->\n    <script>\n            \n    const ui = SwaggerUIBundle({\n        url: '\"\"\"\n        + openapi_url\n        + \"\"\"',\n        dom_id: '#swagger-ui',\n        presets: [\n        SwaggerUIBundle.presets.apis,\n        SwaggerUIBundle.SwaggerUIStandalonePreset\n        ],\n        layout: \"BaseLayout\"\n \n    })\n    </script>\n    </body>\n    </html>\n    \"\"\"\n    )",
        "begin_line": 4,
        "end_line": 41,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.openapi.docs.get_redoc_html#44",
        "src_path": "fastapi/openapi/docs.py",
        "class_name": "fastapi.openapi.docs",
        "signature": "fastapi.openapi.docs.get_redoc_html(*, openapi_url: str, title: str)",
        "snippet": "def get_redoc_html(*, openapi_url: str, title: str) -> HTMLResponse:\n    return HTMLResponse(\n        \"\"\"\n    <!DOCTYPE html>\n<html>\n  <head>\n    <title>\n    \"\"\"\n        + title\n        + \"\"\"\n    </title>\n    <!-- needed for adaptive design -->\n    <meta charset=\"utf-8\"/>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link href=\"https://fonts.googleapis.com/css?family=Montserrat:300,400,700|Roboto:300,400,700\" rel=\"stylesheet\">\n    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\n\n    <!--\n    ReDoc doesn't change outer page styles\n    -->\n    <style>\n      body {\n        margin: 0;\n        padding: 0;\n      }\n    </style>\n  </head>\n  <body>\n    <redoc spec-url='\"\"\"\n        + openapi_url\n        + \"\"\"'></redoc>\n    <script src=\"https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js\"> </script>\n  </body>\n</html>\n    \"\"\"\n    )",
        "begin_line": 44,
        "end_line": 79,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.dependencies.utils.get_flat_dependant#64",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.get_flat_dependant(dependant: Dependant)",
        "snippet": "def get_flat_dependant(dependant: Dependant) -> Dependant:\n    flat_dependant = Dependant(\n        path_params=dependant.path_params.copy(),\n        query_params=dependant.query_params.copy(),\n        header_params=dependant.header_params.copy(),\n        cookie_params=dependant.cookie_params.copy(),\n        body_params=dependant.body_params.copy(),\n        security_schemes=dependant.security_requirements.copy(),\n    )\n    for sub_dependant in dependant.dependencies:\n        flat_sub = get_flat_dependant(sub_dependant)\n        flat_dependant.path_params.extend(flat_sub.path_params)\n        flat_dependant.query_params.extend(flat_sub.query_params)\n        flat_dependant.header_params.extend(flat_sub.header_params)\n        flat_dependant.cookie_params.extend(flat_sub.cookie_params)\n        flat_dependant.body_params.extend(flat_sub.body_params)\n        flat_dependant.security_requirements.extend(flat_sub.security_requirements)\n    return flat_dependant",
        "begin_line": 64,
        "end_line": 81,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.011363636363636364,
            "pseudo_dstar_susp": 0.011363636363636364,
            "pseudo_tarantula_susp": 0.011494252873563218,
            "pseudo_op2_susp": 0.011363636363636364,
            "pseudo_barinel_susp": 0.011494252873563218
        }
    },
    {
        "name": "fastapi.dependencies.utils.is_coroutine_callable#222",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.is_coroutine_callable(call: Callable)",
        "snippet": "def is_coroutine_callable(call: Callable) -> bool:\n    if inspect.isfunction(call):\n        return asyncio.iscoroutinefunction(call)\n    if inspect.isclass(call):\n        return False\n    call = getattr(call, \"__call__\", None)\n    return asyncio.iscoroutinefunction(call)",
        "begin_line": 222,
        "end_line": 228,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.0014104372355430183,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.dependencies.utils.solve_dependencies#231",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.solve_dependencies(*, request: Request, dependant: Dependant, body: Dict[str, Any]=None, background_tasks: BackgroundTasks=None)",
        "snippet": "async def solve_dependencies(\n    *,\n    request: Request,\n    dependant: Dependant,\n    body: Dict[str, Any] = None,\n    background_tasks: BackgroundTasks = None,\n) -> Tuple[Dict[str, Any], List[ErrorWrapper], Optional[BackgroundTasks]]:\n    values: Dict[str, Any] = {}\n    errors: List[ErrorWrapper] = []\n    for sub_dependant in dependant.dependencies:\n        sub_values, sub_errors, background_tasks = await solve_dependencies(\n            request=request,\n            dependant=sub_dependant,\n            body=body,\n            background_tasks=background_tasks,\n        )\n        if sub_errors:\n            errors.extend(sub_errors)\n            continue\n        assert sub_dependant.call is not None, \"sub_dependant.call must be a function\"\n        if is_coroutine_callable(sub_dependant.call):\n            solved = await sub_dependant.call(**sub_values)\n        else:\n            solved = await run_in_threadpool(sub_dependant.call, **sub_values)\n        assert sub_dependant.name is not None, \"Subdependants always have a name\"\n        values[sub_dependant.name] = solved\n    path_values, path_errors = request_params_to_args(\n        dependant.path_params, request.path_params\n    )\n    query_values, query_errors = request_params_to_args(\n        dependant.query_params, request.query_params\n    )\n    header_values, header_errors = request_params_to_args(\n        dependant.header_params, request.headers\n    )\n    cookie_values, cookie_errors = request_params_to_args(\n        dependant.cookie_params, request.cookies\n    )\n    values.update(path_values)\n    values.update(query_values)\n    values.update(header_values)\n    values.update(cookie_values)\n    errors += path_errors + query_errors + header_errors + cookie_errors\n    if dependant.body_params:\n        body_values, body_errors = await request_body_to_args(  # type: ignore # body_params checked above\n            dependant.body_params, body\n        )\n        values.update(body_values)\n        errors.extend(body_errors)\n    if dependant.request_param_name:\n        values[dependant.request_param_name] = request\n    if dependant.background_tasks_param_name:\n        if background_tasks is None:\n            background_tasks = BackgroundTasks()\n        values[dependant.background_tasks_param_name] = background_tasks\n    return values, errors, background_tasks",
        "begin_line": 231,
        "end_line": 286,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.001893939393939394,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.dependencies.utils.request_params_to_args#289",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.request_params_to_args(required_params: Sequence[Field], received_params: Union[Mapping[str, Any], QueryParams, Headers])",
        "snippet": "def request_params_to_args(\n    required_params: Sequence[Field],\n    received_params: Union[Mapping[str, Any], QueryParams, Headers],\n) -> Tuple[Dict[str, Any], List[ErrorWrapper]]:\n    values = {}\n    errors = []\n    for field in required_params:\n        if field.shape in {Shape.LIST, Shape.SET, Shape.TUPLE} and isinstance(\n            received_params, (QueryParams, Headers)\n        ):\n            value = received_params.getlist(field.alias)\n        else:\n            value = received_params.get(field.alias)\n        schema: params.Param = field.schema\n        assert isinstance(schema, params.Param), \"Params must be subclasses of Param\"\n        if value is None:\n            if field.required:\n                errors.append(\n                    ErrorWrapper(\n                        MissingError(),\n                        loc=(schema.in_.value, field.alias),\n                        config=UnconstrainedConfig,\n                    )\n                )\n            else:\n                values[field.name] = deepcopy(field.default)\n            continue\n        v_, errors_ = field.validate(value, values, loc=(schema.in_.value, field.alias))\n        if isinstance(errors_, ErrorWrapper):\n            errors.append(errors_)\n        elif isinstance(errors_, list):\n            errors.extend(errors_)\n        else:\n            values[field.name] = v_\n    return values, errors",
        "begin_line": 289,
        "end_line": 323,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.dependencies.utils.request_body_to_args#326",
        "src_path": "fastapi/dependencies/utils.py",
        "class_name": "fastapi.dependencies.utils",
        "signature": "fastapi.dependencies.utils.request_body_to_args(required_params: List[Field], received_body: Dict[str, Any])",
        "snippet": "async def request_body_to_args(\n    required_params: List[Field], received_body: Dict[str, Any]\n) -> Tuple[Dict[str, Any], List[ErrorWrapper]]:\n    values = {}\n    errors = []\n    if required_params:\n        field = required_params[0]\n        embed = getattr(field.schema, \"embed\", None)\n        if len(required_params) == 1 and not embed:\n            received_body = {field.alias: received_body}\n        elif received_body is None:\n            received_body = {}\n        for field in required_params:\n            value = received_body.get(field.alias)\n            if value is None or (isinstance(field.schema, params.Form) and value == \"\"):\n                if field.required:\n                    errors.append(\n                        ErrorWrapper(\n                            MissingError(),\n                            loc=(\"body\", field.alias),\n                            config=UnconstrainedConfig,\n                        )\n                    )\n                else:\n                    values[field.name] = deepcopy(field.default)\n                continue\n            if (\n                isinstance(field.schema, params.File)\n                and lenient_issubclass(field.type_, bytes)\n                and isinstance(value, UploadFile)\n            ):\n                value = await value.read()\n            v_, errors_ = field.validate(value, values, loc=(\"body\", field.alias))\n            if isinstance(errors_, ErrorWrapper):\n                errors.append(errors_)\n            elif isinstance(errors_, list):\n                errors.extend(errors_)\n            else:\n                values[field.name] = v_\n    return values, errors",
        "begin_line": 326,
        "end_line": 365,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.handling_errors.tutorial001.create_item#9",
        "src_path": "docs/src/handling_errors/tutorial001.py",
        "class_name": "docs.src.handling_errors.tutorial001",
        "signature": "docs.src.handling_errors.tutorial001.create_item(item_id: str)",
        "snippet": "async def create_item(item_id: str):\n    if item_id not in items:\n        raise HTTPException(status_code=404, detail=\"Item not found\")\n    return {\"item\": items[item_id]}",
        "begin_line": 9,
        "end_line": 12,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.async_sql_databases.tutorial001.startup#46",
        "src_path": "docs/src/async_sql_databases/tutorial001.py",
        "class_name": "docs.src.async_sql_databases.tutorial001",
        "signature": "docs.src.async_sql_databases.tutorial001.startup()",
        "snippet": "async def startup():\n    await database.connect()",
        "begin_line": 46,
        "end_line": 47,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.001893939393939394,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.async_sql_databases.tutorial001.shutdown#51",
        "src_path": "docs/src/async_sql_databases/tutorial001.py",
        "class_name": "docs.src.async_sql_databases.tutorial001",
        "signature": "docs.src.async_sql_databases.tutorial001.shutdown()",
        "snippet": "async def shutdown():\n    await database.disconnect()",
        "begin_line": 51,
        "end_line": 52,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.001893939393939394,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.async_sql_databases.tutorial001.read_notes#56",
        "src_path": "docs/src/async_sql_databases/tutorial001.py",
        "class_name": "docs.src.async_sql_databases.tutorial001",
        "signature": "docs.src.async_sql_databases.tutorial001.read_notes()",
        "snippet": "async def read_notes():\n    query = notes.select()\n    return await database.fetch_all(query)",
        "begin_line": 56,
        "end_line": 58,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.async_sql_databases.tutorial001.create_note#62",
        "src_path": "docs/src/async_sql_databases/tutorial001.py",
        "class_name": "docs.src.async_sql_databases.tutorial001",
        "signature": "docs.src.async_sql_databases.tutorial001.create_note(note: NoteIn)",
        "snippet": "async def create_note(note: NoteIn):\n    query = notes.insert().values(text=note.text, completed=note.completed)\n    last_record_id = await database.execute(query)\n    return {**note.dict(), \"id\": last_record_id}",
        "begin_line": 62,
        "end_line": 65,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.applications.http_exception#15",
        "src_path": "fastapi/applications.py",
        "class_name": "fastapi.applications",
        "signature": "fastapi.applications.http_exception(request: Request, exc: HTTPException)",
        "snippet": "async def http_exception(request: Request, exc: HTTPException) -> JSONResponse:\n    headers = getattr(exc, \"headers\", None)\n    if headers:\n        return JSONResponse(\n            {\"detail\": exc.detail}, status_code=exc.status_code, headers=headers\n        )\n    else:\n        return JSONResponse({\"detail\": exc.detail}, status_code=exc.status_code)",
        "begin_line": 15,
        "end_line": 22,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.001893939393939394,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.applications.FastAPI.openapi#67",
        "src_path": "fastapi/applications.py",
        "class_name": "fastapi.applications.FastAPI",
        "signature": "fastapi.applications.FastAPI.openapi(self)",
        "snippet": "    def openapi(self) -> Dict:\n        if not self.openapi_schema:\n            self.openapi_schema = get_openapi(\n                title=self.title,\n                version=self.version,\n                openapi_version=self.openapi_version,\n                description=self.description,\n                routes=self.routes,\n                openapi_prefix=self.openapi_prefix,\n            )\n        return self.openapi_schema",
        "begin_line": 67,
        "end_line": 77,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.006578947368421052,
            "pseudo_dstar_susp": 0.006578947368421052,
            "pseudo_tarantula_susp": 0.006622516556291391,
            "pseudo_op2_susp": 0.006578947368421052,
            "pseudo_barinel_susp": 0.006622516556291391
        }
    },
    {
        "name": "fastapi.applications.FastAPI.setup#79",
        "src_path": "fastapi/applications.py",
        "class_name": "fastapi.applications.FastAPI",
        "signature": "fastapi.applications.FastAPI.setup(self)",
        "snippet": "    def setup(self) -> None:\n        if self.openapi_url:\n            self.add_route(\n                self.openapi_url,\n                lambda req: JSONResponse(self.openapi()),\n                include_in_schema=False,\n            )\n        if self.openapi_url and self.docs_url:\n            self.add_route(\n                self.docs_url,\n                lambda r: get_swagger_ui_html(\n                    openapi_url=self.openapi_prefix + self.openapi_url,\n                    title=self.title + \" - Swagger UI\",\n                ),\n                include_in_schema=False,\n            )\n        if self.openapi_url and self.redoc_url:\n            self.add_route(\n                self.redoc_url,\n                lambda r: get_redoc_html(\n                    openapi_url=self.openapi_prefix + self.openapi_url,\n                    title=self.title + \" - ReDoc\",\n                ),\n                include_in_schema=False,\n            )\n        self.add_exception_handler(HTTPException, http_exception)",
        "begin_line": 79,
        "end_line": 104,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.03125,
            "pseudo_dstar_susp": 1.0,
            "pseudo_tarantula_susp": 0.005649717514124294,
            "pseudo_op2_susp": 1.0,
            "pseudo_barinel_susp": 0.005649717514124294
        }
    },
    {
        "name": "fastapi.security.utils.get_authorization_scheme_param#4",
        "src_path": "fastapi/security/utils.py",
        "class_name": "fastapi.security.utils",
        "signature": "fastapi.security.utils.get_authorization_scheme_param(authorization_header_value: str)",
        "snippet": "def get_authorization_scheme_param(authorization_header_value: str) -> Tuple[str, str]:\n    if not authorization_header_value:\n        return \"\", \"\"\n    scheme, _, param = authorization_header_value.partition(\" \")\n    return scheme, param",
        "begin_line": 4,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.0014792899408284023,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.background_tasks.tutorial001.write_notification#6",
        "src_path": "docs/src/background_tasks/tutorial001.py",
        "class_name": "docs.src.background_tasks.tutorial001",
        "signature": "docs.src.background_tasks.tutorial001.write_notification(email: str, message='')",
        "snippet": "def write_notification(email: str, message=\"\"):\n    with open(\"log.txt\", mode=\"w\") as email_file:\n        content = f\"notification for {email}: {message}\"\n        email_file.write(content)",
        "begin_line": 6,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.background_tasks.tutorial001.send_notification#13",
        "src_path": "docs/src/background_tasks/tutorial001.py",
        "class_name": "docs.src.background_tasks.tutorial001",
        "signature": "docs.src.background_tasks.tutorial001.send_notification(email: str, background_tasks: BackgroundTasks)",
        "snippet": "async def send_notification(email: str, background_tasks: BackgroundTasks):\n    background_tasks.add_task(write_notification, email, message=\"some notification\")\n    return {\"message\": \"Notification sent in the background\"}",
        "begin_line": 13,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.first_steps.tutorial001.root#7",
        "src_path": "docs/src/first_steps/tutorial001.py",
        "class_name": "docs.src.first_steps.tutorial001",
        "signature": "docs.src.first_steps.tutorial001.root()",
        "snippet": "async def root():\n    return {\"message\": \"Hello World\"}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.application_configuration.tutorial001.read_items#11",
        "src_path": "docs/src/application_configuration/tutorial001.py",
        "class_name": "docs.src.application_configuration.tutorial001",
        "signature": "docs.src.application_configuration.tutorial001.read_items()",
        "snippet": "async def read_items():\n    return [{\"name\": \"Foo\"}]",
        "begin_line": 11,
        "end_line": 12,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.path_operation_advanced_configuration.tutorial001.read_items#7",
        "src_path": "docs/src/path_operation_advanced_configuration/tutorial001.py",
        "class_name": "docs.src.path_operation_advanced_configuration.tutorial001",
        "signature": "docs.src.path_operation_advanced_configuration.tutorial001.read_items()",
        "snippet": "async def read_items():\n    return [{\"item_id\": \"Foo\"}]",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.exceptions.HTTPException.__init__#5",
        "src_path": "fastapi/exceptions.py",
        "class_name": "fastapi.exceptions.HTTPException",
        "signature": "fastapi.exceptions.HTTPException.__init__(self, status_code: int, detail: str=None, headers: dict=None)",
        "snippet": "    def __init__(\n        self, status_code: int, detail: str = None, headers: dict = None\n    ) -> None:\n        super().__init__(status_code=status_code, detail=detail)\n        self.headers = headers",
        "begin_line": 5,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.001455604075691412,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.body.tutorial001.create_item#16",
        "src_path": "docs/src/body/tutorial001.py",
        "class_name": "docs.src.body.tutorial001",
        "signature": "docs.src.body.tutorial001.create_item(item: Item)",
        "snippet": "async def create_item(item: Item):\n    return item",
        "begin_line": 16,
        "end_line": 17,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.0015698587127158557,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.response_model.tutorial003.create_user#22",
        "src_path": "docs/src/response_model/tutorial003.py",
        "class_name": "docs.src.response_model.tutorial003",
        "signature": "docs.src.response_model.tutorial003.create_user(*, user: UserIn)",
        "snippet": "async def create_user(*, user: UserIn):\n    return user",
        "begin_line": 22,
        "end_line": 23,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.security.tutorial003.fake_hash_password#25",
        "src_path": "docs/src/security/tutorial003.py",
        "class_name": "docs.src.security.tutorial003",
        "signature": "docs.src.security.tutorial003.fake_hash_password(password: str)",
        "snippet": "def fake_hash_password(password: str):\n    return \"fakehashed\" + password",
        "begin_line": 25,
        "end_line": 26,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.001893939393939394,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.security.tutorial003.get_user#43",
        "src_path": "docs/src/security/tutorial003.py",
        "class_name": "docs.src.security.tutorial003",
        "signature": "docs.src.security.tutorial003.get_user(db, username: str)",
        "snippet": "def get_user(db, username: str):\n    if username in db:\n        user_dict = db[username]\n        return UserInDB(**user_dict)",
        "begin_line": 43,
        "end_line": 46,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.001893939393939394,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.security.tutorial003.fake_decode_token#49",
        "src_path": "docs/src/security/tutorial003.py",
        "class_name": "docs.src.security.tutorial003",
        "signature": "docs.src.security.tutorial003.fake_decode_token(token)",
        "snippet": "def fake_decode_token(token):\n    # This doesn't provide any security at all\n    # Check the next version\n    user = get_user(fake_users_db, token)\n    return user",
        "begin_line": 49,
        "end_line": 53,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.0016835016835016834,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.security.tutorial003.get_current_user#56",
        "src_path": "docs/src/security/tutorial003.py",
        "class_name": "docs.src.security.tutorial003",
        "signature": "docs.src.security.tutorial003.get_current_user(token: str=Security(oauth2_scheme))",
        "snippet": "async def get_current_user(token: str = Security(oauth2_scheme)):\n    user = fake_decode_token(token)\n    if not user:\n        raise HTTPException(\n            status_code=400, detail=\"Invalid authentication credentials\"\n        )\n    return user",
        "begin_line": 56,
        "end_line": 62,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.security.tutorial003.get_current_active_user#65",
        "src_path": "docs/src/security/tutorial003.py",
        "class_name": "docs.src.security.tutorial003",
        "signature": "docs.src.security.tutorial003.get_current_active_user(current_user: User=Depends(get_current_user))",
        "snippet": "async def get_current_active_user(current_user: User = Depends(get_current_user)):\n    if current_user.disabled:\n        raise HTTPException(status_code=400, detail=\"Inactive user\")\n    return current_user",
        "begin_line": 65,
        "end_line": 68,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.security.tutorial003.login#72",
        "src_path": "docs/src/security/tutorial003.py",
        "class_name": "docs.src.security.tutorial003",
        "signature": "docs.src.security.tutorial003.login(form_data: OAuth2PasswordRequestForm=Depends())",
        "snippet": "async def login(form_data: OAuth2PasswordRequestForm = Depends()):\n    user_dict = fake_users_db.get(form_data.username)\n    if not user_dict:\n        raise HTTPException(status_code=400, detail=\"Incorrect username or password\")\n    user = UserInDB(**user_dict)\n    hashed_password = fake_hash_password(form_data.password)\n    if not hashed_password == user.hashed_password:\n        raise HTTPException(status_code=400, detail=\"Incorrect username or password\")\n\n    return {\"access_token\": user.username, \"token_type\": \"bearer\"}",
        "begin_line": 72,
        "end_line": 81,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.security.tutorial003.read_users_me#85",
        "src_path": "docs/src/security/tutorial003.py",
        "class_name": "docs.src.security.tutorial003",
        "signature": "docs.src.security.tutorial003.read_users_me(current_user: User=Depends(get_current_active_user))",
        "snippet": "async def read_users_me(current_user: User = Depends(get_current_active_user)):\n    return current_user",
        "begin_line": 85,
        "end_line": 86,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.security.http.HTTPBase.__call__#31",
        "src_path": "fastapi/security/http.py",
        "class_name": "fastapi.security.http.HTTPBase",
        "signature": "fastapi.security.http.HTTPBase.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> str:\n        authorization: str = request.headers.get(\"Authorization\")\n        scheme, credentials = get_authorization_scheme_param(authorization)\n        if not (authorization and scheme and credentials):\n            raise HTTPException(\n                status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n            )\n        return HTTPAuthorizationCredentials(scheme=scheme, credentials=credentials)",
        "begin_line": 31,
        "end_line": 38,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.security.http.HTTPBasic.__call__#47",
        "src_path": "fastapi/security/http.py",
        "class_name": "fastapi.security.http.HTTPBasic",
        "signature": "fastapi.security.http.HTTPBasic.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> str:\n        authorization: str = request.headers.get(\"Authorization\")\n        scheme, param = get_authorization_scheme_param(authorization)\n        # before implementing headers with 401 errors, wait for: https://github.com/encode/starlette/issues/295\n        # unauthorized_headers = {\"WWW-Authenticate\": \"Basic\"}\n        invalid_user_credentials_exc = HTTPException(\n            status_code=HTTP_403_FORBIDDEN, detail=\"Invalid authentication credentials\"\n        )\n        if not authorization or scheme.lower() != \"basic\":\n            raise HTTPException(\n                status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n            )\n        try:\n            data = b64decode(param).decode(\"ascii\")\n        except (ValueError, UnicodeDecodeError, binascii.Error):\n            raise invalid_user_credentials_exc\n        username, separator, password = data.partition(\":\")\n        if not (separator):\n            raise invalid_user_credentials_exc\n        return HTTPBasicCredentials(username=username, password=password)",
        "begin_line": 47,
        "end_line": 66,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.security.http.HTTPBearer.__call__#74",
        "src_path": "fastapi/security/http.py",
        "class_name": "fastapi.security.http.HTTPBearer",
        "signature": "fastapi.security.http.HTTPBearer.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> str:\n        authorization: str = request.headers.get(\"Authorization\")\n        scheme, credentials = get_authorization_scheme_param(authorization)\n        if not (authorization and scheme and credentials):\n            raise HTTPException(\n                status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n            )\n        if scheme.lower() != \"bearer\":\n            raise HTTPException(\n                status_code=HTTP_403_FORBIDDEN,\n                detail=\"Invalid authentication credentials\",\n            )\n        return HTTPAuthorizationCredentials(scheme=scheme, credentials=credentials)",
        "begin_line": 74,
        "end_line": 86,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.security.http.HTTPDigest.__call__#94",
        "src_path": "fastapi/security/http.py",
        "class_name": "fastapi.security.http.HTTPDigest",
        "signature": "fastapi.security.http.HTTPDigest.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> str:\n        authorization: str = request.headers.get(\"Authorization\")\n        scheme, credentials = get_authorization_scheme_param(authorization)\n        if not (authorization and scheme and credentials):\n            raise HTTPException(\n                status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n            )\n        if scheme.lower() != \"digest\":\n            raise HTTPException(\n                status_code=HTTP_403_FORBIDDEN,\n                detail=\"Invalid authentication credentials\",\n            )\n        return HTTPAuthorizationCredentials(scheme=scheme, credentials=credentials)",
        "begin_line": 94,
        "end_line": 106,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.extra_models.tutorial004.read_items#21",
        "src_path": "docs/src/extra_models/tutorial004.py",
        "class_name": "docs.src.extra_models.tutorial004",
        "signature": "docs.src.extra_models.tutorial004.read_items()",
        "snippet": "async def read_items():\n    return items",
        "begin_line": 21,
        "end_line": 22,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.dependencies.tutorial004.CommonQueryParams.__init__#10",
        "src_path": "docs/src/dependencies/tutorial004.py",
        "class_name": "docs.src.dependencies.tutorial004.CommonQueryParams",
        "signature": "docs.src.dependencies.tutorial004.CommonQueryParams.__init__(self, q: str=None, skip: int=0, limit: int=100)",
        "snippet": "    def __init__(self, q: str = None, skip: int = 0, limit: int = 100):\n        self.q = q\n        self.skip = skip\n        self.limit = limit",
        "begin_line": 10,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.0014792899408284023,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.dependencies.tutorial004.read_items#17",
        "src_path": "docs/src/dependencies/tutorial004.py",
        "class_name": "docs.src.dependencies.tutorial004",
        "signature": "docs.src.dependencies.tutorial004.read_items(commons: CommonQueryParams=Depends())",
        "snippet": "async def read_items(commons: CommonQueryParams = Depends()):\n    response = {}\n    if commons.q:\n        response.update({\"q\": commons.q})\n    items = fake_items_db[commons.skip : commons.skip + commons.limit]\n    response.update({\"items\": items})\n    return response",
        "begin_line": 17,
        "end_line": 23,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.0015151515151515152,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.path_operation_configuration.tutorial006.read_items#7",
        "src_path": "docs/src/path_operation_configuration/tutorial006.py",
        "class_name": "docs.src.path_operation_configuration.tutorial006",
        "signature": "docs.src.path_operation_configuration.tutorial006.read_items()",
        "snippet": "async def read_items():\n    return [{\"name\": \"Foo\", \"price\": 42}]",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.path_operation_configuration.tutorial006.read_users#12",
        "src_path": "docs/src/path_operation_configuration/tutorial006.py",
        "class_name": "docs.src.path_operation_configuration.tutorial006",
        "signature": "docs.src.path_operation_configuration.tutorial006.read_users()",
        "snippet": "async def read_users():\n    return [{\"username\": \"johndoe\"}]",
        "begin_line": 12,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.path_operation_configuration.tutorial006.read_elements#17",
        "src_path": "docs/src/path_operation_configuration/tutorial006.py",
        "class_name": "docs.src.path_operation_configuration.tutorial006",
        "signature": "docs.src.path_operation_configuration.tutorial006.read_elements()",
        "snippet": "async def read_elements():\n    return [{\"item_id\": \"Foo\"}]",
        "begin_line": 17,
        "end_line": 18,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.query_params.tutorial006.read_user_item#7",
        "src_path": "docs/src/query_params/tutorial006.py",
        "class_name": "docs.src.query_params.tutorial006",
        "signature": "docs.src.query_params.tutorial006.read_user_item(item_id: str, needy: str, skip: int=0, limit: int=None)",
        "snippet": "async def read_user_item(item_id: str, needy: str, skip: int = 0, limit: int = None):\n    item = {\"item_id\": item_id, \"needy\": needy, \"skip\": skip, \"limit\": limit}\n    return item",
        "begin_line": 7,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.cookie_params.tutorial001.read_items#7",
        "src_path": "docs/src/cookie_params/tutorial001.py",
        "class_name": "docs.src.cookie_params.tutorial001",
        "signature": "docs.src.cookie_params.tutorial001.read_items(*, ads_id: str=Cookie(None))",
        "snippet": "async def read_items(*, ads_id: str = Cookie(None)):\n    return {\"ads_id\": ads_id}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.0015698587127158557,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.background_tasks.tutorial002.write_log#6",
        "src_path": "docs/src/background_tasks/tutorial002.py",
        "class_name": "docs.src.background_tasks.tutorial002",
        "signature": "docs.src.background_tasks.tutorial002.write_log(message: str)",
        "snippet": "def write_log(message: str):\n    with open(\"log.txt\", mode=\"a\") as log:\n        log.write(message)",
        "begin_line": 6,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.background_tasks.tutorial002.get_query#11",
        "src_path": "docs/src/background_tasks/tutorial002.py",
        "class_name": "docs.src.background_tasks.tutorial002",
        "signature": "docs.src.background_tasks.tutorial002.get_query(background_tasks: BackgroundTasks, q: str=None)",
        "snippet": "def get_query(background_tasks: BackgroundTasks, q: str = None):\n    if q:\n        message = f\"found query: {q}\\n\"\n        background_tasks.add_task(write_log, message)\n    return q",
        "begin_line": 11,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "docs.src.background_tasks.tutorial002.send_notification#19",
        "src_path": "docs/src/background_tasks/tutorial002.py",
        "class_name": "docs.src.background_tasks.tutorial002",
        "signature": "docs.src.background_tasks.tutorial002.send_notification(email: str, background_tasks: BackgroundTasks, q: str=Depends(get_query))",
        "snippet": "async def send_notification(\n    email: str, background_tasks: BackgroundTasks, q: str = Depends(get_query)\n):\n    message = f\"message to {email}\\n\"\n    background_tasks.add_task(write_log, message)\n    return {\"message\": \"Message sent\"}",
        "begin_line": 19,
        "end_line": 24,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.encoders.jsonable_encoder#9",
        "src_path": "fastapi/encoders.py",
        "class_name": "fastapi.encoders",
        "signature": "fastapi.encoders.jsonable_encoder(obj: Any, include: Set[str]=None, exclude: Set[str]=set(), by_alias: bool=False, include_none: bool=True, custom_encoder: dict={}, sqlalchemy_safe: bool=True)",
        "snippet": "def jsonable_encoder(\n    obj: Any,\n    include: Set[str] = None,\n    exclude: Set[str] = set(),\n    by_alias: bool = False,\n    include_none: bool = True,\n    custom_encoder: dict = {},\n    sqlalchemy_safe: bool = True,\n) -> Any:\n    if isinstance(obj, BaseModel):\n        encoder = getattr(obj.Config, \"json_encoders\", custom_encoder)\n        return jsonable_encoder(\n            obj.dict(include=include, exclude=exclude, by_alias=by_alias),\n            include_none=include_none,\n            custom_encoder=encoder,\n            sqlalchemy_safe=sqlalchemy_safe,\n        )\n    if isinstance(obj, Enum):\n        return obj.value\n    if isinstance(obj, (str, int, float, type(None))):\n        return obj\n    if isinstance(obj, dict):\n        encoded_dict = {}\n        for key, value in obj.items():\n            if (\n                (\n                    not sqlalchemy_safe\n                    or (not isinstance(key, str))\n                    or (not key.startswith(\"_sa\"))\n                )\n                and (value is not None or include_none)\n                and ((include and key in include) or key not in exclude)\n            ):\n                encoded_key = jsonable_encoder(\n                    key,\n                    by_alias=by_alias,\n                    include_none=include_none,\n                    custom_encoder=custom_encoder,\n                    sqlalchemy_safe=sqlalchemy_safe,\n                )\n                encoded_value = jsonable_encoder(\n                    value,\n                    by_alias=by_alias,\n                    include_none=include_none,\n                    custom_encoder=custom_encoder,\n                    sqlalchemy_safe=sqlalchemy_safe,\n                )\n                encoded_dict[encoded_key] = encoded_value\n        return encoded_dict\n    if isinstance(obj, (list, set, frozenset, GeneratorType, tuple)):\n        encoded_list = []\n        for item in obj:\n            encoded_list.append(\n                jsonable_encoder(\n                    item,\n                    include=include,\n                    exclude=exclude,\n                    by_alias=by_alias,\n                    include_none=include_none,\n                    custom_encoder=custom_encoder,\n                    sqlalchemy_safe=sqlalchemy_safe,\n                )\n            )\n        return encoded_list\n    errors: List[Exception] = []\n    try:\n        if custom_encoder and type(obj) in custom_encoder:\n            encoder = custom_encoder[type(obj)]\n        else:\n            encoder = ENCODERS_BY_TYPE[type(obj)]\n        return encoder(obj)\n    except KeyError as e:\n        errors.append(e)\n        try:\n            data = dict(obj)\n        except Exception as e:\n            errors.append(e)\n            try:\n                data = vars(obj)\n            except Exception as e:\n                errors.append(e)\n                raise ValueError(errors)\n    return jsonable_encoder(\n        data,\n        by_alias=by_alias,\n        include_none=include_none,\n        custom_encoder=custom_encoder,\n        sqlalchemy_safe=sqlalchemy_safe,\n    )",
        "begin_line": 9,
        "end_line": 97,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.005434782608695652,
            "pseudo_dstar_susp": 0.005434782608695652,
            "pseudo_tarantula_susp": 0.005434782608695652,
            "pseudo_op2_susp": 0.005434782608695652,
            "pseudo_barinel_susp": 0.005434782608695652
        }
    },
    {
        "name": "fastapi.security.open_id_connect_url.OpenIdConnect.__call__#13",
        "src_path": "fastapi/security/open_id_connect_url.py",
        "class_name": "fastapi.security.open_id_connect_url.OpenIdConnect",
        "signature": "fastapi.security.open_id_connect_url.OpenIdConnect.__call__(self, request: Request)",
        "snippet": "    async def __call__(self, request: Request) -> str:\n        authorization: str = request.headers.get(\"Authorization\")\n        if not authorization:\n            raise HTTPException(\n                status_code=HTTP_403_FORBIDDEN, detail=\"Not authenticated\"\n            )\n        return authorization",
        "begin_line": 13,
        "end_line": 19,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0018181818181818182,
            "pseudo_dstar_susp": 0.0018181818181818182,
            "pseudo_tarantula_susp": 0.0018181818181818182,
            "pseudo_op2_susp": 0.002793296089385475,
            "pseudo_barinel_susp": 0.0018181818181818182
        }
    },
    {
        "name": "fastapi.utils.get_flat_models_from_routes#17",
        "src_path": "fastapi/utils.py",
        "class_name": "fastapi.utils",
        "signature": "fastapi.utils.get_flat_models_from_routes(routes: Sequence[Type[BaseRoute]])",
        "snippet": "def get_flat_models_from_routes(\n    routes: Sequence[Type[BaseRoute]]\n) -> Set[Type[BaseModel]]:\n    body_fields_from_routes: List[Field] = []\n    responses_from_routes: List[Field] = []\n    for route in routes:\n        if getattr(route, \"include_in_schema\", None) and isinstance(\n            route, routing.APIRoute\n        ):\n            if route.body_field:\n                assert isinstance(\n                    route.body_field, Field\n                ), \"A request body must be a Pydantic Field\"\n                body_fields_from_routes.append(route.body_field)\n            if route.response_field:\n                responses_from_routes.append(route.response_field)\n    flat_models = get_flat_models_from_fields(\n        body_fields_from_routes + responses_from_routes\n    )\n    return flat_models",
        "begin_line": 17,
        "end_line": 36,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.07142857142857142,
            "pseudo_dstar_susp": 0.06666666666666667,
            "pseudo_tarantula_susp": 0.07142857142857142,
            "pseudo_op2_susp": 0.06666666666666667,
            "pseudo_barinel_susp": 0.07142857142857142
        }
    },
    {
        "name": "fastapi.utils.get_model_definitions#39",
        "src_path": "fastapi/utils.py",
        "class_name": "fastapi.utils",
        "signature": "fastapi.utils.get_model_definitions(*, flat_models: Set[Type[BaseModel]], model_name_map: Dict[Type[BaseModel], str])",
        "snippet": "def get_model_definitions(\n    *, flat_models: Set[Type[BaseModel]], model_name_map: Dict[Type[BaseModel], str]\n) -> Dict[str, Any]:\n    definitions: Dict[str, Dict] = {}\n    for model in flat_models:\n        m_schema, m_definitions = model_process_schema(\n            model, model_name_map=model_name_map, ref_prefix=REF_PREFIX\n        )\n        definitions.update(m_definitions)\n        model_name = model_name_map[model]\n        definitions[model_name] = m_schema\n    return definitions",
        "begin_line": 39,
        "end_line": 50,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.034482758620689655,
            "pseudo_dstar_susp": 0.03333333333333333,
            "pseudo_tarantula_susp": 0.034482758620689655,
            "pseudo_op2_susp": 0.03333333333333333,
            "pseudo_barinel_susp": 0.034482758620689655
        }
    }
]