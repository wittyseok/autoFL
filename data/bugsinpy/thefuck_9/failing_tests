coverage run -m pytest tests/rules/test_git_push.py::test_get_new_command
============================= test session starts ==============================
platform linux -- Python 3.7.0, pytest-3.10.1, py-1.8.1, pluggy-0.13.1
benchmark: 3.2.3 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /home/user/BugsInPy/temp/projects/thefuck, inifile:
plugins: benchmark-3.2.3, mock-3.1.0, docker-pexpect-0.9
collected 1 item

tests/rules/test_git_push.py F                                           [100%]

=================================== FAILURES ===================================
_____________________________ test_get_new_command _____________________________

stderr = 'fatal: The current branch master has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin master\n\n'

    def test_get_new_command(stderr):
        assert get_new_command(Command('git push', stderr=stderr))\
            == "git push --set-upstream origin master"
>       assert get_new_command(Command('git push -u', stderr=stderr))\
            == "git push --set-upstream origin master"

tests/rules/test_git_push.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<decorator-gen-7>:2: in get_new_command
    ???
thefuck/specific/git.py:32: in git_support
    return fn(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = Command(script=git push -u, stdout=, stderr=fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master

)

    @git_support
    def get_new_command(command):
        # If --set-upstream or -u are passed, remove it and its argument. This is
        # because the remaining arguments are concatenated onto the command suggested
        # by git, which includes --set-upstream and its argument
        upstream_option_index = -1
        try:
            upstream_option_index = command.script_parts.index('--set-upstream')
        except ValueError:
            pass
        try:
            upstream_option_index = command.script_parts.index('-u')
        except ValueError:
            pass
        if upstream_option_index is not -1:
            command.script_parts.pop(upstream_option_index)
>           command.script_parts.pop(upstream_option_index)
E           IndexError: pop index out of range

thefuck/rules/git_push.py:27: IndexError
=========================== 1 failed in 0.08 seconds ===========================
