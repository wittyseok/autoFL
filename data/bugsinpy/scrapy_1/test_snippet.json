[
    {
        "name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware.setUp#13",
        "src_path": "tests/test_spidermiddleware_offsite.py",
        "class_name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware",
        "signature": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware.setUp(self)",
        "snippet": "    def setUp(self):\n        crawler = get_crawler(Spider)\n        self.spider = crawler._create_spider(**self._get_spiderargs())\n        self.mw = OffsiteMiddleware.from_crawler(crawler)\n        self.mw.spider_opened(self.spider)",
        "begin_line": 13,
        "end_line": 17,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware._get_spiderargs#19",
        "src_path": "tests/test_spidermiddleware_offsite.py",
        "class_name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware",
        "signature": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware._get_spiderargs(self)",
        "snippet": "    def _get_spiderargs(self):\n        return dict(name='foo', allowed_domains=['scrapytest.org', 'scrapy.org', 'scrapy.test.org'])",
        "begin_line": 19,
        "end_line": 20,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware.test_process_spider_output#22",
        "src_path": "tests/test_spidermiddleware_offsite.py",
        "class_name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware",
        "signature": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware.test_process_spider_output(self)",
        "snippet": "    def test_process_spider_output(self):\n        res = Response('http://scrapytest.org')\n\n        onsite_reqs = [Request('http://scrapytest.org/1'),\n                       Request('http://scrapy.org/1'),\n                       Request('http://sub.scrapy.org/1'),\n                       Request('http://offsite.tld/letmepass', dont_filter=True),\n                       Request('http://scrapy.test.org/')]\n        offsite_reqs = [Request('http://scrapy2.org'),\n                       Request('http://offsite.tld/'),\n                       Request('http://offsite.tld/scrapytest.org'),\n                       Request('http://offsite.tld/rogue.scrapytest.org'),\n                       Request('http://rogue.scrapytest.org.haha.com'),\n                       Request('http://roguescrapytest.org'),\n                       Request('http://test.org/'),\n                       Request('http://notscrapy.test.org/')]\n        reqs = onsite_reqs + offsite_reqs\n\n        out = list(self.mw.process_spider_output(res, reqs, self.spider))\n        self.assertEqual(out, onsite_reqs)",
        "begin_line": 22,
        "end_line": 41,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware2._get_spiderargs#46",
        "src_path": "tests/test_spidermiddleware_offsite.py",
        "class_name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware2",
        "signature": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware2._get_spiderargs(self)",
        "snippet": "    def _get_spiderargs(self):\n        return dict(name='foo', allowed_domains=None)",
        "begin_line": 46,
        "end_line": 47,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware2.test_process_spider_output#49",
        "src_path": "tests/test_spidermiddleware_offsite.py",
        "class_name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware2",
        "signature": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware2.test_process_spider_output(self)",
        "snippet": "    def test_process_spider_output(self):\n        res = Response('http://scrapytest.org')\n        reqs = [Request('http://a.com/b.html'), Request('http://b.com/1')]\n        out = list(self.mw.process_spider_output(res, reqs, self.spider))\n        self.assertEqual(out, reqs)",
        "begin_line": 49,
        "end_line": 53,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware3._get_spiderargs#58",
        "src_path": "tests/test_spidermiddleware_offsite.py",
        "class_name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware3",
        "signature": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware3._get_spiderargs(self)",
        "snippet": "    def _get_spiderargs(self):\n        return dict(name='foo')",
        "begin_line": 58,
        "end_line": 59,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware4._get_spiderargs#64",
        "src_path": "tests/test_spidermiddleware_offsite.py",
        "class_name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware4",
        "signature": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware4._get_spiderargs(self)",
        "snippet": "    def _get_spiderargs(self):\n        bad_hostname = urlparse('http:////scrapytest.org').hostname\n        return dict(name='foo', allowed_domains=['scrapytest.org', None, bad_hostname])",
        "begin_line": 64,
        "end_line": 66,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware4.test_process_spider_output#68",
        "src_path": "tests/test_spidermiddleware_offsite.py",
        "class_name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware4",
        "signature": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware4.test_process_spider_output(self)",
        "snippet": "    def test_process_spider_output(self):\n        res = Response('http://scrapytest.org')\n        reqs = [Request('http://scrapytest.org/1')]\n        out = list(self.mw.process_spider_output(res, reqs, self.spider))\n        self.assertEqual(out, reqs)",
        "begin_line": 68,
        "end_line": 72,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware5.test_get_host_regex#77",
        "src_path": "tests/test_spidermiddleware_offsite.py",
        "class_name": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware5",
        "signature": "tests.test_spidermiddleware_offsite.TestOffsiteMiddleware5.test_get_host_regex(self)",
        "snippet": "    def test_get_host_regex(self):\n        self.spider.allowed_domains = ['http://scrapytest.org', 'scrapy.org', 'scrapy.test.org']\n        with warnings.catch_warnings(record=True) as w:\n            warnings.simplefilter(\"always\")\n            self.mw.get_host_regex(self.spider)\n            assert issubclass(w[-1].category, URLWarning)",
        "begin_line": 77,
        "end_line": 82,
        "comment": "",
        "is_bug": false
    }
]