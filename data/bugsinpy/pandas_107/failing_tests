coverage run -m pytest pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.16.0
collected 28 items

pandas/tests/frame/test_combine_concat.py F.FFFFFFFFFFFFFFFFFFFFFFFFFF   [100%]

=================================== FAILURES ===================================
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[None-2019-07-19 07:04:57+0100] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f282285ad90>
tz_naive_fixture = None, timestamp = '2019-07-19 07:04:57+0100'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, pytz.FixedOffset(60)]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive['UTC'-2019-07-19 07:04:57+0100] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f2822912f10>
tz_naive_fixture = 'UTC', timestamp = '2019-07-19 07:04:57+0100'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, UTC]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive['UTC'-2019-07-19 07:04:57] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28225f46d0>
tz_naive_fixture = 'UTC', timestamp = '2019-07-19 07:04:57'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, UTC]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive['US/Eastern'-2019-07-19 07:04:57+0100] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28227ce430>
tz_naive_fixture = 'US/Eastern', timestamp = '2019-07-19 07:04:57+0100'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, US/Eastern]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive['US/Eastern'-2019-07-19 07:04:57] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28227b52b0>
tz_naive_fixture = 'US/Eastern', timestamp = '2019-07-19 07:04:57'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, US/Eastern]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive['Asia/Tokyo'-2019-07-19 07:04:57+0100] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28225fd1f0>
tz_naive_fixture = 'Asia/Tokyo', timestamp = '2019-07-19 07:04:57+0100'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, Asia/Tokyo]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive['Asia/Tokyo'-2019-07-19 07:04:57] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f2822869370>
tz_naive_fixture = 'Asia/Tokyo', timestamp = '2019-07-19 07:04:57'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, Asia/Tokyo]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive['dateutil/US/Pacific'-2019-07-19 07:04:57+0100] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28224500d0>
tz_naive_fixture = 'dateutil/US/Pacific', timestamp = '2019-07-19 07:04:57+0100'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive['dateutil/US/Pacific'-2019-07-19 07:04:57] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28227b50d0>
tz_naive_fixture = 'dateutil/US/Pacific', timestamp = '2019-07-19 07:04:57'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive['dateutil/Asia/Singapore'-2019-07-19 07:04:57+0100] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28226aa820>
tz_naive_fixture = 'dateutil/Asia/Singapore'
timestamp = '2019-07-19 07:04:57+0100'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive['dateutil/Asia/Singapore'-2019-07-19 07:04:57] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28228693a0>
tz_naive_fixture = 'dateutil/Asia/Singapore', timestamp = '2019-07-19 07:04:57'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[tzutc()-2019-07-19 07:04:57+0100] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28227ce790>
tz_naive_fixture = tzutc(), timestamp = '2019-07-19 07:04:57+0100'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, tzutc()]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[tzutc()-2019-07-19 07:04:57] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f2822686d90>
tz_naive_fixture = tzutc(), timestamp = '2019-07-19 07:04:57'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, tzutc()]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[tzlocal()-2019-07-19 07:04:57+0100] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f2822341d00>
tz_naive_fixture = tzlocal(), timestamp = '2019-07-19 07:04:57+0100'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, tzlocal()]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[tzlocal()-2019-07-19 07:04:57] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28223eb1c0>
tz_naive_fixture = tzlocal(), timestamp = '2019-07-19 07:04:57'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, tzlocal()]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[pytz.FixedOffset(300)-2019-07-19 07:04:57+0100] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28227b5c40>
tz_naive_fixture = pytz.FixedOffset(300), timestamp = '2019-07-19 07:04:57+0100'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, pytz.FixedOffset(300)]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[pytz.FixedOffset(300)-2019-07-19 07:04:57] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f2822338b80>
tz_naive_fixture = pytz.FixedOffset(300), timestamp = '2019-07-19 07:04:57'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, pytz.FixedOffset(300)]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[<UTC>-2019-07-19 07:04:57+0100] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f282233d970>
tz_naive_fixture = <UTC>, timestamp = '2019-07-19 07:04:57+0100'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, UTC]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[<UTC>-2019-07-19 07:04:57] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f2822639100>
tz_naive_fixture = <UTC>, timestamp = '2019-07-19 07:04:57'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, UTC]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[pytz.FixedOffset(-300)-2019-07-19 07:04:57+0100] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28226e5160>
tz_naive_fixture = pytz.FixedOffset(-300)
timestamp = '2019-07-19 07:04:57+0100'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, pytz.FixedOffset(-300)]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[pytz.FixedOffset(-300)-2019-07-19 07:04:57] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28223ba100>
tz_naive_fixture = pytz.FixedOffset(-300), timestamp = '2019-07-19 07:04:57'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, pytz.FixedOffset(-300)]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[datetime.timezone.utc-2019-07-19 07:04:57+0100] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f2822450ca0>
tz_naive_fixture = datetime.timezone.utc, timestamp = '2019-07-19 07:04:57+0100'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, UTC]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[datetime.timezone.utc-2019-07-19 07:04:57] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f282244f040>
tz_naive_fixture = datetime.timezone.utc, timestamp = '2019-07-19 07:04:57'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, UTC]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[datetime.timezone(datetime.timedelta(seconds=3600))-2019-07-19 07:04:57+0100] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28223418b0>
tz_naive_fixture = datetime.timezone(datetime.timedelta(seconds=3600))
timestamp = '2019-07-19 07:04:57+0100'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, UTC+01:00]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[datetime.timezone(datetime.timedelta(seconds=3600))-2019-07-19 07:04:57] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28226d93d0>
tz_naive_fixture = datetime.timezone(datetime.timedelta(seconds=3600))
timestamp = '2019-07-19 07:04:57'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, UTC+01:00]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-2019-07-19 07:04:57+0100] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f28225fd5e0>
tz_naive_fixture = datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')
timestamp = '2019-07-19 07:04:57+0100'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, foo]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
_ TestDataFrameConcatCommon.test_append_timestamps_aware_or_naive[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-2019-07-19 07:04:57] _

self = <pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon object at 0x7f2822643490>
tz_naive_fixture = datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')
timestamp = '2019-07-19 07:04:57'

    @pytest.mark.parametrize(
        "timestamp", ["2019-07-19 07:04:57+0100", "2019-07-19 07:04:57"]
    )
    def test_append_timestamps_aware_or_naive(self, tz_naive_fixture, timestamp):
        # GH 30238
        tz = tz_naive_fixture
        df = pd.DataFrame([pd.Timestamp(timestamp, tz=tz)])
        result = df.append(df.iloc[0]).iloc[-1]
        expected = pd.Series(pd.Timestamp(timestamp, tz=tz), name=0)
>       tm.assert_series_equal(result, expected)
E       AssertionError: Attributes of Series are different
E       
E       Attribute "dtype" are different
E       [left]:  object
E       [right]: datetime64[ns, foo]

pandas/tests/frame/test_combine_concat.py:300: AssertionError
=========================== short test summary info ============================
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[None-2019-07-19 07:04:57+0100]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive['UTC'-2019-07-19 07:04:57+0100]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive['UTC'-2019-07-19 07:04:57]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive['US/Eastern'-2019-07-19 07:04:57+0100]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive['US/Eastern'-2019-07-19 07:04:57]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive['Asia/Tokyo'-2019-07-19 07:04:57+0100]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive['Asia/Tokyo'-2019-07-19 07:04:57]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive['dateutil/US/Pacific'-2019-07-19 07:04:57+0100]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive['dateutil/US/Pacific'-2019-07-19 07:04:57]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive['dateutil/Asia/Singapore'-2019-07-19 07:04:57+0100]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive['dateutil/Asia/Singapore'-2019-07-19 07:04:57]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[tzutc()-2019-07-19 07:04:57+0100]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[tzutc()-2019-07-19 07:04:57]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[tzlocal()-2019-07-19 07:04:57+0100]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[tzlocal()-2019-07-19 07:04:57]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[pytz.FixedOffset(300)-2019-07-19 07:04:57+0100]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[pytz.FixedOffset(300)-2019-07-19 07:04:57]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[<UTC>-2019-07-19 07:04:57+0100]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[<UTC>-2019-07-19 07:04:57]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[pytz.FixedOffset(-300)-2019-07-19 07:04:57+0100]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[pytz.FixedOffset(-300)-2019-07-19 07:04:57]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[datetime.timezone.utc-2019-07-19 07:04:57+0100]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[datetime.timezone.utc-2019-07-19 07:04:57]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[datetime.timezone(datetime.timedelta(seconds=3600))-2019-07-19 07:04:57+0100]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[datetime.timezone(datetime.timedelta(seconds=3600))-2019-07-19 07:04:57]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-2019-07-19 07:04:57+0100]
FAILED pandas/tests/frame/test_combine_concat.py::TestDataFrameConcatCommon::test_append_timestamps_aware_or_naive[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-2019-07-19 07:04:57]
========================= 27 failed, 1 passed in 2.01s =========================
