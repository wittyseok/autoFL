coverage run -m pytest pandas/tests/arithmetic/test_period.py::TestPeriodIndexComparisons::test_eq_integer_disallowed
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.16.0
collected 5 items

pandas/tests/arithmetic/test_period.py F....                             [100%]

=================================== FAILURES ===================================
_________ TestPeriodIndexComparisons.test_eq_integer_disallowed[2017] __________

self = <pandas.tests.arithmetic.test_period.TestPeriodIndexComparisons object at 0x7fc4b45cbe20>
other = 2017

    @pytest.mark.parametrize(
        "other",
        [
            2017,
            [2017, 2017, 2017],
            np.array([2017, 2017, 2017]),
            np.array([2017, 2017, 2017], dtype=object),
            pd.Index([2017, 2017, 2017]),
        ],
    )
    def test_eq_integer_disallowed(self, other):
        # match Period semantics by not treating integers as Periods
    
        idx = PeriodIndex(["2017", "2017", "2018"], freq="D")
        expected = np.array([False, False, False])
        result = idx == other
    
>       tm.assert_numpy_array_equal(result, expected)

pandas/tests/arithmetic/test_period.py:155: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

left = array([ True,  True, False]), right = array([False, False, False])
err_msg = None

    def _raise(left, right, err_msg):
        if err_msg is None:
            if left.shape != right.shape:
                raise_assert_detail(
                    obj, f"{obj} shapes are different", left.shape, right.shape,
                )
    
            diff = 0
            for l, r in zip(left, right):
                # count up differences
                if not array_equivalent(l, r, strict_nan=strict_nan):
                    diff += 1
    
            diff = diff * 100.0 / left.size
            msg = f"{obj} values are different ({np.round(diff, 5)} %)"
>           raise_assert_detail(obj, msg, left, right)
E           AssertionError: numpy array are different
E           
E           numpy array values are different (66.66667 %)
E           [left]:  [True, True, False]
E           [right]: [False, False, False]

pandas/_testing.py:979: AssertionError
=========================== short test summary info ============================
FAILED pandas/tests/arithmetic/test_period.py::TestPeriodIndexComparisons::test_eq_integer_disallowed[2017]
========================= 1 failed, 4 passed in 0.46s ==========================
