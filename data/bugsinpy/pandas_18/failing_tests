coverage run -m pytest pandas/tests/window/test_base_indexer.py::test_rolling_forward_skewness
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.2, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.15.1
collected 2 items

pandas/tests/window/test_base_indexer.py FF                              [100%]

=================================== FAILURES ===================================
____________________ test_rolling_forward_skewness[Series] _____________________

constructor = <class 'pandas.core.series.Series'>

    @pytest.mark.parametrize("constructor", [Series, DataFrame])
    def test_rolling_forward_skewness(constructor):
        values = np.arange(10)
        values[5] = 100.0
    
        indexer = FixedForwardWindowIndexer(window_size=5)
        rolling = constructor(values).rolling(window=indexer, min_periods=3)
>       result = rolling.skew()

pandas/tests/window/test_base_indexer.py:196: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/core/window/rolling.py:2021: in skew
    return super().skew(**kwargs)
pandas/core/window/rolling.py:1485: in skew
    return self._apply(
pandas/core/window/rolling.py:447: in _apply
    window_indexer = self._get_window_indexer(window, name)
pandas/core/window/rolling.py:401: in _get_window_indexer
    validate_baseindexer_support(func_name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

func_name = 'skew'

    def validate_baseindexer_support(func_name: Optional[str]) -> None:
        # GH 32865: These functions work correctly with a BaseIndexer subclass
        BASEINDEXER_WHITELIST = {
            "count",
            "min",
            "max",
            "mean",
            "sum",
            "median",
            "std",
            "var",
            "kurt",
            "quantile",
        }
        if isinstance(func_name, str) and func_name not in BASEINDEXER_WHITELIST:
>           raise NotImplementedError(
                f"{func_name} is not supported with using a BaseIndexer "
                f"subclasses. You can use .apply() with {func_name}."
            )
E           NotImplementedError: skew is not supported with using a BaseIndexer subclasses. You can use .apply() with skew.

pandas/core/window/common.py:344: NotImplementedError
___________________ test_rolling_forward_skewness[DataFrame] ___________________

constructor = <class 'pandas.core.frame.DataFrame'>

    @pytest.mark.parametrize("constructor", [Series, DataFrame])
    def test_rolling_forward_skewness(constructor):
        values = np.arange(10)
        values[5] = 100.0
    
        indexer = FixedForwardWindowIndexer(window_size=5)
        rolling = constructor(values).rolling(window=indexer, min_periods=3)
>       result = rolling.skew()

pandas/tests/window/test_base_indexer.py:196: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/core/window/rolling.py:2021: in skew
    return super().skew(**kwargs)
pandas/core/window/rolling.py:1485: in skew
    return self._apply(
pandas/core/window/rolling.py:447: in _apply
    window_indexer = self._get_window_indexer(window, name)
pandas/core/window/rolling.py:401: in _get_window_indexer
    validate_baseindexer_support(func_name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

func_name = 'skew'

    def validate_baseindexer_support(func_name: Optional[str]) -> None:
        # GH 32865: These functions work correctly with a BaseIndexer subclass
        BASEINDEXER_WHITELIST = {
            "count",
            "min",
            "max",
            "mean",
            "sum",
            "median",
            "std",
            "var",
            "kurt",
            "quantile",
        }
        if isinstance(func_name, str) and func_name not in BASEINDEXER_WHITELIST:
>           raise NotImplementedError(
                f"{func_name} is not supported with using a BaseIndexer "
                f"subclasses. You can use .apply() with {func_name}."
            )
E           NotImplementedError: skew is not supported with using a BaseIndexer subclasses. You can use .apply() with skew.

pandas/core/window/common.py:344: NotImplementedError
=========================== short test summary info ============================
FAILED pandas/tests/window/test_base_indexer.py::test_rolling_forward_skewness[Series]
FAILED pandas/tests/window/test_base_indexer.py::test_rolling_forward_skewness[DataFrame]
============================== 2 failed in 0.54s ===============================
