coverage run -m pytest pandas/tests/groupby/test_apply.py::test_apply_datetime_issue
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.16.0
collected 3 items

pandas/tests/groupby/test_apply.py F..                                   [100%]

=================================== FAILURES ===================================
_______________ test_apply_datetime_issue[group_column_dtlike0] ________________

group_column_dtlike = datetime.datetime(2023, 9, 2, 13, 0, 38, 883137)

    @pytest.mark.parametrize(
        "group_column_dtlike",
        [datetime.today(), datetime.today().date(), datetime.today().time()],
    )
    def test_apply_datetime_issue(group_column_dtlike):
        # GH-28247
        # groupby-apply throws an error if one of the columns in the DataFrame
        #   is a datetime object and the column labels are different from
        #   standard int values in range(len(num_columns))
    
        df = pd.DataFrame({"a": ["foo"], "b": [group_column_dtlike]})
>       result = df.groupby("a").apply(lambda x: pd.Series(["spam"], index=[42]))

pandas/tests/groupby/test_apply.py:673: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/core/groupby/groupby.py:727: in apply
    result = self._python_apply_general(f)
pandas/core/groupby/groupby.py:745: in _python_apply_general
    return self._wrap_applied_output(
pandas/core/groupby/generic.py:516: in _wrap_applied_output
    result = _recast_datetimelike_result(result)
pandas/core/groupby/generic.py:1915: in _recast_datetimelike_result
    obj_cols = [
pandas/core/groupby/generic.py:1916: in <listcomp>
    idx for idx in range(len(result.columns)) if is_object_dtype(result.dtypes[idx])
pandas/core/series.py:1081: in __getitem__
    result = self.index.get_value(self, key)
pandas/core/indexes/base.py:4658: in get_value
    return self._engine.get_value(s, k, tz=getattr(series.dtype, "tz", None))
pandas/_libs/index.pyx:77: in pandas._libs.index.IndexEngine.get_value
    cpdef get_value(self, ndarray arr, object key, object tz=None):
pandas/_libs/index.pyx:85: in pandas._libs.index.IndexEngine.get_value
    loc = self.get_loc(key)
pandas/_libs/index.pyx:128: in pandas._libs.index.IndexEngine.get_loc
    return self.mapping.get_item(val)
pandas/_libs/hashtable_class_helper.pxi:992: in pandas._libs.hashtable.Int64HashTable.get_item
    cpdef get_item(self, int64_t val):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise KeyError(val)
E   KeyError: 0

pandas/_libs/hashtable_class_helper.pxi:998: KeyError
=========================== short test summary info ============================
FAILED pandas/tests/groupby/test_apply.py::test_apply_datetime_issue[group_column_dtlike0]
========================= 1 failed, 2 passed in 0.81s ==========================
