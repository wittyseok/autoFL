[
    {
        "name": "tests.test_modules_same_name_body.app.b.compute#7",
        "src_path": "tests/test_modules_same_name_body/app/b.py",
        "class_name": "tests.test_modules_same_name_body.app.b",
        "signature": "tests.test_modules_same_name_body.app.b.compute(a: int=Body(...), b: str=Body(...))",
        "snippet": "def compute(a: int = Body(...), b: str = Body(...)):\n    return {\"a\": a, \"b\": b}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.get_valid#17",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.get_valid()",
        "snippet": "def get_valid():\n    return Item(aliased_name=\"valid\", price=1.0)",
        "begin_line": 17,
        "end_line": 18,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.get_coerce#22",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.get_coerce()",
        "snippet": "def get_coerce():\n    return Item(aliased_name=\"coerce\", price=\"1.0\")",
        "begin_line": 22,
        "end_line": 23,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.get_validlist#27",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.get_validlist()",
        "snippet": "def get_validlist():\n    return [\n        Item(aliased_name=\"foo\"),\n        Item(aliased_name=\"bar\", price=1.0),\n        Item(aliased_name=\"baz\", price=2.0, owner_ids=[1, 2, 3]),\n    ]",
        "begin_line": 27,
        "end_line": 32,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.get_validdict#36",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.get_validdict()",
        "snippet": "def get_validdict():\n    return {\n        \"k1\": Item(aliased_name=\"foo\"),\n        \"k2\": Item(aliased_name=\"bar\", price=1.0),\n        \"k3\": Item(aliased_name=\"baz\", price=2.0, owner_ids=[1, 2, 3]),\n    }",
        "begin_line": 36,
        "end_line": 41,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.get_valid_exclude_unset#47",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.get_valid_exclude_unset()",
        "snippet": "def get_valid_exclude_unset():\n    return Item(aliased_name=\"valid\", price=1.0)",
        "begin_line": 47,
        "end_line": 48,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.get_coerce_exclude_unset#56",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.get_coerce_exclude_unset()",
        "snippet": "def get_coerce_exclude_unset():\n    return Item(aliased_name=\"coerce\", price=\"1.0\")",
        "begin_line": 56,
        "end_line": 57,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.get_validlist_exclude_unset#65",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.get_validlist_exclude_unset()",
        "snippet": "def get_validlist_exclude_unset():\n    return [\n        Item(aliased_name=\"foo\"),\n        Item(aliased_name=\"bar\", price=1.0),\n        Item(aliased_name=\"baz\", price=2.0, owner_ids=[1, 2, 3]),\n    ]",
        "begin_line": 65,
        "end_line": 70,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.get_validdict_exclude_unset#78",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.get_validdict_exclude_unset()",
        "snippet": "def get_validdict_exclude_unset():\n    return {\n        \"k1\": Item(aliased_name=\"foo\"),\n        \"k2\": Item(aliased_name=\"bar\", price=1.0),\n        \"k3\": Item(aliased_name=\"baz\", price=2.0, owner_ids=[1, 2, 3]),\n    }",
        "begin_line": 78,
        "end_line": 83,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.test_valid#89",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.test_valid()",
        "snippet": "def test_valid():\n    response = client.get(\"/items/valid\")\n    response.raise_for_status()\n    assert response.json() == {\"aliased_name\": \"valid\", \"price\": 1.0, \"owner_ids\": None}",
        "begin_line": 89,
        "end_line": 92,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.test_coerce#95",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.test_coerce()",
        "snippet": "def test_coerce():\n    response = client.get(\"/items/coerce\")\n    response.raise_for_status()\n    assert response.json() == {\n        \"aliased_name\": \"coerce\",\n        \"price\": 1.0,\n        \"owner_ids\": None,\n    }",
        "begin_line": 95,
        "end_line": 102,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.test_validlist#105",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.test_validlist()",
        "snippet": "def test_validlist():\n    response = client.get(\"/items/validlist\")\n    response.raise_for_status()\n    assert response.json() == [\n        {\"aliased_name\": \"foo\", \"price\": None, \"owner_ids\": None},\n        {\"aliased_name\": \"bar\", \"price\": 1.0, \"owner_ids\": None},\n        {\"aliased_name\": \"baz\", \"price\": 2.0, \"owner_ids\": [1, 2, 3]},\n    ]",
        "begin_line": 105,
        "end_line": 112,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.test_validdict#115",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.test_validdict()",
        "snippet": "def test_validdict():\n    response = client.get(\"/items/validdict\")\n    response.raise_for_status()\n    assert response.json() == {\n        \"k1\": {\"aliased_name\": \"foo\", \"price\": None, \"owner_ids\": None},\n        \"k2\": {\"aliased_name\": \"bar\", \"price\": 1.0, \"owner_ids\": None},\n        \"k3\": {\"aliased_name\": \"baz\", \"price\": 2.0, \"owner_ids\": [1, 2, 3]},\n    }",
        "begin_line": 115,
        "end_line": 122,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.test_valid_exclude_unset#125",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.test_valid_exclude_unset()",
        "snippet": "def test_valid_exclude_unset():\n    response = client.get(\"/items/valid-exclude-unset\")\n    response.raise_for_status()\n    assert response.json() == {\"aliased_name\": \"valid\", \"price\": 1.0}",
        "begin_line": 125,
        "end_line": 128,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.test_coerce_exclude_unset#131",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.test_coerce_exclude_unset()",
        "snippet": "def test_coerce_exclude_unset():\n    response = client.get(\"/items/coerce-exclude-unset\")\n    response.raise_for_status()\n    assert response.json() == {\"aliased_name\": \"coerce\", \"price\": 1.0}",
        "begin_line": 131,
        "end_line": 134,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.test_validlist_exclude_unset#137",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.test_validlist_exclude_unset()",
        "snippet": "def test_validlist_exclude_unset():\n    response = client.get(\"/items/validlist-exclude-unset\")\n    response.raise_for_status()\n    assert response.json() == [\n        {\"aliased_name\": \"foo\"},\n        {\"aliased_name\": \"bar\", \"price\": 1.0},\n        {\"aliased_name\": \"baz\", \"price\": 2.0, \"owner_ids\": [1, 2, 3]},\n    ]",
        "begin_line": 137,
        "end_line": 144,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_serialize_response_model.test_validdict_exclude_unset#147",
        "src_path": "tests/test_serialize_response_model.py",
        "class_name": "tests.test_serialize_response_model",
        "signature": "tests.test_serialize_response_model.test_validdict_exclude_unset()",
        "snippet": "def test_validdict_exclude_unset():\n    response = client.get(\"/items/validdict-exclude-unset\")\n    response.raise_for_status()\n    assert response.json() == {\n        \"k1\": {\"aliased_name\": \"foo\"},\n        \"k2\": {\"aliased_name\": \"bar\", \"price\": 1.0},\n        \"k3\": {\"aliased_name\": \"baz\", \"price\": 2.0, \"owner_ids\": [1, 2, 3]},\n    }",
        "begin_line": 147,
        "end_line": 154,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.non_operation#7",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.non_operation()",
        "snippet": "def non_operation():\n    return {\"message\": \"Hello World\"}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.non_decorated_route#11",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.non_decorated_route()",
        "snippet": "def non_decorated_route():\n    return {\"message\": \"Hello World\"}",
        "begin_line": 11,
        "end_line": 12,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_text#19",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_text()",
        "snippet": "def get_text():\n    return \"Hello World\"",
        "begin_line": 19,
        "end_line": 20,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_id#24",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_id(item_id)",
        "snippet": "def get_id(item_id):\n    return item_id",
        "begin_line": 24,
        "end_line": 25,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_str_id#29",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_str_id(item_id: str)",
        "snippet": "def get_str_id(item_id: str):\n    return item_id",
        "begin_line": 29,
        "end_line": 30,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_int_id#34",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_int_id(item_id: int)",
        "snippet": "def get_int_id(item_id: int):\n    return item_id",
        "begin_line": 34,
        "end_line": 35,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_float_id#39",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_float_id(item_id: float)",
        "snippet": "def get_float_id(item_id: float):\n    return item_id",
        "begin_line": 39,
        "end_line": 40,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_bool_id#44",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_bool_id(item_id: bool)",
        "snippet": "def get_bool_id(item_id: bool):\n    return item_id",
        "begin_line": 44,
        "end_line": 45,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_id#49",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_id(item_id: str=Path(None))",
        "snippet": "def get_path_param_id(item_id: str = Path(None)):\n    return item_id",
        "begin_line": 49,
        "end_line": 50,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_required_id#54",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_required_id(item_id: str=Path(...))",
        "snippet": "def get_path_param_required_id(item_id: str = Path(...)):\n    return item_id",
        "begin_line": 54,
        "end_line": 55,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_min_length#59",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_min_length(item_id: str=Path(..., min_length=3))",
        "snippet": "def get_path_param_min_length(item_id: str = Path(..., min_length=3)):\n    return item_id",
        "begin_line": 59,
        "end_line": 60,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_max_length#64",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_max_length(item_id: str=Path(..., max_length=3))",
        "snippet": "def get_path_param_max_length(item_id: str = Path(..., max_length=3)):\n    return item_id",
        "begin_line": 64,
        "end_line": 65,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_min_max_length#69",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_min_max_length(item_id: str=Path(..., max_length=3, min_length=2))",
        "snippet": "def get_path_param_min_max_length(item_id: str = Path(..., max_length=3, min_length=2)):\n    return item_id",
        "begin_line": 69,
        "end_line": 70,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_gt#74",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_gt(item_id: float=Path(..., gt=3))",
        "snippet": "def get_path_param_gt(item_id: float = Path(..., gt=3)):\n    return item_id",
        "begin_line": 74,
        "end_line": 75,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_gt0#79",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_gt0(item_id: float=Path(..., gt=0))",
        "snippet": "def get_path_param_gt0(item_id: float = Path(..., gt=0)):\n    return item_id",
        "begin_line": 79,
        "end_line": 80,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_ge#84",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_ge(item_id: float=Path(..., ge=3))",
        "snippet": "def get_path_param_ge(item_id: float = Path(..., ge=3)):\n    return item_id",
        "begin_line": 84,
        "end_line": 85,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_lt#89",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_lt(item_id: float=Path(..., lt=3))",
        "snippet": "def get_path_param_lt(item_id: float = Path(..., lt=3)):\n    return item_id",
        "begin_line": 89,
        "end_line": 90,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_lt0#94",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_lt0(item_id: float=Path(..., lt=0))",
        "snippet": "def get_path_param_lt0(item_id: float = Path(..., lt=0)):\n    return item_id",
        "begin_line": 94,
        "end_line": 95,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_le#99",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_le(item_id: float=Path(..., le=3))",
        "snippet": "def get_path_param_le(item_id: float = Path(..., le=3)):\n    return item_id",
        "begin_line": 99,
        "end_line": 100,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_lt_gt#104",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_lt_gt(item_id: float=Path(..., lt=3, gt=1))",
        "snippet": "def get_path_param_lt_gt(item_id: float = Path(..., lt=3, gt=1)):\n    return item_id",
        "begin_line": 104,
        "end_line": 105,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_le_ge#109",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_le_ge(item_id: float=Path(..., le=3, ge=1))",
        "snippet": "def get_path_param_le_ge(item_id: float = Path(..., le=3, ge=1)):\n    return item_id",
        "begin_line": 109,
        "end_line": 110,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_lt_int#114",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_lt_int(item_id: int=Path(..., lt=3))",
        "snippet": "def get_path_param_lt_int(item_id: int = Path(..., lt=3)):\n    return item_id",
        "begin_line": 114,
        "end_line": 115,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_gt_int#119",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_gt_int(item_id: int=Path(..., gt=3))",
        "snippet": "def get_path_param_gt_int(item_id: int = Path(..., gt=3)):\n    return item_id",
        "begin_line": 119,
        "end_line": 120,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_le_int#124",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_le_int(item_id: int=Path(..., le=3))",
        "snippet": "def get_path_param_le_int(item_id: int = Path(..., le=3)):\n    return item_id",
        "begin_line": 124,
        "end_line": 125,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_ge_int#129",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_ge_int(item_id: int=Path(..., ge=3))",
        "snippet": "def get_path_param_ge_int(item_id: int = Path(..., ge=3)):\n    return item_id",
        "begin_line": 129,
        "end_line": 130,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_lt_gt_int#134",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_lt_gt_int(item_id: int=Path(..., lt=3, gt=1))",
        "snippet": "def get_path_param_lt_gt_int(item_id: int = Path(..., lt=3, gt=1)):\n    return item_id",
        "begin_line": 134,
        "end_line": 135,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_path_param_le_ge_int#139",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_path_param_le_ge_int(item_id: int=Path(..., le=3, ge=1))",
        "snippet": "def get_path_param_le_ge_int(item_id: int = Path(..., le=3, ge=1)):\n    return item_id",
        "begin_line": 139,
        "end_line": 140,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_query#144",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_query(query)",
        "snippet": "def get_query(query):\n    return f\"foo bar {query}\"",
        "begin_line": 144,
        "end_line": 145,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_query_optional#149",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_query_optional(query=None)",
        "snippet": "def get_query_optional(query=None):\n    if query is None:\n        return \"foo bar\"\n    return f\"foo bar {query}\"",
        "begin_line": 149,
        "end_line": 152,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_query_type#156",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_query_type(query: int)",
        "snippet": "def get_query_type(query: int):\n    return f\"foo bar {query}\"",
        "begin_line": 156,
        "end_line": 157,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_query_type_optional#161",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_query_type_optional(query: int=None)",
        "snippet": "def get_query_type_optional(query: int = None):\n    if query is None:\n        return \"foo bar\"\n    return f\"foo bar {query}\"",
        "begin_line": 161,
        "end_line": 164,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_query_type_optional#168",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_query_type_optional(query: int=10)",
        "snippet": "def get_query_type_optional(query: int = 10):\n    return f\"foo bar {query}\"",
        "begin_line": 168,
        "end_line": 169,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_query_param#173",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_query_param(query=Query(None))",
        "snippet": "def get_query_param(query=Query(None)):\n    if query is None:\n        return \"foo bar\"\n    return f\"foo bar {query}\"",
        "begin_line": 173,
        "end_line": 176,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_query_param_required#180",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_query_param_required(query=Query(...))",
        "snippet": "def get_query_param_required(query=Query(...)):\n    return f\"foo bar {query}\"",
        "begin_line": 180,
        "end_line": 181,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.main.get_query_param_required_type#185",
        "src_path": "tests/main.py",
        "class_name": "tests.main",
        "signature": "tests.main.get_query_param_required_type(query: int=Query(...))",
        "snippet": "def get_query_param_required_type(query: int = Query(...)):\n    return f\"foo bar {query}\"",
        "begin_line": 185,
        "end_line": 186,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_modules_same_name_body.app.a.compute#7",
        "src_path": "tests/test_modules_same_name_body/app/a.py",
        "class_name": "tests.test_modules_same_name_body.app.a",
        "signature": "tests.test_modules_same_name_body.app.a.compute(a: int=Body(...), b: str=Body(...))",
        "snippet": "def compute(a: int = Body(...), b: str = Body(...)):\n    return {\"a\": a, \"b\": b}",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false
    }
]