coverage run -m pytest test/scheduler_api_test.py::SchedulerApiTest::test_batch_ignore_items_not_ready
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
benchmark: 3.2.3 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /home/user/BugsInPy/temp/projects/luigi
plugins: benchmark-3.2.3, requests-mock-1.8.0, sanic-1.6.1, sugar-0.9.3, cov-2.9.0
collected 1 item

test/scheduler_api_test.py F                                             [100%]

=================================== FAILURES ===================================
______________ SchedulerApiTest.test_batch_ignore_items_not_ready ______________

self = <scheduler_api_test.SchedulerApiTest testMethod=test_batch_ignore_items_not_ready>

    def test_batch_ignore_items_not_ready(self):
        self.sch.add_task_batcher(worker=WORKER, task_family='A', batched_args=['a'])
        self.sch.add_task(
            worker=WORKER, task_id='A_a_1', family='A', params={'a': '1'}, batchable=True)
        self.sch.add_task(
            worker=WORKER, task_id='A_a_2', family='A', params={'a': '2'}, deps=['NOT_DONE'],
            batchable=True)
        self.sch.add_task(
            worker=WORKER, task_id='A_a_3', family='A', params={'a': '3'}, deps=['DONE'],
            batchable=True)
        self.sch.add_task(
            worker=WORKER, task_id='A_a_4', family='A', params={'a': '4'}, deps=['DONE'],
            batchable=True)
        self.sch.add_task(
            worker=WORKER, task_id='A_a_5', family='A', params={'a': '5'}, deps=['NOT_DONE'],
            batchable=True)
    
        self.sch.add_task(worker=WORKER, task_id='NOT_DONE', runnable=False)
        self.sch.add_task(worker=WORKER, task_id='DONE', status=DONE)
    
        response = self.sch.get_work(worker=WORKER)
        self.assertIsNone(response['task_id'])
>       self.assertEqual({'a': ['1', '3', '4']}, response['task_params'])
E       AssertionError: {'a': ['1', '3', '4']} != {'a': ['1', '2', '3', '4', '5']}
E       - {'a': ['1', '3', '4']}
E       + {'a': ['1', '2', '3', '4', '5']}
E       ?             +++++        +++++

test/scheduler_api_test.py:206: AssertionError
=============================== warnings summary ===============================
luigi/parameter.py:28
  /home/user/BugsInPy/temp/projects/luigi/luigi/parameter.py:28: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.9 it will stop working
    from collections import OrderedDict, Mapping

luigi/scheduler.py:91: 19 tests with warnings
  /home/user/BugsInPy/temp/projects/luigi/luigi/scheduler.py:91: DeprecationWarning: inspect.getargspec() is deprecated since Python 3.0, use inspect.signature() or inspect.getfullargspec()
    fn_args = inspect.getargspec(fn)

/opt/conda/envs/8441653a13c8b984d6b254b3626e9e29/lib/python3.8/site-packages/nose/importer.py:12
  /opt/conda/envs/8441653a13c8b984d6b254b3626e9e29/lib/python3.8/site-packages/nose/importer.py:12: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
    from imp import find_module, load_module, acquire_lock, release_lock

-- Docs: https://docs.pytest.org/en/latest/warnings.html
=========================== short test summary info ============================
FAILED test/scheduler_api_test.py::SchedulerApiTest::test_batch_ignore_items_not_ready
======================== 1 failed, 21 warnings in 0.29s ========================
