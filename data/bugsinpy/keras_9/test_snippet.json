[
    {
        "name": "tests.test_doc_auto_generation.test_doc_lists#353",
        "src_path": "tests/test_doc_auto_generation.py",
        "class_name": "tests.test_doc_auto_generation",
        "signature": "tests.test_doc_auto_generation.test_doc_lists(docs_descriptor)",
        "snippet": "def test_doc_lists(docs_descriptor):\n    docstring = autogen.process_docstring(docs_descriptor['doc'])\n    assert markdown(docstring) == markdown(docs_descriptor['result'])",
        "begin_line": 353,
        "end_line": 355,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_doc_auto_generation.test_doc_multiple_sections_code#382",
        "src_path": "tests/test_doc_auto_generation.py",
        "class_name": "tests.test_doc_auto_generation",
        "signature": "tests.test_doc_auto_generation.test_doc_multiple_sections_code()",
        "snippet": "def test_doc_multiple_sections_code():\n    \"\"\" Checks that we can have code blocks in multiple sections.\"\"\"\n    generated = autogen.process_docstring(dummy_docstring)\n    assert '# Theano-like behavior example' in generated\n    assert 'def dot(x, y):' in generated",
        "begin_line": 382,
        "end_line": 386,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.keras.legacy.conftest.clear_session_after_test#6",
        "src_path": "tests/keras/legacy/conftest.py",
        "class_name": "tests.keras.legacy.conftest",
        "signature": "tests.keras.legacy.conftest.clear_session_after_test()",
        "snippet": "def clear_session_after_test():\n    \"\"\"This wrapper runs for all the tests in the legacy directory (recursively).\n    \"\"\"\n    with warnings.catch_warnings():\n        warnings.filterwarnings('ignore', message=r'(.+) Keras 2 ',\n                                category=UserWarning)\n        yield",
        "begin_line": 6,
        "end_line": 12,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.conftest.clear_session_after_test#6",
        "src_path": "tests/conftest.py",
        "class_name": "tests.conftest",
        "signature": "tests.conftest.clear_session_after_test()",
        "snippet": "def clear_session_after_test():\n    \"\"\"Test wrapper to clean up after TensorFlow and CNTK tests.\n\n    This wrapper runs for all the tests in the keras test suite.\n    \"\"\"\n    yield\n    if K.backend() == 'tensorflow' or K.backend() == 'cntk':\n        K.clear_session()",
        "begin_line": 6,
        "end_line": 13,
        "comment": "",
        "is_bug": false
    }
]