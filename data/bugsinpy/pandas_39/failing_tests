coverage run -m pytest pandas/tests/frame//test_axis_select_reindex.py::TestDataFrameSelectReindex::test_inplace_drop_and_operation
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.2, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.15.1
collected 8 items

pandas/tests/frame/test_axis_select_reindex.py ....FFFF                  [100%]

=================================== FAILURES ===================================
__ TestDataFrameSelectReindex.test_inplace_drop_and_operation[True-__iadd__] ___

self = <pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex object at 0x7f2c8b597f40>
operation = '__iadd__', inplace = True

    @pytest.mark.parametrize(
        "operation", ["__iadd__", "__isub__", "__imul__", "__ipow__"]
    )
    @pytest.mark.parametrize("inplace", [False, True])
    def test_inplace_drop_and_operation(self, operation, inplace):
        # GH 30484
        df = pd.DataFrame({"x": range(5)})
        expected = df.copy()
        df["y"] = range(5)
        y = df["y"]
    
        with tm.assert_produces_warning(None):
            if inplace:
                df.drop("y", axis=1, inplace=inplace)
            else:
                df = df.drop("y", axis=1, inplace=inplace)
    
            # Perform operation and check result
            getattr(y, operation)(1)
>           tm.assert_frame_equal(df, expected)
E           AssertionError: DataFrame are different
E           
E           DataFrame shape mismatch
E           [left]:  (5, 2)
E           [right]: (5, 1)

pandas/tests/frame/test_axis_select_reindex.py:739: AssertionError
__ TestDataFrameSelectReindex.test_inplace_drop_and_operation[True-__isub__] ___

self = <pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex object at 0x7f2c8b2774f0>
operation = '__isub__', inplace = True

    @pytest.mark.parametrize(
        "operation", ["__iadd__", "__isub__", "__imul__", "__ipow__"]
    )
    @pytest.mark.parametrize("inplace", [False, True])
    def test_inplace_drop_and_operation(self, operation, inplace):
        # GH 30484
        df = pd.DataFrame({"x": range(5)})
        expected = df.copy()
        df["y"] = range(5)
        y = df["y"]
    
        with tm.assert_produces_warning(None):
            if inplace:
                df.drop("y", axis=1, inplace=inplace)
            else:
                df = df.drop("y", axis=1, inplace=inplace)
    
            # Perform operation and check result
            getattr(y, operation)(1)
>           tm.assert_frame_equal(df, expected)
E           AssertionError: DataFrame are different
E           
E           DataFrame shape mismatch
E           [left]:  (5, 2)
E           [right]: (5, 1)

pandas/tests/frame/test_axis_select_reindex.py:739: AssertionError
__ TestDataFrameSelectReindex.test_inplace_drop_and_operation[True-__imul__] ___

self = <pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex object at 0x7f2c8b580760>
operation = '__imul__', inplace = True

    @pytest.mark.parametrize(
        "operation", ["__iadd__", "__isub__", "__imul__", "__ipow__"]
    )
    @pytest.mark.parametrize("inplace", [False, True])
    def test_inplace_drop_and_operation(self, operation, inplace):
        # GH 30484
        df = pd.DataFrame({"x": range(5)})
        expected = df.copy()
        df["y"] = range(5)
        y = df["y"]
    
        with tm.assert_produces_warning(None):
            if inplace:
                df.drop("y", axis=1, inplace=inplace)
            else:
                df = df.drop("y", axis=1, inplace=inplace)
    
            # Perform operation and check result
            getattr(y, operation)(1)
>           tm.assert_frame_equal(df, expected)
E           AssertionError: DataFrame are different
E           
E           DataFrame shape mismatch
E           [left]:  (5, 2)
E           [right]: (5, 1)

pandas/tests/frame/test_axis_select_reindex.py:739: AssertionError
__ TestDataFrameSelectReindex.test_inplace_drop_and_operation[True-__ipow__] ___

self = <pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex object at 0x7f2c8b5c8dc0>
operation = '__ipow__', inplace = True

    @pytest.mark.parametrize(
        "operation", ["__iadd__", "__isub__", "__imul__", "__ipow__"]
    )
    @pytest.mark.parametrize("inplace", [False, True])
    def test_inplace_drop_and_operation(self, operation, inplace):
        # GH 30484
        df = pd.DataFrame({"x": range(5)})
        expected = df.copy()
        df["y"] = range(5)
        y = df["y"]
    
        with tm.assert_produces_warning(None):
            if inplace:
                df.drop("y", axis=1, inplace=inplace)
            else:
                df = df.drop("y", axis=1, inplace=inplace)
    
            # Perform operation and check result
            getattr(y, operation)(1)
>           tm.assert_frame_equal(df, expected)
E           AssertionError: DataFrame are different
E           
E           DataFrame shape mismatch
E           [left]:  (5, 2)
E           [right]: (5, 1)

pandas/tests/frame/test_axis_select_reindex.py:739: AssertionError
=========================== short test summary info ============================
FAILED pandas/tests/frame/test_axis_select_reindex.py::TestDataFrameSelectReindex::test_inplace_drop_and_operation[True-__iadd__]
FAILED pandas/tests/frame/test_axis_select_reindex.py::TestDataFrameSelectReindex::test_inplace_drop_and_operation[True-__isub__]
FAILED pandas/tests/frame/test_axis_select_reindex.py::TestDataFrameSelectReindex::test_inplace_drop_and_operation[True-__imul__]
FAILED pandas/tests/frame/test_axis_select_reindex.py::TestDataFrameSelectReindex::test_inplace_drop_and_operation[True-__ipow__]
========================= 4 failed, 4 passed in 0.31s ==========================
