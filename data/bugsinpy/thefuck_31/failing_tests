coverage run -m pytest tests/rules/test_git_diff_staged.py::test_get_new_command
============================= test session starts ==============================
platform linux -- Python 3.7.0, pytest-3.10.1, py-1.8.1, pluggy-0.13.1
benchmark: 3.2.3 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /home/user/BugsInPy/temp/projects/thefuck, inifile:
plugins: benchmark-3.2.3, mock-3.1.0, docker-pexpect-0.9
collected 2 items

tests/rules/test_git_diff_staged.py .F                                   [100%]

=================================== FAILURES ===================================
_____________ test_get_new_command[command1-git diff --staged foo] _____________

command = Command(script='git diff foo', stdout='', stderr='')
new_command = 'git diff --staged foo'

    @pytest.mark.parametrize('command, new_command', [
        (Command('git diff'), 'git diff --staged'),
        (Command('git diff foo'), 'git diff --staged foo')])
    def test_get_new_command(command, new_command):
>       assert get_new_command(command, None) == new_command
E       AssertionError: assert 'git diff foo --staged' == 'git diff --staged foo'
E         - git diff foo --staged
E         ?         ----
E         + git diff --staged foo
E         ?                  ++++

tests/rules/test_git_diff_staged.py:26: AssertionError
====================== 1 failed, 1 passed in 0.08 seconds ======================
