[
    {
        "name": "thefuck.rules.tmux.match#5",
        "src_path": "thefuck/rules/tmux.py",
        "class_name": "thefuck.rules.tmux",
        "signature": "thefuck.rules.tmux.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('tmux' in command.script\n            and 'ambiguous command:' in command.stderr\n            and 'could be:' in command.stderr)",
        "begin_line": 5,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.tmux.get_new_command#11",
        "src_path": "thefuck/rules/tmux.py",
        "class_name": "thefuck.rules.tmux",
        "signature": "thefuck.rules.tmux.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    cmd = re.match(r\"ambiguous command: (.*), could be: (.*)\",\n                   command.stderr)\n\n    old_cmd = cmd.group(1)\n    suggestions = [cmd.strip() for cmd in cmd.group(2).split(',')]\n\n    new_cmd = get_closest(old_cmd, suggestions)\n\n    return command.script.replace(old_cmd, new_cmd)",
        "begin_line": 11,
        "end_line": 20,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.django_south_merge.match#1",
        "src_path": "thefuck/rules/django_south_merge.py",
        "class_name": "thefuck.rules.django_south_merge",
        "signature": "thefuck.rules.django_south_merge.match(command, settings)",
        "snippet": "def match(command, settings):\n    return 'manage.py' in command.script and \\\n           'migrate' in command.script \\\n           and '--merge: will just attempt the migration' in command.stderr",
        "begin_line": 1,
        "end_line": 4,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.django_south_merge.get_new_command#7",
        "src_path": "thefuck/rules/django_south_merge.py",
        "class_name": "thefuck.rules.django_south_merge",
        "signature": "thefuck.rules.django_south_merge.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return u'{} --merge'.format(command.script)",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.java.match#8",
        "src_path": "thefuck/rules/java.py",
        "class_name": "thefuck.rules.java",
        "signature": "thefuck.rules.java.match(command, settings)",
        "snippet": "def match(command, settings):\n    return (command.script.startswith('java ')\n            and command.script.endswith('.java'))",
        "begin_line": 8,
        "end_line": 10,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.java.get_new_command#13",
        "src_path": "thefuck/rules/java.py",
        "class_name": "thefuck.rules.java",
        "signature": "thefuck.rules.java.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return command.script[:-5]",
        "begin_line": 13,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.no_such_file.match#13",
        "src_path": "thefuck/rules/no_such_file.py",
        "class_name": "thefuck.rules.no_such_file",
        "signature": "thefuck.rules.no_such_file.match(command, settings)",
        "snippet": "def match(command, settings):\n    for pattern in patterns:\n        if re.search(pattern, command.stderr):\n            return True\n\n    return False",
        "begin_line": 13,
        "end_line": 18,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.no_such_file.get_new_command#21",
        "src_path": "thefuck/rules/no_such_file.py",
        "class_name": "thefuck.rules.no_such_file",
        "signature": "thefuck.rules.no_such_file.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    for pattern in patterns:\n        file = re.findall(pattern, command.stderr)\n\n        if file:\n            file = file[0]\n            dir = file[0:file.rfind('/')]\n\n            formatme = shells.and_('mkdir -p {}', '{}')\n            return formatme.format(dir, command.script)",
        "begin_line": 21,
        "end_line": 30,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_push_force.match#5",
        "src_path": "thefuck/rules/git_push_force.py",
        "class_name": "thefuck.rules.git_push_force",
        "signature": "thefuck.rules.git_push_force.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('git' in command.script\n            and 'push' in command.script\n            and '! [rejected]' in command.stderr\n            and 'failed to push some refs to' in command.stderr\n            and 'Updates were rejected because the tip of your current branch is behind' in command.stderr)",
        "begin_line": 5,
        "end_line": 10,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_push_force.get_new_command#14",
        "src_path": "thefuck/rules/git_push_force.py",
        "class_name": "thefuck.rules.git_push_force",
        "signature": "thefuck.rules.git_push_force.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return command.script.replace('push', 'push --force')",
        "begin_line": 14,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.has_exists_script.match#6",
        "src_path": "thefuck/rules/has_exists_script.py",
        "class_name": "thefuck.rules.has_exists_script",
        "signature": "thefuck.rules.has_exists_script.match(command, settings)",
        "snippet": "def match(command, settings):\n    return os.path.exists(command.script.split()[0]) \\\n        and 'command not found' in command.stderr",
        "begin_line": 6,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.has_exists_script.get_new_command#12",
        "src_path": "thefuck/rules/has_exists_script.py",
        "class_name": "thefuck.rules.has_exists_script",
        "signature": "thefuck.rules.has_exists_script.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return u'./{}'.format(command.script)",
        "begin_line": 12,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.switch_lang._get_matched_layout#13",
        "src_path": "thefuck/rules/switch_lang.py",
        "class_name": "thefuck.rules.switch_lang",
        "signature": "thefuck.rules.switch_lang._get_matched_layout(command)",
        "snippet": "def _get_matched_layout(command):\n    for source_layout in source_layouts:\n        if all([ch in source_layout or ch in '-_'\n                for ch in command.script.split(' ')[0]]):\n            return source_layout",
        "begin_line": 13,
        "end_line": 17,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0015015015015015015,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.switch_lang._switch#20",
        "src_path": "thefuck/rules/switch_lang.py",
        "class_name": "thefuck.rules.switch_lang",
        "signature": "thefuck.rules.switch_lang._switch(ch, layout)",
        "snippet": "def _switch(ch, layout):\n    if ch in layout:\n        return target_layout[layout.index(ch)]\n    else:\n        return ch",
        "begin_line": 20,
        "end_line": 24,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.switch_lang._switch_command#27",
        "src_path": "thefuck/rules/switch_lang.py",
        "class_name": "thefuck.rules.switch_lang",
        "signature": "thefuck.rules.switch_lang._switch_command(command, layout)",
        "snippet": "def _switch_command(command, layout):\n    return ''.join(_switch(ch, layout) for ch in command.script)",
        "begin_line": 27,
        "end_line": 28,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0015015015015015015,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.switch_lang.match#31",
        "src_path": "thefuck/rules/switch_lang.py",
        "class_name": "thefuck.rules.switch_lang",
        "signature": "thefuck.rules.switch_lang.match(command, settings)",
        "snippet": "def match(command, settings):\n    if 'not found' not in command.stderr:\n        return False\n    matched_layout = _get_matched_layout(command)\n    return matched_layout and \\\n           _switch_command(command, matched_layout) != thefuck_alias()",
        "begin_line": 31,
        "end_line": 36,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.switch_lang.get_new_command#39",
        "src_path": "thefuck/rules/switch_lang.py",
        "class_name": "thefuck.rules.switch_lang",
        "signature": "thefuck.rules.switch_lang.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    matched_layout = _get_matched_layout(command)\n    return _switch_command(command, matched_layout)",
        "begin_line": 39,
        "end_line": 41,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.apt_get.match#10",
        "src_path": "thefuck/rules/apt_get.py",
        "class_name": "thefuck.rules.apt_get",
        "signature": "thefuck.rules.apt_get.match(command, settings)",
        "snippet": "def match(command, settings):\n    if 'not found' in command.stderr:\n        try:\n            c = CommandNotFound.CommandNotFound()\n            pkgs = c.getPackages(command.script.split(\" \")[0])\n            name, _ = pkgs[0]\n            return True\n        except IndexError:\n            # IndexError is thrown when no matching package is found\n            return False",
        "begin_line": 10,
        "end_line": 19,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.apt_get.get_new_command#22",
        "src_path": "thefuck/rules/apt_get.py",
        "class_name": "thefuck.rules.apt_get",
        "signature": "thefuck.rules.apt_get.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    c = CommandNotFound.CommandNotFound()\n    pkgs = c.getPackages(command.script.split(\" \")[0])\n    name, _ = pkgs[0]\n    formatme = shells.and_('sudo apt-get install {}', '{}')\n    return formatme.format(name, command.script)",
        "begin_line": 22,
        "end_line": 27,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.python_execute.match#8",
        "src_path": "thefuck/rules/python_execute.py",
        "class_name": "thefuck.rules.python_execute",
        "signature": "thefuck.rules.python_execute.match(command, settings)",
        "snippet": "def match(command, settings):\n    return (command.script.startswith('python ')\n            and not command.script.endswith('.py'))",
        "begin_line": 8,
        "end_line": 10,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.python_execute.get_new_command#13",
        "src_path": "thefuck/rules/python_execute.py",
        "class_name": "thefuck.rules.python_execute",
        "signature": "thefuck.rules.python_execute.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return command.script + '.py'",
        "begin_line": 13,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.grep_recursive.match#1",
        "src_path": "thefuck/rules/grep_recursive.py",
        "class_name": "thefuck.rules.grep_recursive",
        "signature": "thefuck.rules.grep_recursive.match(command, settings)",
        "snippet": "def match(command, settings):\n    return (command.script.startswith('grep')\n            and 'is a directory' in command.stderr.lower())",
        "begin_line": 1,
        "end_line": 3,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.grep_recursive.get_new_command#6",
        "src_path": "thefuck/rules/grep_recursive.py",
        "class_name": "thefuck.rules.grep_recursive",
        "signature": "thefuck.rules.grep_recursive.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return 'grep -r {}'.format(command.script[5:])",
        "begin_line": 6,
        "end_line": 7,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_checkout.match#7",
        "src_path": "thefuck/rules/git_checkout.py",
        "class_name": "thefuck.rules.git_checkout",
        "signature": "thefuck.rules.git_checkout.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('git' in command.script\n            and 'did not match any file(s) known to git.' in command.stderr\n            and \"Did you forget to 'git add'?\" not in command.stderr)",
        "begin_line": 7,
        "end_line": 10,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_checkout.get_branches#13",
        "src_path": "thefuck/rules/git_checkout.py",
        "class_name": "thefuck.rules.git_checkout",
        "signature": "thefuck.rules.git_checkout.get_branches()",
        "snippet": "def get_branches():\n    proc = subprocess.Popen(\n        ['git', 'branch', '-a', '--no-color', '--no-column'],\n        stdout=subprocess.PIPE)\n    for line in proc.stdout.readlines():\n        line = line.decode('utf-8')\n        if line.startswith('*'):\n            line = line.split(' ')[1]\n        if '/' in line:\n            line = line.split('/')[-1]\n        yield line.strip()",
        "begin_line": 13,
        "end_line": 23,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001639344262295082,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_checkout.get_new_command#27",
        "src_path": "thefuck/rules/git_checkout.py",
        "class_name": "thefuck.rules.git_checkout",
        "signature": "thefuck.rules.git_checkout.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    missing_file = re.findall(\n        r\"error: pathspec '([^']*)' \"\n        \"did not match any file\\(s\\) known to git.\", command.stderr)[0]\n    closest_branch = utils.get_closest(missing_file, get_branches(),\n                                       fallback_to_first=False)\n    if closest_branch:\n        return command.script.replace(missing_file, closest_branch, 1)\n    else:\n        return shells.and_('git branch {}', '{}').format(\n            missing_file, command.script)",
        "begin_line": 27,
        "end_line": 37,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.django_south_ghost.match#1",
        "src_path": "thefuck/rules/django_south_ghost.py",
        "class_name": "thefuck.rules.django_south_ghost",
        "signature": "thefuck.rules.django_south_ghost.match(command, settings)",
        "snippet": "def match(command, settings):\n    return 'manage.py' in command.script and \\\n           'migrate' in command.script \\\n           and 'or pass --delete-ghost-migrations' in command.stderr",
        "begin_line": 1,
        "end_line": 4,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.django_south_ghost.get_new_command#7",
        "src_path": "thefuck/rules/django_south_ghost.py",
        "class_name": "thefuck.rules.django_south_ghost",
        "signature": "thefuck.rules.django_south_ghost.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return u'{} --delete-ghost-migrations'.format(command.script)",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.history._not_corrected#6",
        "src_path": "thefuck/rules/history.py",
        "class_name": "thefuck.rules.history",
        "signature": "thefuck.rules.history._not_corrected(history, tf_alias)",
        "snippet": "def _not_corrected(history, tf_alias):\n    \"\"\"Returns all lines from history except that comes before `fuck`.\"\"\"\n    previous = None\n    for line in history:\n        if previous is not None and line != tf_alias:\n            yield previous\n        previous = line\n    if history:\n        yield history[-1]",
        "begin_line": 6,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0013869625520110957,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.history._history_of_exists_without_current#18",
        "src_path": "thefuck/rules/history.py",
        "class_name": "thefuck.rules.history",
        "signature": "thefuck.rules.history._history_of_exists_without_current(command)",
        "snippet": "def _history_of_exists_without_current(command):\n    history = get_history()\n    tf_alias = thefuck_alias()\n    executables = get_all_executables()\n    return [line for line in _not_corrected(history, tf_alias)\n            if not line.startswith(tf_alias) and not line == command.script\n            and line.split(' ')[0] in executables]",
        "begin_line": 18,
        "end_line": 24,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0013869625520110957,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.history.match#26",
        "src_path": "thefuck/rules/history.py",
        "class_name": "thefuck.rules.history",
        "signature": "thefuck.rules.history.match(command, settings)",
        "snippet": "def match(command, settings):\n    return len(get_close_matches(command.script,\n                                 _history_of_exists_without_current(command)))",
        "begin_line": 26,
        "end_line": 28,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001639344262295082,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.history.get_new_command#31",
        "src_path": "thefuck/rules/history.py",
        "class_name": "thefuck.rules.history",
        "signature": "thefuck.rules.history.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return get_closest(command.script,\n                       _history_of_exists_without_current(command))",
        "begin_line": 31,
        "end_line": 33,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_stash.match#5",
        "src_path": "thefuck/rules/git_stash.py",
        "class_name": "thefuck.rules.git_stash",
        "signature": "thefuck.rules.git_stash.match(command, settings)",
        "snippet": "def match(command, settings):\n    # catches \"Please commit or stash them\" and \"Please, commit your changes or\n    # stash them before you can switch branches.\"\n    return 'git' in command.script and 'or stash them' in command.stderr",
        "begin_line": 5,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001639344262295082,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_stash.get_new_command#12",
        "src_path": "thefuck/rules/git_stash.py",
        "class_name": "thefuck.rules.git_stash",
        "signature": "thefuck.rules.git_stash.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    formatme = shells.and_('git stash', '{}')\n    return formatme.format(command.script)",
        "begin_line": 12,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_pull_clone.match#6",
        "src_path": "thefuck/rules/git_pull_clone.py",
        "class_name": "thefuck.rules.git_pull_clone",
        "signature": "thefuck.rules.git_pull_clone.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('git pull' in command.script\n            and 'fatal: Not a git repository' in command.stderr\n            and \"Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).\" in command.stderr)",
        "begin_line": 6,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_pull_clone.get_new_command#13",
        "src_path": "thefuck/rules/git_pull_clone.py",
        "class_name": "thefuck.rules.git_pull_clone",
        "signature": "thefuck.rules.git_pull_clone.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return command.script.replace(' pull ', ' clone ')",
        "begin_line": 13,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.types.RulesNamesList.__contains__#14",
        "src_path": "thefuck/types.py",
        "class_name": "thefuck.types.RulesNamesList",
        "signature": "thefuck.types.RulesNamesList.__contains__(self, item)",
        "snippet": "    def __contains__(self, item):\n        return super(RulesNamesList, self).__contains__(item.name)",
        "begin_line": 14,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001639344262295082,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.types.Settings.__getattr__#20",
        "src_path": "thefuck/types.py",
        "class_name": "thefuck.types.Settings",
        "signature": "thefuck.types.Settings.__getattr__(self, item)",
        "snippet": "    def __getattr__(self, item):\n        return self.get(item)",
        "begin_line": 20,
        "end_line": 21,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0013869625520110957,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.types.Settings.update#23",
        "src_path": "thefuck/types.py",
        "class_name": "thefuck.types.Settings",
        "signature": "thefuck.types.Settings.update(self, **kwargs)",
        "snippet": "    def update(self, **kwargs):\n        \"\"\"Returns new settings with new values from `kwargs`.\"\"\"\n        conf = dict(self)\n        conf.update(kwargs)\n        return Settings(conf)",
        "begin_line": 23,
        "end_line": 27,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.ls_lah.match#1",
        "src_path": "thefuck/rules/ls_lah.py",
        "class_name": "thefuck.rules.ls_lah",
        "signature": "thefuck.rules.ls_lah.match(command, settings)",
        "snippet": "def match(command, settings):\n    return (command.script == 'ls'\n            or command.script.startswith('ls ')\n            and not ('ls -' in command.script))",
        "begin_line": 1,
        "end_line": 4,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.ls_lah.get_new_command#7",
        "src_path": "thefuck/rules/ls_lah.py",
        "class_name": "thefuck.rules.ls_lah",
        "signature": "thefuck.rules.ls_lah.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    command = command.script.split(' ')\n    command[0] = 'ls -lah'\n    return ' '.join(command)",
        "begin_line": 7,
        "end_line": 10,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.man_no_space.match#1",
        "src_path": "thefuck/rules/man_no_space.py",
        "class_name": "thefuck.rules.man_no_space",
        "signature": "thefuck.rules.man_no_space.match(command, settings)",
        "snippet": "def match(command, settings):\n    return (command.script.startswith(u'man')\n            and u'command not found' in command.stderr.lower())",
        "begin_line": 1,
        "end_line": 3,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.man_no_space.get_new_command#6",
        "src_path": "thefuck/rules/man_no_space.py",
        "class_name": "thefuck.rules.man_no_space",
        "signature": "thefuck.rules.man_no_space.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return u'man {}'.format(command.script[3:])",
        "begin_line": 6,
        "end_line": 7,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Generic.get_aliases#17",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Generic",
        "signature": "thefuck.shells.Generic.get_aliases(self)",
        "snippet": "    def get_aliases(self):\n        return {}",
        "begin_line": 17,
        "end_line": 18,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Generic._expand_aliases#20",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Generic",
        "signature": "thefuck.shells.Generic._expand_aliases(self, command_script)",
        "snippet": "    def _expand_aliases(self, command_script):\n        aliases = self.get_aliases()\n        binary = command_script.split(' ')[0]\n        if binary in aliases:\n            return command_script.replace(binary, aliases[binary], 1)\n        else:\n            return command_script",
        "begin_line": 20,
        "end_line": 26,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Generic.from_shell#28",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Generic",
        "signature": "thefuck.shells.Generic.from_shell(self, command_script)",
        "snippet": "    def from_shell(self, command_script):\n        \"\"\"Prepares command before running in app.\"\"\"\n        return self._expand_aliases(command_script)",
        "begin_line": 28,
        "end_line": 30,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001321003963011889,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Generic.to_shell#32",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Generic",
        "signature": "thefuck.shells.Generic.to_shell(self, command_script)",
        "snippet": "    def to_shell(self, command_script):\n        \"\"\"Prepares command for running in shell.\"\"\"\n        return command_script",
        "begin_line": 32,
        "end_line": 34,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001321003963011889,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Generic.app_alias#36",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Generic",
        "signature": "thefuck.shells.Generic.app_alias(self, fuck)",
        "snippet": "    def app_alias(self, fuck):\n        return \"alias {0}='TF_ALIAS={0} eval $(thefuck $(fc -ln -1))'\".format(fuck)",
        "begin_line": 36,
        "end_line": 37,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Generic._get_history_file_name#39",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Generic",
        "signature": "thefuck.shells.Generic._get_history_file_name(self)",
        "snippet": "    def _get_history_file_name(self):\n        return ''",
        "begin_line": 39,
        "end_line": 40,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001639344262295082,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Generic.put_to_history#45",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Generic",
        "signature": "thefuck.shells.Generic.put_to_history(self, command_script)",
        "snippet": "    def put_to_history(self, command_script):\n        \"\"\"Puts command script to shell history.\"\"\"\n        history_file_name = self._get_history_file_name()\n        if os.path.isfile(history_file_name):\n            with open(history_file_name, 'a') as history:\n                history.write(self._get_history_line(command_script))",
        "begin_line": 45,
        "end_line": 50,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Generic.get_history#60",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Generic",
        "signature": "thefuck.shells.Generic.get_history(self)",
        "snippet": "    def get_history(self):\n        \"\"\"Returns list of history entries.\"\"\"\n        history_file_name = self._get_history_file_name()\n        if os.path.isfile(history_file_name):\n            with io.open(history_file_name, 'r',\n                         encoding='utf-8', errors='ignore') as history:\n                for line in history:\n                    prepared = self._script_from_history(line)\\\n                                   .strip()\n                    if prepared:\n                        yield prepared",
        "begin_line": 60,
        "end_line": 70,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Generic.and_#72",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Generic",
        "signature": "thefuck.shells.Generic.and_(self, *commands)",
        "snippet": "    def and_(self, *commands):\n        return u' && '.join(commands)",
        "begin_line": 72,
        "end_line": 73,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0013869625520110957,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Bash.app_alias#77",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Bash",
        "signature": "thefuck.shells.Bash.app_alias(self, fuck)",
        "snippet": "    def app_alias(self, fuck):\n        return \"TF_ALIAS={0} alias {0}='eval $(thefuck $(fc -ln -1));\" \\\n               \" history -r'\".format(fuck)",
        "begin_line": 77,
        "end_line": 79,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Bash._parse_alias#81",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Bash",
        "signature": "thefuck.shells.Bash._parse_alias(self, alias)",
        "snippet": "    def _parse_alias(self, alias):\n        name, value = alias.replace('alias ', '', 1).split('=', 1)\n        if value[0] == value[-1] == '\"' or value[0] == value[-1] == \"'\":\n            value = value[1:-1]\n        return name, value",
        "begin_line": 81,
        "end_line": 85,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0015015015015015015,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Bash.get_aliases#87",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Bash",
        "signature": "thefuck.shells.Bash.get_aliases(self)",
        "snippet": "    def get_aliases(self):\n        proc = Popen('bash -ic alias', stdout=PIPE, stderr=DEVNULL,\n                     shell=True)\n        return dict(\n            self._parse_alias(alias)\n            for alias in proc.stdout.read().decode('utf-8').split('\\n')\n            if alias and '=' in alias)",
        "begin_line": 87,
        "end_line": 93,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0015015015015015015,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Bash._get_history_file_name#95",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Bash",
        "signature": "thefuck.shells.Bash._get_history_file_name(self)",
        "snippet": "    def _get_history_file_name(self):\n        return os.environ.get(\"HISTFILE\",\n                              os.path.expanduser('~/.bash_history'))",
        "begin_line": 95,
        "end_line": 97,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Bash._get_history_line#99",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Bash",
        "signature": "thefuck.shells.Bash._get_history_line(self, command_script)",
        "snippet": "    def _get_history_line(self, command_script):\n        return u'{}\\n'.format(command_script)",
        "begin_line": 99,
        "end_line": 100,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Bash._script_from_history#102",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Bash",
        "signature": "thefuck.shells.Bash._script_from_history(self, line)",
        "snippet": "    def _script_from_history(self, line):\n        print(line)\n        return line",
        "begin_line": 102,
        "end_line": 104,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Fish._get_overridden_aliases#109",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Fish",
        "signature": "thefuck.shells.Fish._get_overridden_aliases(self)",
        "snippet": "    def _get_overridden_aliases(self):\n        overridden_aliases = os.environ.get('TF_OVERRIDDEN_ALIASES', '').strip()\n        if overridden_aliases:\n            return [alias.strip() for alias in overridden_aliases.split(',')]\n        else:\n            return ['cd', 'grep', 'ls', 'man', 'open']",
        "begin_line": 109,
        "end_line": 114,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Fish.app_alias#116",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Fish",
        "signature": "thefuck.shells.Fish.app_alias(self, fuck)",
        "snippet": "    def app_alias(self, fuck):\n        return (\"set TF_ALIAS {0}\\n\"\n                \"function {0} -d 'Correct your previous console command'\\n\"\n                \"    set -l exit_code $status\\n\"\n                \"    set -l eval_script\"\n                \" (mktemp 2>/dev/null ; or mktemp -t 'thefuck')\\n\"\n                \"    set -l fucked_up_commandd $history[1]\\n\"\n                \"    thefuck $fucked_up_commandd > $eval_script\\n\"\n                \"    . $eval_script\\n\"\n                \"    rm $eval_script\\n\"\n                \"    if test $exit_code -ne 0\\n\"\n                \"        history --delete $fucked_up_commandd\\n\"\n                \"    end\\n\"\n                \"end\").format(fuck)",
        "begin_line": 116,
        "end_line": 129,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Fish.get_aliases#131",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Fish",
        "signature": "thefuck.shells.Fish.get_aliases(self)",
        "snippet": "    def get_aliases(self):\n        overridden = self._get_overridden_aliases()\n        proc = Popen('fish -ic functions', stdout=PIPE, stderr=DEVNULL,\n                     shell=True)\n        functions = proc.stdout.read().decode('utf-8').strip().split('\\n')\n        return {func: func for func in functions if func not in overridden}",
        "begin_line": 131,
        "end_line": 136,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0012360939431396785,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Fish._expand_aliases#138",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Fish",
        "signature": "thefuck.shells.Fish._expand_aliases(self, command_script)",
        "snippet": "    def _expand_aliases(self, command_script):\n        aliases = self.get_aliases()\n        binary = command_script.split(' ')[0]\n        if binary in aliases:\n            return u'fish -ic \"{}\"'.format(command_script.replace('\"', r'\\\"'))\n        else:\n            return command_script",
        "begin_line": 138,
        "end_line": 144,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001639344262295082,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Fish.from_shell#146",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Fish",
        "signature": "thefuck.shells.Fish.from_shell(self, command_script)",
        "snippet": "    def from_shell(self, command_script):\n        \"\"\"Prepares command before running in app.\"\"\"\n        return self._expand_aliases(command_script)",
        "begin_line": 146,
        "end_line": 148,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0012531328320802004,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Fish._get_history_file_name#150",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Fish",
        "signature": "thefuck.shells.Fish._get_history_file_name(self)",
        "snippet": "    def _get_history_file_name(self):\n        return os.path.expanduser('~/.config/fish/fish_history')",
        "begin_line": 150,
        "end_line": 151,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Fish._get_history_line#153",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Fish",
        "signature": "thefuck.shells.Fish._get_history_line(self, command_script)",
        "snippet": "    def _get_history_line(self, command_script):\n        return u'- cmd: {}\\n   when: {}\\n'.format(command_script, int(time()))",
        "begin_line": 153,
        "end_line": 154,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Fish.and_#156",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Fish",
        "signature": "thefuck.shells.Fish.and_(self, *commands)",
        "snippet": "    def and_(self, *commands):\n        return u'; and '.join(commands)",
        "begin_line": 156,
        "end_line": 157,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Zsh.app_alias#161",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Zsh",
        "signature": "thefuck.shells.Zsh.app_alias(self, fuck)",
        "snippet": "    def app_alias(self, fuck):\n        return \"TF_ALIAS={0}\" \\\n               \" alias {0}='eval $(thefuck $(fc -ln -1 | tail -n 1));\" \\\n               \" fc -R'\".format(fuck)",
        "begin_line": 161,
        "end_line": 164,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Zsh._parse_alias#166",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Zsh",
        "signature": "thefuck.shells.Zsh._parse_alias(self, alias)",
        "snippet": "    def _parse_alias(self, alias):\n        name, value = alias.split('=', 1)\n        if value[0] == value[-1] == '\"' or value[0] == value[-1] == \"'\":\n            value = value[1:-1]\n        return name, value",
        "begin_line": 166,
        "end_line": 170,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Zsh.get_aliases#172",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Zsh",
        "signature": "thefuck.shells.Zsh.get_aliases(self)",
        "snippet": "    def get_aliases(self):\n        proc = Popen('zsh -ic alias', stdout=PIPE, stderr=DEVNULL,\n                     shell=True)\n        return dict(\n            self._parse_alias(alias)\n            for alias in proc.stdout.read().decode('utf-8').split('\\n')\n            if alias and '=' in alias)",
        "begin_line": 172,
        "end_line": 178,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Zsh._get_history_file_name#180",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Zsh",
        "signature": "thefuck.shells.Zsh._get_history_file_name(self)",
        "snippet": "    def _get_history_file_name(self):\n        return os.environ.get(\"HISTFILE\",\n                              os.path.expanduser('~/.zsh_history'))",
        "begin_line": 180,
        "end_line": 182,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Zsh._get_history_line#184",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Zsh",
        "signature": "thefuck.shells.Zsh._get_history_line(self, command_script)",
        "snippet": "    def _get_history_line(self, command_script):\n        return u': {}:0;{}\\n'.format(int(time()), command_script)",
        "begin_line": 184,
        "end_line": 185,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.Zsh._script_from_history#187",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells.Zsh",
        "signature": "thefuck.shells.Zsh._script_from_history(self, line)",
        "snippet": "    def _script_from_history(self, line):\n        if ';' in line:\n            return line.split(';', 1)[1]\n        else:\n            return ''",
        "begin_line": 187,
        "end_line": 191,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells._get_shell#228",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells",
        "signature": "thefuck.shells._get_shell()",
        "snippet": "def _get_shell():\n    try:\n        shell = Process(os.getpid()).parent().name()\n    except TypeError:\n        shell = Process(os.getpid()).parent.name\n    return shells[shell]",
        "begin_line": 228,
        "end_line": 233,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0013869625520110957,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.to_shell#240",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells",
        "signature": "thefuck.shells.to_shell(command)",
        "snippet": "def to_shell(command):\n    return _get_shell().to_shell(command)",
        "begin_line": 240,
        "end_line": 241,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.thefuck_alias#248",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells",
        "signature": "thefuck.shells.thefuck_alias()",
        "snippet": "def thefuck_alias():\n    return os.environ.get('TF_ALIAS', 'fuck')",
        "begin_line": 248,
        "end_line": 249,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001639344262295082,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.put_to_history#252",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells",
        "signature": "thefuck.shells.put_to_history(command)",
        "snippet": "def put_to_history(command):\n    return _get_shell().put_to_history(command)",
        "begin_line": 252,
        "end_line": 253,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.shells.and_#256",
        "src_path": "thefuck/shells.py",
        "class_name": "thefuck.shells",
        "signature": "thefuck.shells.and_(*commands)",
        "snippet": "def and_(*commands):\n    return _get_shell().and_(*commands)",
        "begin_line": 256,
        "end_line": 257,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.ssh_known_hosts.match#15",
        "src_path": "thefuck/rules/ssh_known_hosts.py",
        "class_name": "thefuck.rules.ssh_known_hosts",
        "signature": "thefuck.rules.ssh_known_hosts.match(command, settings)",
        "snippet": "def match(command, settings):\n    if not command.script:\n        return False\n    if not command.script.split()[0] in commands:\n        return False\n    if not any([re.findall(pattern, command.stderr) for pattern in patterns]):\n        return False\n    return True",
        "begin_line": 15,
        "end_line": 22,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.ssh_known_hosts.get_new_command#25",
        "src_path": "thefuck/rules/ssh_known_hosts.py",
        "class_name": "thefuck.rules.ssh_known_hosts",
        "signature": "thefuck.rules.ssh_known_hosts.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return command.script",
        "begin_line": 25,
        "end_line": 26,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.ssh_known_hosts.side_effect#29",
        "src_path": "thefuck/rules/ssh_known_hosts.py",
        "class_name": "thefuck.rules.ssh_known_hosts",
        "signature": "thefuck.rules.ssh_known_hosts.side_effect(command, settings)",
        "snippet": "def side_effect(command, settings):\n    offending = offending_pattern.findall(command.stderr)\n    for filepath, lineno in offending:\n        with open(filepath, 'r') as fh:\n            lines = fh.readlines()\n            del lines[int(lineno) - 1]\n        with open(filepath, 'w') as fh:\n            fh.writelines(lines)",
        "begin_line": 29,
        "end_line": 36,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.systemctl.match#8",
        "src_path": "thefuck/rules/systemctl.py",
        "class_name": "thefuck.rules.systemctl",
        "signature": "thefuck.rules.systemctl.match(command, settings)",
        "snippet": "def match(command, settings):\n    # Catches 'Unknown operation 'service'.' when executing systemctl with\n    # misordered arguments\n    cmd = command.script.split()\n    return ('systemctl' in command.script and\n            'Unknown operation \\'' in command.stderr and\n            len(cmd) - cmd.index('systemctl') == 3)",
        "begin_line": 8,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.systemctl.get_new_command#18",
        "src_path": "thefuck/rules/systemctl.py",
        "class_name": "thefuck.rules.systemctl",
        "signature": "thefuck.rules.systemctl.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    cmd = command.script.split()\n    cmd[-1], cmd[-2] = cmd[-2], cmd[-1]\n    return ' '.join(cmd)",
        "begin_line": 18,
        "end_line": 21,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.conf._DefaultRulesNames.__add__#10",
        "src_path": "thefuck/conf.py",
        "class_name": "thefuck.conf._DefaultRulesNames",
        "signature": "thefuck.conf._DefaultRulesNames.__add__(self, items)",
        "snippet": "    def __add__(self, items):\n        return _DefaultRulesNames(list(self) + items)",
        "begin_line": 10,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.conf._DefaultRulesNames.__contains__#13",
        "src_path": "thefuck/conf.py",
        "class_name": "thefuck.conf._DefaultRulesNames",
        "signature": "thefuck.conf._DefaultRulesNames.__contains__(self, item)",
        "snippet": "    def __contains__(self, item):\n        return item.enabled_by_default or \\\n               super(_DefaultRulesNames, self).__contains__(item)",
        "begin_line": 13,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.conf._DefaultRulesNames.__eq__#17",
        "src_path": "thefuck/conf.py",
        "class_name": "thefuck.conf._DefaultRulesNames",
        "signature": "thefuck.conf._DefaultRulesNames.__eq__(self, other)",
        "snippet": "    def __eq__(self, other):\n        if isinstance(other, _DefaultRulesNames):\n            return super(_DefaultRulesNames, self).__eq__(other)\n        else:\n            return False",
        "begin_line": 17,
        "end_line": 21,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.conf._settings_from_file#57",
        "src_path": "thefuck/conf.py",
        "class_name": "thefuck.conf",
        "signature": "thefuck.conf._settings_from_file(user_dir)",
        "snippet": "def _settings_from_file(user_dir):\n    \"\"\"Loads settings from file.\"\"\"\n    settings = load_source('settings',\n                           text_type(user_dir.joinpath('settings.py')))\n    return {key: getattr(settings, key)\n            for key in DEFAULT_SETTINGS.keys()\n            if hasattr(settings, key)}",
        "begin_line": 57,
        "end_line": 63,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.conf._rules_from_env#66",
        "src_path": "thefuck/conf.py",
        "class_name": "thefuck.conf",
        "signature": "thefuck.conf._rules_from_env(val)",
        "snippet": "def _rules_from_env(val):\n    \"\"\"Transforms rules list from env-string to python.\"\"\"\n    val = val.split(':')\n    if 'DEFAULT_RULES' in val:\n        val = DEFAULT_RULES + [rule for rule in val if rule != 'DEFAULT_RULES']\n    return val",
        "begin_line": 66,
        "end_line": 71,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.conf._priority_from_env#74",
        "src_path": "thefuck/conf.py",
        "class_name": "thefuck.conf",
        "signature": "thefuck.conf._priority_from_env(val)",
        "snippet": "def _priority_from_env(val):\n    \"\"\"Gets priority pairs from env.\"\"\"\n    for part in val.split(':'):\n        try:\n            rule, priority = part.split('=')\n            yield rule, int(priority)\n        except ValueError:\n            continue",
        "begin_line": 74,
        "end_line": 81,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.conf._val_from_env#84",
        "src_path": "thefuck/conf.py",
        "class_name": "thefuck.conf",
        "signature": "thefuck.conf._val_from_env(env, attr)",
        "snippet": "def _val_from_env(env, attr):\n    \"\"\"Transforms env-strings to python.\"\"\"\n    val = os.environ[env]\n    if attr == 'rules':\n        return _rules_from_env(val)\n    elif attr == 'priority':\n        return dict(_priority_from_env(val))\n    elif attr == 'wait_command':\n        return int(val)\n    elif attr in ('require_confirmation', 'no_colors', 'debug'):\n        return val.lower() == 'true'\n    else:\n        return val",
        "begin_line": 84,
        "end_line": 96,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.conf._settings_from_env#99",
        "src_path": "thefuck/conf.py",
        "class_name": "thefuck.conf",
        "signature": "thefuck.conf._settings_from_env()",
        "snippet": "def _settings_from_env():\n    \"\"\"Loads settings from env.\"\"\"\n    return {attr: _val_from_env(env, attr)\n            for env, attr in ENV_TO_ATTR.items()\n            if env in os.environ}",
        "begin_line": 99,
        "end_line": 103,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0015015015015015015,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.conf.get_settings#106",
        "src_path": "thefuck/conf.py",
        "class_name": "thefuck.conf",
        "signature": "thefuck.conf.get_settings(user_dir)",
        "snippet": "def get_settings(user_dir):\n    \"\"\"Returns settings filled with values from `settings.py` and env.\"\"\"\n    conf = copy(DEFAULT_SETTINGS)\n    try:\n        conf.update(_settings_from_file(user_dir))\n    except Exception:\n        logs.exception(\"Can't load settings from file\",\n                       sys.exc_info(),\n                       types.Settings(conf))\n\n    try:\n        conf.update(_settings_from_env())\n    except Exception:\n        logs.exception(\"Can't load settings from env\",\n                       sys.exc_info(),\n                       types.Settings(conf))\n\n    if not isinstance(conf['rules'], types.RulesNamesList):\n        conf['rules'] = types.RulesNamesList(conf['rules'])\n\n    return types.Settings(conf)",
        "begin_line": 106,
        "end_line": 126,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.conf.initialize_settings_file#129",
        "src_path": "thefuck/conf.py",
        "class_name": "thefuck.conf",
        "signature": "thefuck.conf.initialize_settings_file(user_dir)",
        "snippet": "def initialize_settings_file(user_dir):\n    settings_path = user_dir.joinpath('settings.py')\n    if not settings_path.is_file():\n        with settings_path.open(mode='w') as settings_file:\n            settings_file.write(SETTINGS_HEADER)\n            for setting in DEFAULT_SETTINGS.items():\n                settings_file.write(u'# {} = {}\\n'.format(*setting))",
        "begin_line": 129,
        "end_line": 135,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_add.match#6",
        "src_path": "thefuck/rules/git_add.py",
        "class_name": "thefuck.rules.git_add",
        "signature": "thefuck.rules.git_add.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('git' in command.script\n            and 'did not match any file(s) known to git.' in command.stderr\n            and \"Did you forget to 'git add'?\" in command.stderr)",
        "begin_line": 6,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_add.get_new_command#13",
        "src_path": "thefuck/rules/git_add.py",
        "class_name": "thefuck.rules.git_add",
        "signature": "thefuck.rules.git_add.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    missing_file = re.findall(\n            r\"error: pathspec '([^']*)' \"\n            \"did not match any file\\(s\\) known to git.\", command.stderr)[0]\n\n    formatme = shells.and_('git add -- {}', '{}')\n    return formatme.format(missing_file, command.script)",
        "begin_line": 13,
        "end_line": 19,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.no_command.match#6",
        "src_path": "thefuck/rules/no_command.py",
        "class_name": "thefuck.rules.no_command",
        "signature": "thefuck.rules.no_command.match(command, settings)",
        "snippet": "def match(command, settings):\n    return 'not found' in command.stderr and \\\n           bool(get_close_matches(command.script.split(' ')[0],\n                                  get_all_executables()))",
        "begin_line": 6,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.no_command.get_new_command#13",
        "src_path": "thefuck/rules/no_command.py",
        "class_name": "thefuck.rules.no_command",
        "signature": "thefuck.rules.no_command.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    old_command = command.script.split(' ')[0]\n    new_command = get_close_matches(old_command,\n                                    get_all_executables())[0]\n    return ' '.join([new_command] + command.script.split(' ')[1:])",
        "begin_line": 13,
        "end_line": 17,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.composer_not_command.match#4",
        "src_path": "thefuck/rules/composer_not_command.py",
        "class_name": "thefuck.rules.composer_not_command",
        "signature": "thefuck.rules.composer_not_command.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('composer' in command.script\n            and ('did you mean this?' in command.stderr.lower()\n                 or 'did you mean one of these?' in command.stderr.lower()))",
        "begin_line": 4,
        "end_line": 7,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.composer_not_command.get_new_command#10",
        "src_path": "thefuck/rules/composer_not_command.py",
        "class_name": "thefuck.rules.composer_not_command",
        "signature": "thefuck.rules.composer_not_command.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    broken_cmd = re.findall(r\"Command \\\"([^']*)\\\" is not defined\", command.stderr)[0]\n    new_cmd = re.findall(r'Did you mean this\\?[^\\n]*\\n\\s*([^\\n]*)', command.stderr)\n    if not new_cmd:\n        new_cmd = re.findall(r'Did you mean one of these\\?[^\\n]*\\n\\s*([^\\n]*)', command.stderr)\n    return command.script.replace(broken_cmd, new_cmd[0].strip(), 1)",
        "begin_line": 10,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.cp_omitting_directory.match#6",
        "src_path": "thefuck/rules/cp_omitting_directory.py",
        "class_name": "thefuck.rules.cp_omitting_directory",
        "signature": "thefuck.rules.cp_omitting_directory.match(command, settings)",
        "snippet": "def match(command, settings):\n    stderr = command.stderr.lower()\n    return command.script.startswith('cp ') \\\n        and ('omitting directory' in stderr or 'is a directory' in stderr)",
        "begin_line": 6,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.cp_omitting_directory.get_new_command#13",
        "src_path": "thefuck/rules/cp_omitting_directory.py",
        "class_name": "thefuck.rules.cp_omitting_directory",
        "signature": "thefuck.rules.cp_omitting_directory.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return re.sub(r'^cp', 'cp -a', command.script)",
        "begin_line": 13,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.utils.wrap_settings#40",
        "src_path": "thefuck/utils.py",
        "class_name": "thefuck.utils",
        "signature": "thefuck.utils.wrap_settings(params)",
        "snippet": "def wrap_settings(params):\n    \"\"\"Adds default values to settings if it not presented.\n\n    Usage:\n\n        @wrap_settings({'apt': '/usr/bin/apt'})\n        def match(command, settings):\n            print(settings.apt)\n\n    \"\"\"\n    def decorator(fn):\n        @wraps(fn)\n        def wrapper(command, settings):\n            return fn(command, settings.update(**params))\n        return wrapper\n    return decorator",
        "begin_line": 40,
        "end_line": 55,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.utils.decorator#50",
        "src_path": "thefuck/utils.py",
        "class_name": "thefuck.utils",
        "signature": "thefuck.utils.decorator(fn)",
        "snippet": "    def decorator(fn):\n        @wraps(fn)\n        def wrapper(command, settings):\n            return fn(command, settings.update(**params))\n        return wrapper",
        "begin_line": 50,
        "end_line": 54,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.utils.wrapper#52",
        "src_path": "thefuck/utils.py",
        "class_name": "thefuck.utils",
        "signature": "thefuck.utils.wrapper(command, settings)",
        "snippet": "        def wrapper(command, settings):\n            return fn(command, settings.update(**params))",
        "begin_line": 52,
        "end_line": 53,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.038461538461538464,
            "pseudo_dstar_susp": 0.038461538461538464,
            "pseudo_tarantula_susp": 0.038461538461538464,
            "pseudo_op2_susp": 0.038461538461538464,
            "pseudo_barinel_susp": 0.038461538461538464
        }
    },
    {
        "name": "thefuck.utils.sudo_support#58",
        "src_path": "thefuck/utils.py",
        "class_name": "thefuck.utils",
        "signature": "thefuck.utils.sudo_support(fn)",
        "snippet": "def sudo_support(fn):\n    \"\"\"Removes sudo before calling fn and adds it after.\"\"\"\n    @wraps(fn)\n    def wrapper(command, settings):\n        if not command.script.startswith('sudo '):\n            return fn(command, settings)\n\n        result = fn(Command(command.script[5:],\n                            command.stdout,\n                            command.stderr),\n                    settings)\n\n        if result and isinstance(result, six.string_types):\n            return u'sudo {}'.format(result)\n        else:\n            return result\n    return wrapper",
        "begin_line": 58,
        "end_line": 74,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0013869625520110957,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.utils.wrapper#61",
        "src_path": "thefuck/utils.py",
        "class_name": "thefuck.utils",
        "signature": "thefuck.utils.wrapper(command, settings)",
        "snippet": "    def wrapper(command, settings):\n        if not command.script.startswith('sudo '):\n            return fn(command, settings)\n\n        result = fn(Command(command.script[5:],\n                            command.stdout,\n                            command.stderr),\n                    settings)\n\n        if result and isinstance(result, six.string_types):\n            return u'sudo {}'.format(result)\n        else:\n            return result",
        "begin_line": 61,
        "end_line": 73,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.038461538461538464,
            "pseudo_dstar_susp": 0.038461538461538464,
            "pseudo_tarantula_susp": 0.038461538461538464,
            "pseudo_op2_susp": 0.038461538461538464,
            "pseudo_barinel_susp": 0.038461538461538464
        }
    },
    {
        "name": "thefuck.utils.git_support#77",
        "src_path": "thefuck/utils.py",
        "class_name": "thefuck.utils",
        "signature": "thefuck.utils.git_support(fn)",
        "snippet": "def git_support(fn):\n    \"\"\"Resolve git aliases.\"\"\"\n    @wraps(fn)\n    def wrapper(command, settings):\n        if (command.script.startswith('git') and\n                'trace: alias expansion:' in command.stderr):\n\n            search = re.search(\"trace: alias expansion: ([^ ]*) => ([^\\n]*)\",\n                               command.stderr)\n            alias = search.group(1)\n\n            # by default git quotes everything, for example:\n            #     'commit' '--amend'\n            # which is surprising and does not allow to easily test for\n            # eg. 'git commit'\n            expansion = ' '.join(map(quote, split(search.group(2))))\n            new_script = command.script.replace(alias, expansion)\n\n            command = Command._replace(command, script=new_script)\n        return fn(command, settings)\n\n    return wrapper",
        "begin_line": 77,
        "end_line": 98,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.034482758620689655,
            "pseudo_dstar_susp": 0.034482758620689655,
            "pseudo_tarantula_susp": 0.034482758620689655,
            "pseudo_op2_susp": 0.034482758620689655,
            "pseudo_barinel_susp": 0.034482758620689655
        }
    },
    {
        "name": "thefuck.utils.wrapper#80",
        "src_path": "thefuck/utils.py",
        "class_name": "thefuck.utils",
        "signature": "thefuck.utils.wrapper(command, settings)",
        "snippet": "    def wrapper(command, settings):\n        if (command.script.startswith('git') and\n                'trace: alias expansion:' in command.stderr):\n\n            search = re.search(\"trace: alias expansion: ([^ ]*) => ([^\\n]*)\",\n                               command.stderr)\n            alias = search.group(1)\n\n            # by default git quotes everything, for example:\n            #     'commit' '--amend'\n            # which is surprising and does not allow to easily test for\n            # eg. 'git commit'\n            expansion = ' '.join(map(quote, split(search.group(2))))\n            new_script = command.script.replace(alias, expansion)\n\n            command = Command._replace(command, script=new_script)\n        return fn(command, settings)",
        "begin_line": 80,
        "end_line": 96,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.038461538461538464,
            "pseudo_dstar_susp": 0.038461538461538464,
            "pseudo_tarantula_susp": 0.038461538461538464,
            "pseudo_op2_susp": 0.038461538461538464,
            "pseudo_barinel_susp": 0.038461538461538464
        }
    },
    {
        "name": "thefuck.utils.memoize#101",
        "src_path": "thefuck/utils.py",
        "class_name": "thefuck.utils",
        "signature": "thefuck.utils.memoize(fn)",
        "snippet": "def memoize(fn):\n    \"\"\"Caches previous calls to the function.\"\"\"\n    memo = {}\n\n    @wraps(fn)\n    def wrapper(*args, **kwargs):\n        key = pickle.dumps((args, kwargs))\n        if key not in memo or memoize.disabled:\n            memo[key] = fn(*args, **kwargs)\n\n        return memo[key]\n\n    return wrapper",
        "begin_line": 101,
        "end_line": 113,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.utils.wrapper#106",
        "src_path": "thefuck/utils.py",
        "class_name": "thefuck.utils",
        "signature": "thefuck.utils.wrapper(*args, **kwargs)",
        "snippet": "    def wrapper(*args, **kwargs):\n        key = pickle.dumps((args, kwargs))\n        if key not in memo or memoize.disabled:\n            memo[key] = fn(*args, **kwargs)\n\n        return memo[key]",
        "begin_line": 106,
        "end_line": 111,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001215066828675577,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.utils.get_closest#117",
        "src_path": "thefuck/utils.py",
        "class_name": "thefuck.utils",
        "signature": "thefuck.utils.get_closest(word, possibilities, n=3, cutoff=0.6, fallback_to_first=True)",
        "snippet": "def get_closest(word, possibilities, n=3, cutoff=0.6, fallback_to_first=True):\n    \"\"\"Returns closest match or just first from possibilities.\"\"\"\n    possibilities = list(possibilities)\n    try:\n        return get_close_matches(word, possibilities, n, cutoff)[0]\n    except IndexError:\n        if fallback_to_first:\n            return possibilities[0]",
        "begin_line": 117,
        "end_line": 124,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001639344262295082,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.utils.get_all_executables#128",
        "src_path": "thefuck/utils.py",
        "class_name": "thefuck.utils",
        "signature": "thefuck.utils.get_all_executables()",
        "snippet": "def get_all_executables():\n    from thefuck.shells import thefuck_alias, get_aliases\n\n    def _safe(fn, fallback):\n        try:\n            return fn()\n        except OSError:\n            return fallback\n\n    tf_alias = thefuck_alias()\n    return [exe.name\n            for path in os.environ.get('PATH', '').split(':')\n            for exe in _safe(lambda: list(Path(path).iterdir()), [])\n            if not _safe(exe.is_dir, True)] + [\n                alias for alias in get_aliases() if alias != tf_alias]",
        "begin_line": 128,
        "end_line": 142,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.utils._safe#131",
        "src_path": "thefuck/utils.py",
        "class_name": "thefuck.utils",
        "signature": "thefuck.utils._safe(fn, fallback)",
        "snippet": "    def _safe(fn, fallback):\n        try:\n            return fn()\n        except OSError:\n            return fallback",
        "begin_line": 131,
        "end_line": 135,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.dry.match#1",
        "src_path": "thefuck/rules/dry.py",
        "class_name": "thefuck.rules.dry",
        "signature": "thefuck.rules.dry.match(command, settings)",
        "snippet": "def match(command, settings):\n    split_command = command.script.split()\n\n    return len(split_command) >= 2 and split_command[0] == split_command[1]",
        "begin_line": 1,
        "end_line": 4,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.dry.get_new_command#7",
        "src_path": "thefuck/rules/dry.py",
        "class_name": "thefuck.rules.dry",
        "signature": "thefuck.rules.dry.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return command.script[command.script.find(' ')+1:]",
        "begin_line": 7,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_push.match#5",
        "src_path": "thefuck/rules/git_push.py",
        "class_name": "thefuck.rules.git_push",
        "signature": "thefuck.rules.git_push.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('git' in command.script\n            and 'push' in command.script\n            and 'set-upstream' in command.stderr)",
        "begin_line": 5,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_push.get_new_command#12",
        "src_path": "thefuck/rules/git_push.py",
        "class_name": "thefuck.rules.git_push",
        "signature": "thefuck.rules.git_push.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return command.stderr.split('\\n')[-3].strip()",
        "begin_line": 12,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_branch_list.match#5",
        "src_path": "thefuck/rules/git_branch_list.py",
        "class_name": "thefuck.rules.git_branch_list",
        "signature": "thefuck.rules.git_branch_list.match(command, settings)",
        "snippet": "def match(command, settings):\n    # catches \"git branch list\" in place of \"git branch\"\n    return command.script.split() == 'git branch list'.split()",
        "begin_line": 5,
        "end_line": 7,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_branch_list.get_new_command#11",
        "src_path": "thefuck/rules/git_branch_list.py",
        "class_name": "thefuck.rules.git_branch_list",
        "signature": "thefuck.rules.git_branch_list.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return shells.and_('git branch --delete list', 'git branch')",
        "begin_line": 11,
        "end_line": 12,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.pip_unknown_command.match#4",
        "src_path": "thefuck/rules/pip_unknown_command.py",
        "class_name": "thefuck.rules.pip_unknown_command",
        "signature": "thefuck.rules.pip_unknown_command.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('pip' in command.script and\n            'unknown command' in command.stderr and\n            'maybe you meant' in command.stderr)",
        "begin_line": 4,
        "end_line": 7,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.pip_unknown_command.get_new_command#10",
        "src_path": "thefuck/rules/pip_unknown_command.py",
        "class_name": "thefuck.rules.pip_unknown_command",
        "signature": "thefuck.rules.pip_unknown_command.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    broken_cmd = re.findall(r'ERROR: unknown command \\\"([a-z]+)\\\"',\n                            command.stderr)[0]\n    new_cmd = re.findall(r'maybe you meant \\\"([a-z]+)\\\"', command.stderr)[0]\n\n    return command.script.replace(broken_cmd, new_cmd, 1)",
        "begin_line": 10,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.rm_root.match#8",
        "src_path": "thefuck/rules/rm_root.py",
        "class_name": "thefuck.rules.rm_root",
        "signature": "thefuck.rules.rm_root.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ({'rm', '/'}.issubset(command.script.split())\n            and '--no-preserve-root' not in command.script\n            and '--no-preserve-root' in command.stderr)",
        "begin_line": 8,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.rm_root.get_new_command#15",
        "src_path": "thefuck/rules/rm_root.py",
        "class_name": "thefuck.rules.rm_root",
        "signature": "thefuck.rules.rm_root.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return u'{} --no-preserve-root'.format(command.script)",
        "begin_line": 15,
        "end_line": 16,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.lein_not_task.match#6",
        "src_path": "thefuck/rules/lein_not_task.py",
        "class_name": "thefuck.rules.lein_not_task",
        "signature": "thefuck.rules.lein_not_task.match(command, settings)",
        "snippet": "def match(command, settings):\n    return (command.script.startswith('lein')\n            and \"is not a task. See 'lein help'\" in command.stderr\n            and 'Did you mean this?' in command.stderr)",
        "begin_line": 6,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.lein_not_task.get_new_command#13",
        "src_path": "thefuck/rules/lein_not_task.py",
        "class_name": "thefuck.rules.lein_not_task",
        "signature": "thefuck.rules.lein_not_task.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    broken_cmd = re.findall(r\"'([^']*)' is not a task\",\n                            command.stderr)[0]\n    new_cmd = re.findall(r'Did you mean this\\?\\n\\s*([^\\n]*)',\n                         command.stderr)[0]\n    return command.script.replace(broken_cmd, new_cmd, 1)",
        "begin_line": 13,
        "end_line": 18,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.man.match#1",
        "src_path": "thefuck/rules/man.py",
        "class_name": "thefuck.rules.man",
        "signature": "thefuck.rules.man.match(command, settings)",
        "snippet": "def match(command, settings):\n    return command.script.strip().startswith('man ')",
        "begin_line": 1,
        "end_line": 2,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001288659793814433,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.man.get_new_command#5",
        "src_path": "thefuck/rules/man.py",
        "class_name": "thefuck.rules.man",
        "signature": "thefuck.rules.man.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    if '3' in command.script:\n        return command.script.replace(\"3\", \"2\")\n    if '2' in command.script:\n        return command.script.replace(\"2\", \"3\")\n\n    split_cmd = command.script.split()\n    split_cmd.insert(1, ' 3 ')\n    return \"\".join(split_cmd)",
        "begin_line": 5,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.cd_mkdir.match#7",
        "src_path": "thefuck/rules/cd_mkdir.py",
        "class_name": "thefuck.rules.cd_mkdir",
        "signature": "thefuck.rules.cd_mkdir.match(command, settings)",
        "snippet": "def match(command, settings):\n    return (command.script.startswith('cd ')\n        and ('no such file or directory' in command.stderr.lower()\n            or 'cd: can\\'t cd to' in command.stderr.lower()))",
        "begin_line": 7,
        "end_line": 10,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.cd_mkdir.get_new_command#14",
        "src_path": "thefuck/rules/cd_mkdir.py",
        "class_name": "thefuck.rules.cd_mkdir",
        "signature": "thefuck.rules.cd_mkdir.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    repl = shells.and_('mkdir -p \\\\1', 'cd \\\\1')\n    return re.sub(r'^cd (.*)', repl, command.script)",
        "begin_line": 14,
        "end_line": 16,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_branch_delete.match#5",
        "src_path": "thefuck/rules/git_branch_delete.py",
        "class_name": "thefuck.rules.git_branch_delete",
        "signature": "thefuck.rules.git_branch_delete.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('git branch -d' in command.script\n            and 'If you are sure you want to delete it' in command.stderr)",
        "begin_line": 5,
        "end_line": 7,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_branch_delete.get_new_command#11",
        "src_path": "thefuck/rules/git_branch_delete.py",
        "class_name": "thefuck.rules.git_branch_delete",
        "signature": "thefuck.rules.git_branch_delete.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return command.script.replace('-d', '-D')",
        "begin_line": 11,
        "end_line": 12,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.logs.color#7",
        "src_path": "thefuck/logs.py",
        "class_name": "thefuck.logs",
        "signature": "thefuck.logs.color(color_, settings)",
        "snippet": "def color(color_, settings):\n    \"\"\"Utility for ability to disabling colored output.\"\"\"\n    if settings.no_colors:\n        return ''\n    else:\n        return color_",
        "begin_line": 7,
        "end_line": 12,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.043478260869565216,
            "pseudo_dstar_susp": 0.043478260869565216,
            "pseudo_tarantula_susp": 0.043478260869565216,
            "pseudo_op2_susp": 0.043478260869565216,
            "pseudo_barinel_susp": 0.043478260869565216
        }
    },
    {
        "name": "thefuck.logs.exception#15",
        "src_path": "thefuck/logs.py",
        "class_name": "thefuck.logs",
        "signature": "thefuck.logs.exception(title, exc_info, settings)",
        "snippet": "def exception(title, exc_info, settings):\n    sys.stderr.write(\n        u'{warn}[WARN] {title}:{reset}\\n{trace}'\n        u'{warn}----------------------------{reset}\\n\\n'.format(\n            warn=color(colorama.Back.RED + colorama.Fore.WHITE\n                       + colorama.Style.BRIGHT, settings),\n            reset=color(colorama.Style.RESET_ALL, settings),\n            title=title,\n            trace=''.join(format_exception(*exc_info))))",
        "begin_line": 15,
        "end_line": 23,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.logs.rule_failed#26",
        "src_path": "thefuck/logs.py",
        "class_name": "thefuck.logs",
        "signature": "thefuck.logs.rule_failed(rule, exc_info, settings)",
        "snippet": "def rule_failed(rule, exc_info, settings):\n    exception('Rule {}'.format(rule.name), exc_info, settings)",
        "begin_line": 26,
        "end_line": 27,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.logs.show_command#30",
        "src_path": "thefuck/logs.py",
        "class_name": "thefuck.logs",
        "signature": "thefuck.logs.show_command(new_command, side_effect, settings)",
        "snippet": "def show_command(new_command, side_effect, settings):\n    sys.stderr.write('{bold}{command}{side_effect}{reset}\\n'.format(\n        command=new_command,\n        side_effect='*' if side_effect else '',\n        bold=color(colorama.Style.BRIGHT, settings),\n        reset=color(colorama.Style.RESET_ALL, settings)))",
        "begin_line": 30,
        "end_line": 35,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.logs.confirm_command#38",
        "src_path": "thefuck/logs.py",
        "class_name": "thefuck.logs",
        "signature": "thefuck.logs.confirm_command(new_command, side_effect, settings)",
        "snippet": "def confirm_command(new_command, side_effect, settings):\n    sys.stderr.write(\n        '{bold}{command}{side_effect}{reset} '\n        '[{green}enter{reset}/{red}ctrl+c{reset}]'.format(\n            command=new_command,\n            side_effect='*' if side_effect else '',\n            bold=color(colorama.Style.BRIGHT, settings),\n            green=color(colorama.Fore.GREEN, settings),\n            red=color(colorama.Fore.RED, settings),\n            reset=color(colorama.Style.RESET_ALL, settings)))\n    sys.stderr.flush()",
        "begin_line": 38,
        "end_line": 48,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.logs.failed#51",
        "src_path": "thefuck/logs.py",
        "class_name": "thefuck.logs",
        "signature": "thefuck.logs.failed(msg, settings)",
        "snippet": "def failed(msg, settings):\n    sys.stderr.write('{red}{msg}{reset}\\n'.format(\n        msg=msg,\n        red=color(colorama.Fore.RED, settings),\n        reset=color(colorama.Style.RESET_ALL, settings)))",
        "begin_line": 51,
        "end_line": 55,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.logs.debug#58",
        "src_path": "thefuck/logs.py",
        "class_name": "thefuck.logs",
        "signature": "thefuck.logs.debug(msg, settings)",
        "snippet": "def debug(msg, settings):\n    if settings.debug:\n        sys.stderr.write(u'{blue}{bold}DEBUG:{reset} {msg}\\n'.format(\n            msg=msg,\n            reset=color(colorama.Style.RESET_ALL, settings),\n            blue=color(colorama.Fore.BLUE, settings),\n            bold=color(colorama.Style.BRIGHT, settings)))",
        "begin_line": 58,
        "end_line": 64,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.05555555555555555,
            "pseudo_dstar_susp": 0.05555555555555555,
            "pseudo_tarantula_susp": 0.05555555555555555,
            "pseudo_op2_susp": 0.05555555555555555,
            "pseudo_barinel_susp": 0.05555555555555555
        }
    },
    {
        "name": "thefuck.rules.cargo_no_command.match#4",
        "src_path": "thefuck/rules/cargo_no_command.py",
        "class_name": "thefuck.rules.cargo_no_command",
        "signature": "thefuck.rules.cargo_no_command.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('cargo' in command.script\n            and 'No such subcommand' in command.stderr\n            and 'Did you mean' in command.stderr)",
        "begin_line": 4,
        "end_line": 7,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.cargo_no_command.get_new_command#10",
        "src_path": "thefuck/rules/cargo_no_command.py",
        "class_name": "thefuck.rules.cargo_no_command",
        "signature": "thefuck.rules.cargo_no_command.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    broken = command.script.split()[1]\n    fix = re.findall(r'Did you mean `([^`]*)`', command.stderr)[0]\n\n    return command.script.replace(broken, fix, 1)",
        "begin_line": 10,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_not_command.match#6",
        "src_path": "thefuck/rules/git_not_command.py",
        "class_name": "thefuck.rules.git_not_command",
        "signature": "thefuck.rules.git_not_command.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('git' in command.script\n            and \" is not a git command. See 'git --help'.\" in command.stderr\n            and 'Did you mean' in command.stderr)",
        "begin_line": 6,
        "end_line": 9,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_not_command._get_all_git_matched_commands#12",
        "src_path": "thefuck/rules/git_not_command.py",
        "class_name": "thefuck.rules.git_not_command",
        "signature": "thefuck.rules.git_not_command._get_all_git_matched_commands(stderr)",
        "snippet": "def _get_all_git_matched_commands(stderr):\n    should_yield = False\n    for line in stderr.split('\\n'):\n        if 'Did you mean' in line:\n            should_yield = True\n        elif should_yield and line:\n            yield line.strip()",
        "begin_line": 12,
        "end_line": 18,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_not_command.get_new_command#22",
        "src_path": "thefuck/rules/git_not_command.py",
        "class_name": "thefuck.rules.git_not_command",
        "signature": "thefuck.rules.git_not_command.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    broken_cmd = re.findall(r\"git: '([^']*)' is not a git command\",\n                            command.stderr)[0]\n    new_cmd = get_closest(broken_cmd,\n                          _get_all_git_matched_commands(command.stderr))\n    return command.script.replace(broken_cmd, new_cmd, 1)",
        "begin_line": 22,
        "end_line": 27,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.fix_alt_space.match#8",
        "src_path": "thefuck/rules/fix_alt_space.py",
        "class_name": "thefuck.rules.fix_alt_space",
        "signature": "thefuck.rules.fix_alt_space.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('command not found' in command.stderr.lower()\n            and u'\u00a0' in command.script)",
        "begin_line": 8,
        "end_line": 10,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.fix_alt_space.get_new_command#14",
        "src_path": "thefuck/rules/fix_alt_space.py",
        "class_name": "thefuck.rules.fix_alt_space",
        "signature": "thefuck.rules.fix_alt_space.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return re.sub(u'\u00a0', ' ', command.script)",
        "begin_line": 14,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.go_run.match#9",
        "src_path": "thefuck/rules/go_run.py",
        "class_name": "thefuck.rules.go_run",
        "signature": "thefuck.rules.go_run.match(command, settings)",
        "snippet": "def match(command, settings):\n    return (command.script.startswith ('go run ')\n            and not command.script.endswith('.go'))",
        "begin_line": 9,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.go_run.get_new_command#13",
        "src_path": "thefuck/rules/go_run.py",
        "class_name": "thefuck.rules.go_run",
        "signature": "thefuck.rules.go_run.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return command.script + '.go'",
        "begin_line": 13,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.main.load_rule#24",
        "src_path": "thefuck/main.py",
        "class_name": "thefuck.main",
        "signature": "thefuck.main.load_rule(rule)",
        "snippet": "def load_rule(rule):\n    \"\"\"Imports rule module and returns it.\"\"\"\n    rule_module = load_source(rule.name[:-3], str(rule))\n    return types.Rule(rule.name[:-3], rule_module.match,\n                      rule_module.get_new_command,\n                      getattr(rule_module, 'enabled_by_default', True),\n                      getattr(rule_module, 'side_effect', None),\n                      getattr(rule_module, 'priority', conf.DEFAULT_PRIORITY))",
        "begin_line": 24,
        "end_line": 31,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.main._get_loaded_rules#34",
        "src_path": "thefuck/main.py",
        "class_name": "thefuck.main",
        "signature": "thefuck.main._get_loaded_rules(rules, settings)",
        "snippet": "def _get_loaded_rules(rules, settings):\n    \"\"\"Yields all available rules.\"\"\"\n    for rule in rules:\n        if rule.name != '__init__.py':\n            loaded_rule = load_rule(rule)\n            if loaded_rule in settings.rules:\n                yield loaded_rule",
        "begin_line": 34,
        "end_line": 40,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.main.get_rules#43",
        "src_path": "thefuck/main.py",
        "class_name": "thefuck.main",
        "signature": "thefuck.main.get_rules(user_dir, settings)",
        "snippet": "def get_rules(user_dir, settings):\n    \"\"\"Returns all enabled rules.\"\"\"\n    bundled = Path(__file__).parent \\\n        .joinpath('rules') \\\n        .glob('*.py')\n    user = user_dir.joinpath('rules').glob('*.py')\n    rules = _get_loaded_rules(sorted(bundled) + sorted(user), settings)\n    return sorted(rules, key=lambda rule: settings.priority.get(\n        rule.name, rule.priority))",
        "begin_line": 43,
        "end_line": 51,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0015015015015015015,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.main.get_command#72",
        "src_path": "thefuck/main.py",
        "class_name": "thefuck.main",
        "signature": "thefuck.main.get_command(settings, args)",
        "snippet": "def get_command(settings, args):\n    \"\"\"Creates command from `args` and executes it.\"\"\"\n    if six.PY2:\n        script = ' '.join(arg.decode('utf-8') for arg in args[1:])\n    else:\n        script = ' '.join(args[1:])\n\n    if not script:\n        return\n\n    script = shells.from_shell(script)\n    logs.debug(u'Call: {}'.format(script), settings)\n\n    env = dict(os.environ)\n    env.update(settings.env)\n    logs.debug(u'Executing with env: {}'.format(env), settings)\n\n    result = Popen(script, shell=True, stdout=PIPE, stderr=PIPE, env=env)\n    if wait_output(settings, result):\n        return types.Command(script, result.stdout.read().decode('utf-8'),\n                             result.stderr.read().decode('utf-8'))",
        "begin_line": 72,
        "end_line": 92,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.1111111111111111,
            "pseudo_dstar_susp": 0.1111111111111111,
            "pseudo_tarantula_susp": 0.1111111111111111,
            "pseudo_op2_susp": 0.1111111111111111,
            "pseudo_barinel_susp": 0.1111111111111111
        }
    },
    {
        "name": "thefuck.main.get_matched_rule#95",
        "src_path": "thefuck/main.py",
        "class_name": "thefuck.main",
        "signature": "thefuck.main.get_matched_rule(command, rules, settings)",
        "snippet": "def get_matched_rule(command, rules, settings):\n    \"\"\"Returns first matched rule for command.\"\"\"\n    for rule in rules:\n        try:\n            logs.debug(u'Trying rule: {}'.format(rule.name), settings)\n            if rule.match(command, settings):\n                return rule\n        except Exception:\n            logs.rule_failed(rule, sys.exc_info(), settings)",
        "begin_line": 95,
        "end_line": 103,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.main.confirm#106",
        "src_path": "thefuck/main.py",
        "class_name": "thefuck.main",
        "signature": "thefuck.main.confirm(new_command, side_effect, settings)",
        "snippet": "def confirm(new_command, side_effect, settings):\n    \"\"\"Returns `True` when running of new command confirmed.\"\"\"\n    if not settings.require_confirmation:\n        logs.show_command(new_command, side_effect, settings)\n        return True\n\n    logs.confirm_command(new_command, side_effect, settings)\n    try:\n        sys.stdin.read(1)\n        return True\n    except KeyboardInterrupt:\n        logs.failed('Aborted', settings)\n        return False",
        "begin_line": 106,
        "end_line": 118,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.main.run_rule#121",
        "src_path": "thefuck/main.py",
        "class_name": "thefuck.main",
        "signature": "thefuck.main.run_rule(rule, command, settings)",
        "snippet": "def run_rule(rule, command, settings):\n    \"\"\"Runs command from rule for passed command.\"\"\"\n    new_command = shells.to_shell(rule.get_new_command(command, settings))\n    if confirm(new_command, rule.side_effect, settings):\n        if rule.side_effect:\n            rule.side_effect(command, settings)\n        shells.put_to_history(new_command)\n        print(new_command)",
        "begin_line": 121,
        "end_line": 128,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.javac.match#9",
        "src_path": "thefuck/rules/javac.py",
        "class_name": "thefuck.rules.javac",
        "signature": "thefuck.rules.javac.match(command, settings)",
        "snippet": "def match(command, settings):\n    return (command.script.startswith('javac ')\n            and not command.script.endswith('.java'))",
        "begin_line": 9,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.javac.get_new_command#14",
        "src_path": "thefuck/rules/javac.py",
        "class_name": "thefuck.rules.javac",
        "signature": "thefuck.rules.javac.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return command.script + '.java'",
        "begin_line": 14,
        "end_line": 15,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.brew_upgrade.match#10",
        "src_path": "thefuck/rules/brew_upgrade.py",
        "class_name": "thefuck.rules.brew_upgrade",
        "signature": "thefuck.rules.brew_upgrade.match(command, settings)",
        "snippet": "def match(command, settings):\n    return (command.script == 'brew upgrade')",
        "begin_line": 10,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.brew_upgrade.get_new_command#13",
        "src_path": "thefuck/rules/brew_upgrade.py",
        "class_name": "thefuck.rules.brew_upgrade",
        "signature": "thefuck.rules.brew_upgrade.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return command.script + ' --all'",
        "begin_line": 13,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_diff_staged.match#5",
        "src_path": "thefuck/rules/git_diff_staged.py",
        "class_name": "thefuck.rules.git_diff_staged",
        "signature": "thefuck.rules.git_diff_staged.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('git' in command.script and\n            'diff' in command.script and\n            '--staged' not in command.script)",
        "begin_line": 5,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_diff_staged.get_new_command#12",
        "src_path": "thefuck/rules/git_diff_staged.py",
        "class_name": "thefuck.rules.git_diff_staged",
        "signature": "thefuck.rules.git_diff_staged.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return '{} --staged'.format(command.script)",
        "begin_line": 12,
        "end_line": 13,
        "comment": "",
        "is_bug": true,
        "susp": {
            "pseudo_ochiai_susp": 1.0,
            "pseudo_dstar_susp": 1.0,
            "pseudo_tarantula_susp": 1.0,
            "pseudo_op2_susp": 1.0,
            "pseudo_barinel_susp": 1.0
        }
    },
    {
        "name": "thefuck.rules.mercurial.extract_possisiblities#5",
        "src_path": "thefuck/rules/mercurial.py",
        "class_name": "thefuck.rules.mercurial",
        "signature": "thefuck.rules.mercurial.extract_possisiblities(command)",
        "snippet": "def extract_possisiblities(command):\n    possib = re.findall(r'\\n\\(did you mean one of ([^\\?]+)\\?\\)', command.stderr)\n    if possib:\n        return possib[0].split(', ')\n    possib = re.findall(r'\\n    ([^$]+)$', command.stderr)\n    if possib:\n        return possib[0].split(' ')\n    return possib",
        "begin_line": 5,
        "end_line": 12,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001639344262295082,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.mercurial.match#15",
        "src_path": "thefuck/rules/mercurial.py",
        "class_name": "thefuck.rules.mercurial",
        "signature": "thefuck.rules.mercurial.match(command, settings)",
        "snippet": "def match(command, settings):\n    return (command.script.startswith('hg ')\n            and ('hg: unknown command' in command.stderr\n                 and '(did you mean one of ' in command.stderr\n                 or \"hg: command '\" in command.stderr\n                 and \"' is ambiguous:\" in command.stderr\n                 )\n            )",
        "begin_line": 15,
        "end_line": 22,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.mercurial.get_new_command#25",
        "src_path": "thefuck/rules/mercurial.py",
        "class_name": "thefuck.rules.mercurial",
        "signature": "thefuck.rules.mercurial.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    script = command.script.split(' ')\n    possisiblities = extract_possisiblities(command)\n    script[1] = get_closest(script[1], possisiblities)\n    return ' '.join(script)",
        "begin_line": 25,
        "end_line": 29,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001321003963011889,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.rm_dir.match#6",
        "src_path": "thefuck/rules/rm_dir.py",
        "class_name": "thefuck.rules.rm_dir",
        "signature": "thefuck.rules.rm_dir.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('rm' in command.script\n            and 'is a directory' in command.stderr.lower())",
        "begin_line": 6,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001639344262295082,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.rm_dir.get_new_command#12",
        "src_path": "thefuck/rules/rm_dir.py",
        "class_name": "thefuck.rules.rm_dir",
        "signature": "thefuck.rules.rm_dir.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return re.sub('^rm (.*)', 'rm -rf \\\\1', command.script)",
        "begin_line": 12,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.quotation_marks.match#9",
        "src_path": "thefuck/rules/quotation_marks.py",
        "class_name": "thefuck.rules.quotation_marks",
        "signature": "thefuck.rules.quotation_marks.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('\\'' in command.script\n            and '\\\"' in command.script)",
        "begin_line": 9,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.quotation_marks.get_new_command#13",
        "src_path": "thefuck/rules/quotation_marks.py",
        "class_name": "thefuck.rules.quotation_marks",
        "signature": "thefuck.rules.quotation_marks.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return command.script.replace ('\\'', '\\\"')",
        "begin_line": 13,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.sed_unterminated_s.match#5",
        "src_path": "thefuck/rules/sed_unterminated_s.py",
        "class_name": "thefuck.rules.sed_unterminated_s",
        "signature": "thefuck.rules.sed_unterminated_s.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('sed' in command.script\n            and \"unterminated `s' command\" in command.stderr)",
        "begin_line": 5,
        "end_line": 7,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.sed_unterminated_s.get_new_command#10",
        "src_path": "thefuck/rules/sed_unterminated_s.py",
        "class_name": "thefuck.rules.sed_unterminated_s",
        "signature": "thefuck.rules.sed_unterminated_s.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    script = shlex.split(command.script)\n\n    for (i, e) in enumerate(script):\n        if e.startswith(('s/', '-es/')) and e[-1] != '/':\n            script[i] += '/'\n\n    return ' '.join(map(quote, script))",
        "begin_line": 10,
        "end_line": 17,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.sudo.match#20",
        "src_path": "thefuck/rules/sudo.py",
        "class_name": "thefuck.rules.sudo",
        "signature": "thefuck.rules.sudo.match(command, settings)",
        "snippet": "def match(command, settings):\n    for pattern in patterns:\n        if pattern.lower() in command.stderr.lower()\\\n                or pattern.lower() in command.stdout.lower():\n            return True\n    return False",
        "begin_line": 20,
        "end_line": 25,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.sudo.get_new_command#28",
        "src_path": "thefuck/rules/sudo.py",
        "class_name": "thefuck.rules.sudo",
        "signature": "thefuck.rules.sudo.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return u'sudo {}'.format(command.script)",
        "begin_line": 28,
        "end_line": 29,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.python_command.match#8",
        "src_path": "thefuck/rules/python_command.py",
        "class_name": "thefuck.rules.python_command",
        "signature": "thefuck.rules.python_command.match(command, settings)",
        "snippet": "def match(command, settings):\n    toks = command.script.split()\n    return (len(toks) > 0\n            and toks[0].endswith('.py')\n            and ('Permission denied' in command.stderr or\n                 'command not found' in command.stderr))",
        "begin_line": 8,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.python_command.get_new_command#17",
        "src_path": "thefuck/rules/python_command.py",
        "class_name": "thefuck.rules.python_command",
        "signature": "thefuck.rules.python_command.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return 'python ' + command.script",
        "begin_line": 17,
        "end_line": 18,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.brew_unknown_command._get_similar_command#80",
        "src_path": "thefuck/rules/brew_unknown_command.py",
        "class_name": "thefuck.rules.brew_unknown_command",
        "signature": "thefuck.rules.brew_unknown_command._get_similar_command(command)",
        "snippet": "def _get_similar_command(command):\n    return get_closest(command, brew_commands)",
        "begin_line": 80,
        "end_line": 81,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0024509803921568627,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.brew_unknown_command.match#84",
        "src_path": "thefuck/rules/brew_unknown_command.py",
        "class_name": "thefuck.rules.brew_unknown_command",
        "signature": "thefuck.rules.brew_unknown_command.match(command, settings)",
        "snippet": "def match(command, settings):\n    is_proper_command = ('brew' in command.script and\n                         'Unknown command' in command.stderr)\n\n    has_possible_commands = False\n    if is_proper_command:\n        broken_cmd = re.findall(r'Error: Unknown command: ([a-z]+)',\n                                command.stderr)[0]\n        has_possible_commands = bool(_get_similar_command(broken_cmd))\n\n    return has_possible_commands",
        "begin_line": 84,
        "end_line": 94,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.brew_unknown_command.get_new_command#97",
        "src_path": "thefuck/rules/brew_unknown_command.py",
        "class_name": "thefuck.rules.brew_unknown_command",
        "signature": "thefuck.rules.brew_unknown_command.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    broken_cmd = re.findall(r'Error: Unknown command: ([a-z]+)',\n                            command.stderr)[0]\n    new_cmd = _get_similar_command(broken_cmd)\n\n    return command.script.replace(broken_cmd, new_cmd, 1)",
        "begin_line": 97,
        "end_line": 102,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_push_pull.match#6",
        "src_path": "thefuck/rules/git_push_pull.py",
        "class_name": "thefuck.rules.git_push_pull",
        "signature": "thefuck.rules.git_push_pull.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('git' in command.script\n            and 'push' in command.script\n            and '! [rejected]' in command.stderr\n            and 'failed to push some refs to' in command.stderr\n            and 'Updates were rejected because the tip of your current branch is behind' in command.stderr)",
        "begin_line": 6,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_push_pull.get_new_command#15",
        "src_path": "thefuck/rules/git_push_pull.py",
        "class_name": "thefuck.rules.git_push_pull",
        "signature": "thefuck.rules.git_push_pull.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return and_(command.script.replace('push', 'pull'),\n                command.script)",
        "begin_line": 15,
        "end_line": 17,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.mkdir_p.match#6",
        "src_path": "thefuck/rules/mkdir_p.py",
        "class_name": "thefuck.rules.mkdir_p",
        "signature": "thefuck.rules.mkdir_p.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('mkdir' in command.script\n            and 'No such file or directory' in command.stderr)",
        "begin_line": 6,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.mkdir_p.get_new_command#12",
        "src_path": "thefuck/rules/mkdir_p.py",
        "class_name": "thefuck.rules.mkdir_p",
        "signature": "thefuck.rules.mkdir_p.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return re.sub('^mkdir (.*)', 'mkdir -p \\\\1', command.script)",
        "begin_line": 12,
        "end_line": 13,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.pacman.__get_pkgfile#8",
        "src_path": "thefuck/rules/pacman.py",
        "class_name": "thefuck.rules.pacman",
        "signature": "thefuck.rules.pacman.__get_pkgfile(command)",
        "snippet": "def __get_pkgfile(command):\n    try:\n        command = command.script\n\n        if command.startswith('sudo'):\n            command = command[5:]\n\n        command = command.split(\" \")[0]\n\n        return subprocess.check_output(\n            ['pkgfile', '-b', '-v', command],\n            universal_newlines=True, stderr=DEVNULL\n        ).split()\n    except subprocess.CalledProcessError:\n        return None",
        "begin_line": 8,
        "end_line": 22,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001876172607879925,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.pacman.match#25",
        "src_path": "thefuck/rules/pacman.py",
        "class_name": "thefuck.rules.pacman",
        "signature": "thefuck.rules.pacman.match(command, settings)",
        "snippet": "def match(command, settings):\n    return 'not found' in command.stderr and __get_pkgfile(command)",
        "begin_line": 25,
        "end_line": 26,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0013869625520110957,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.pacman.get_new_command#29",
        "src_path": "thefuck/rules/pacman.py",
        "class_name": "thefuck.rules.pacman",
        "signature": "thefuck.rules.pacman.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    package = __get_pkgfile(command)[0]\n\n    formatme = shells.and_('{} -S {}', '{}')\n    return formatme.format(pacman, package, command.script)",
        "begin_line": 29,
        "end_line": 33,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001639344262295082,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.open.match#10",
        "src_path": "thefuck/rules/open.py",
        "class_name": "thefuck.rules.open",
        "signature": "thefuck.rules.open.match(command, settings)",
        "snippet": "def match(command, settings):\n    return (command.script.startswith(('open', 'xdg-open', 'gnome-open', 'kde-open'))\n            and (\n                '.com' in command.script\n                or '.net' in command.script\n                or '.org' in command.script\n                or '.ly' in command.script\n                or '.io' in command.script\n                or '.se' in command.script\n                or '.edu' in command.script\n                or '.info' in command.script\n                or '.me' in command.script\n                or 'www.' in command.script))",
        "begin_line": 10,
        "end_line": 22,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.open.get_new_command#25",
        "src_path": "thefuck/rules/open.py",
        "class_name": "thefuck.rules.open",
        "signature": "thefuck.rules.open.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return 'open http://' + command.script[5:]",
        "begin_line": 25,
        "end_line": 26,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.0013869625520110957,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_pull.match#5",
        "src_path": "thefuck/rules/git_pull.py",
        "class_name": "thefuck.rules.git_pull",
        "signature": "thefuck.rules.git_pull.match(command, settings)",
        "snippet": "def match(command, settings):\n    return ('git' in command.script\n            and 'pull' in command.script\n            and 'set-upstream' in command.stderr)",
        "begin_line": 5,
        "end_line": 8,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.git_pull.get_new_command#12",
        "src_path": "thefuck/rules/git_pull.py",
        "class_name": "thefuck.rules.git_pull",
        "signature": "thefuck.rules.git_pull.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    line = command.stderr.split('\\n')[-3].strip()\n    branch = line.split(' ')[-1]\n    set_upstream = line.replace('<remote>', 'origin')\\\n                       .replace('<branch>', branch)\n    return shells.and_(set_upstream, command.script)",
        "begin_line": 12,
        "end_line": 17,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.whois.match#5",
        "src_path": "thefuck/rules/whois.py",
        "class_name": "thefuck.rules.whois",
        "signature": "thefuck.rules.whois.match(command, settings)",
        "snippet": "def match(command, settings):\n    \"\"\"\n    What the `whois` command returns depends on the 'Whois server' it contacted\n    and is not consistent through different servers. But there can be only two\n    types of errors I can think of with `whois`:\n        - `whois https://en.wikipedia.org/` \u2192 `whois en.wikipedia.org`;\n        - `whois en.wikipedia.org` \u2192 `whois wikipedia.org`.\n    So we match any `whois` command and then:\n        - if there is a slash: keep only the FQDN;\n        - if there is no slash but there is a point: removes the left-most\n          subdomain.\n\n    We cannot either remove all subdomains because we cannot know which part is\n    the subdomains and which is the domain, consider:\n        - www.google.fr \u2192 subdomain: www, domain: 'google.fr';\n        - google.co.uk \u2192 subdomain: None, domain; 'google.co.uk'.\n    \"\"\"\n    return 'whois' in command.script and len(command.script.split()) > 1",
        "begin_line": 5,
        "end_line": 22,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.001639344262295082,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.whois.get_new_command#25",
        "src_path": "thefuck/rules/whois.py",
        "class_name": "thefuck.rules.whois",
        "signature": "thefuck.rules.whois.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    url = command.script.split()[1]\n\n    if '/' in command.script:\n        return 'whois ' + urlparse(url).netloc\n    elif '.' in command.script:\n        return 'whois ' + '.'.join(urlparse(url).path.split('.')[1:])",
        "begin_line": 25,
        "end_line": 31,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.cd_parent.match#10",
        "src_path": "thefuck/rules/cd_parent.py",
        "class_name": "thefuck.rules.cd_parent",
        "signature": "thefuck.rules.cd_parent.match(command, settings)",
        "snippet": "def match(command, settings):\n    return command.script == 'cd..'",
        "begin_line": 10,
        "end_line": 11,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.cd_parent.get_new_command#13",
        "src_path": "thefuck/rules/cd_parent.py",
        "class_name": "thefuck.rules.cd_parent",
        "signature": "thefuck.rules.cd_parent.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return 'cd ..'",
        "begin_line": 13,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.sl_ls.match#9",
        "src_path": "thefuck/rules/sl_ls.py",
        "class_name": "thefuck.rules.sl_ls",
        "signature": "thefuck.rules.sl_ls.match(command, settings)",
        "snippet": "def match(command, settings):\n    return command.script == 'sl'",
        "begin_line": 9,
        "end_line": 10,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    },
    {
        "name": "thefuck.rules.sl_ls.get_new_command#13",
        "src_path": "thefuck/rules/sl_ls.py",
        "class_name": "thefuck.rules.sl_ls",
        "signature": "thefuck.rules.sl_ls.get_new_command(command, settings)",
        "snippet": "def get_new_command(command, settings):\n    return 'ls'",
        "begin_line": 13,
        "end_line": 14,
        "comment": "",
        "is_bug": false,
        "susp": {
            "pseudo_ochiai_susp": 0.0023148148148148147,
            "pseudo_dstar_susp": 0.0023148148148148147,
            "pseudo_tarantula_susp": 0.0023148148148148147,
            "pseudo_op2_susp": 0.00546448087431694,
            "pseudo_barinel_susp": 0.0023148148148148147
        }
    }
]