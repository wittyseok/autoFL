coverage run -m pytest tests/test_downloads.py::TestDownloadUtils::test_unique_filename
============================= test session starts ==============================
platform linux -- Python 3.7.3, pytest-3.2.1, py-1.8.1, pluggy-0.4.0
rootdir: /home/user/BugsInPy/temp/projects/httpie, inifile: pytest.ini
plugins: httpbin-1.0.0
collected 11 items

tests/test_downloads.py FFFFFFFFFFF

=================================== FAILURES ===================================
__________ TestDownloadUtils.test_unique_filename[foo.bar-0-foo.bar] ___________

args = (<test_downloads.TestDownloadUtils object at 0x7f692a89d9e8>,)
keywargs = {'expected': 'foo.bar', 'orig_name': 'foo.bar', 'unique_on_attempt': 0}

    @wraps(func)
    def patched(*args, **keywargs):
        with self.decoration_helper(patched,
                                    args,
>                                   keywargs) as (newargs, newkeywargs):

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1368: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/contextlib.py:112: in __enter__
    return next(self.gen)
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1334: in decoration_helper
    arg = patching.__enter__()
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1437: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <mock.mock._patch object at 0x7f692ac21630>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
            raise AttributeError(
>               "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'httpie.downloads' from '/home/user/BugsInPy/temp/projects/httpie/httpie/downloads.py'> does not have the attribute 'get_filename_max_length'

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1411: AttributeError
_________ TestDownloadUtils.test_unique_filename[foo.bar-1-foo.bar-1] __________

args = (<test_downloads.TestDownloadUtils object at 0x7f692a83ada0>,)
keywargs = {'expected': 'foo.bar-1', 'orig_name': 'foo.bar', 'unique_on_attempt': 1}

    @wraps(func)
    def patched(*args, **keywargs):
        with self.decoration_helper(patched,
                                    args,
>                                   keywargs) as (newargs, newkeywargs):

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1368: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/contextlib.py:112: in __enter__
    return next(self.gen)
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1334: in decoration_helper
    arg = patching.__enter__()
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1437: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <mock.mock._patch object at 0x7f692ac21630>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
            raise AttributeError(
>               "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'httpie.downloads' from '/home/user/BugsInPy/temp/projects/httpie/httpie/downloads.py'> does not have the attribute 'get_filename_max_length'

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1411: AttributeError
________ TestDownloadUtils.test_unique_filename[foo.bar-10-foo.bar-10] _________

args = (<test_downloads.TestDownloadUtils object at 0x7f692a41c8d0>,)
keywargs = {'expected': 'foo.bar-10', 'orig_name': 'foo.bar', 'unique_on_attempt': 10}

    @wraps(func)
    def patched(*args, **keywargs):
        with self.decoration_helper(patched,
                                    args,
>                                   keywargs) as (newargs, newkeywargs):

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1368: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/contextlib.py:112: in __enter__
    return next(self.gen)
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1334: in decoration_helper
    arg = patching.__enter__()
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1437: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <mock.mock._patch object at 0x7f692ac21630>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
            raise AttributeError(
>               "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'httpie.downloads' from '/home/user/BugsInPy/temp/projects/httpie/httpie/downloads.py'> does not have the attribute 'get_filename_max_length'

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1411: AttributeError
__ TestDownloadUtils.test_unique_filename[AAAAAAAAAAAAAAAAAAAA-0-AAAAAAAAAA] ___

args = (<test_downloads.TestDownloadUtils object at 0x7f692a7dcdd8>,)
keywargs = {'expected': 'AAAAAAAAAA', 'orig_name': 'AAAAAAAAAAAAAAAAAAAA', 'unique_on_attempt': 0}

    @wraps(func)
    def patched(*args, **keywargs):
        with self.decoration_helper(patched,
                                    args,
>                                   keywargs) as (newargs, newkeywargs):

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1368: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/contextlib.py:112: in __enter__
    return next(self.gen)
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1334: in decoration_helper
    arg = patching.__enter__()
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1437: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <mock.mock._patch object at 0x7f692ac21630>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
            raise AttributeError(
>               "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'httpie.downloads' from '/home/user/BugsInPy/temp/projects/httpie/httpie/downloads.py'> does not have the attribute 'get_filename_max_length'

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1411: AttributeError
__ TestDownloadUtils.test_unique_filename[AAAAAAAAAAAAAAAAAAAA-1-AAAAAAAA-1] ___

args = (<test_downloads.TestDownloadUtils object at 0x7f692a41c048>,)
keywargs = {'expected': 'AAAAAAAA-1', 'orig_name': 'AAAAAAAAAAAAAAAAAAAA', 'unique_on_attempt': 1}

    @wraps(func)
    def patched(*args, **keywargs):
        with self.decoration_helper(patched,
                                    args,
>                                   keywargs) as (newargs, newkeywargs):

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1368: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/contextlib.py:112: in __enter__
    return next(self.gen)
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1334: in decoration_helper
    arg = patching.__enter__()
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1437: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <mock.mock._patch object at 0x7f692ac21630>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
            raise AttributeError(
>               "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'httpie.downloads' from '/home/user/BugsInPy/temp/projects/httpie/httpie/downloads.py'> does not have the attribute 'get_filename_max_length'

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1411: AttributeError
__ TestDownloadUtils.test_unique_filename[AAAAAAAAAAAAAAAAAAAA-10-AAAAAAA-10] __

args = (<test_downloads.TestDownloadUtils object at 0x7f692a88c4e0>,)
keywargs = {'expected': 'AAAAAAA-10', 'orig_name': 'AAAAAAAAAAAAAAAAAAAA', 'unique_on_attempt': 10}

    @wraps(func)
    def patched(*args, **keywargs):
        with self.decoration_helper(patched,
                                    args,
>                                   keywargs) as (newargs, newkeywargs):

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1368: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/contextlib.py:112: in __enter__
    return next(self.gen)
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1334: in decoration_helper
    arg = patching.__enter__()
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1437: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <mock.mock._patch object at 0x7f692ac21630>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
            raise AttributeError(
>               "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'httpie.downloads' from '/home/user/BugsInPy/temp/projects/httpie/httpie/downloads.py'> does not have the attribute 'get_filename_max_length'

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1411: AttributeError
_ TestDownloadUtils.test_unique_filename[AAAAAAAAAAAAAAAAAAAA.txt-0-AAAAAA.txt] _

args = (<test_downloads.TestDownloadUtils object at 0x7f692a784ac8>,)
keywargs = {'expected': 'AAAAAA.txt', 'orig_name': 'AAAAAAAAAAAAAAAAAAAA.txt', 'unique_on_attempt': 0}

    @wraps(func)
    def patched(*args, **keywargs):
        with self.decoration_helper(patched,
                                    args,
>                                   keywargs) as (newargs, newkeywargs):

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1368: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/contextlib.py:112: in __enter__
    return next(self.gen)
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1334: in decoration_helper
    arg = patching.__enter__()
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1437: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <mock.mock._patch object at 0x7f692ac21630>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
            raise AttributeError(
>               "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'httpie.downloads' from '/home/user/BugsInPy/temp/projects/httpie/httpie/downloads.py'> does not have the attribute 'get_filename_max_length'

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1411: AttributeError
_ TestDownloadUtils.test_unique_filename[AAAAAAAAAAAAAAAAAAAA.txt-1-AAAA.txt-1] _

args = (<test_downloads.TestDownloadUtils object at 0x7f692a634fd0>,)
keywargs = {'expected': 'AAAA.txt-1', 'orig_name': 'AAAAAAAAAAAAAAAAAAAA.txt', 'unique_on_attempt': 1}

    @wraps(func)
    def patched(*args, **keywargs):
        with self.decoration_helper(patched,
                                    args,
>                                   keywargs) as (newargs, newkeywargs):

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1368: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/contextlib.py:112: in __enter__
    return next(self.gen)
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1334: in decoration_helper
    arg = patching.__enter__()
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1437: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <mock.mock._patch object at 0x7f692ac21630>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
            raise AttributeError(
>               "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'httpie.downloads' from '/home/user/BugsInPy/temp/projects/httpie/httpie/downloads.py'> does not have the attribute 'get_filename_max_length'

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1411: AttributeError
_ TestDownloadUtils.test_unique_filename[foo.AAAAAAAAAAAAAAAAAAAA-0-foo.AAAAAA] _

args = (<test_downloads.TestDownloadUtils object at 0x7f692a732908>,)
keywargs = {'expected': 'foo.AAAAAA', 'orig_name': 'foo.AAAAAAAAAAAAAAAAAAAA', 'unique_on_attempt': 0}

    @wraps(func)
    def patched(*args, **keywargs):
        with self.decoration_helper(patched,
                                    args,
>                                   keywargs) as (newargs, newkeywargs):

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1368: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/contextlib.py:112: in __enter__
    return next(self.gen)
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1334: in decoration_helper
    arg = patching.__enter__()
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1437: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <mock.mock._patch object at 0x7f692ac21630>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
            raise AttributeError(
>               "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'httpie.downloads' from '/home/user/BugsInPy/temp/projects/httpie/httpie/downloads.py'> does not have the attribute 'get_filename_max_length'

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1411: AttributeError
_ TestDownloadUtils.test_unique_filename[foo.AAAAAAAAAAAAAAAAAAAA-1-foo.AAAA-1] _

args = (<test_downloads.TestDownloadUtils object at 0x7f692a41c780>,)
keywargs = {'expected': 'foo.AAAA-1', 'orig_name': 'foo.AAAAAAAAAAAAAAAAAAAA', 'unique_on_attempt': 1}

    @wraps(func)
    def patched(*args, **keywargs):
        with self.decoration_helper(patched,
                                    args,
>                                   keywargs) as (newargs, newkeywargs):

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1368: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/contextlib.py:112: in __enter__
    return next(self.gen)
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1334: in decoration_helper
    arg = patching.__enter__()
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1437: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <mock.mock._patch object at 0x7f692ac21630>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
            raise AttributeError(
>               "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'httpie.downloads' from '/home/user/BugsInPy/temp/projects/httpie/httpie/downloads.py'> does not have the attribute 'get_filename_max_length'

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1411: AttributeError
_ TestDownloadUtils.test_unique_filename[foo.AAAAAAAAAAAAAAAAAAAA-10-foo.AAA-10] _

args = (<test_downloads.TestDownloadUtils object at 0x7f692a5f1f28>,)
keywargs = {'expected': 'foo.AAA-10', 'orig_name': 'foo.AAAAAAAAAAAAAAAAAAAA', 'unique_on_attempt': 10}

    @wraps(func)
    def patched(*args, **keywargs):
        with self.decoration_helper(patched,
                                    args,
>                                   keywargs) as (newargs, newkeywargs):

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1368: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/contextlib.py:112: in __enter__
    return next(self.gen)
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1334: in decoration_helper
    arg = patching.__enter__()
/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1437: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <mock.mock._patch object at 0x7f692ac21630>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
            raise AttributeError(
>               "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'httpie.downloads' from '/home/user/BugsInPy/temp/projects/httpie/httpie/downloads.py'> does not have the attribute 'get_filename_max_length'

/opt/conda/envs/f2ed64849367e3ce98d2d71a61cf95ea/lib/python3.7/site-packages/mock/mock.py:1411: AttributeError
========================== 11 failed in 2.74 seconds ===========================
