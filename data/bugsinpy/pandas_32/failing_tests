coverage run -m pytest pandas/tests/io/sas/test_xport.py::TestXport::test2_binary
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.2, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.15.1
collected 1 item

pandas/tests/io/sas/test_xport.py F                                      [100%]

=================================== FAILURES ===================================
____________________________ TestXport.test2_binary ____________________________

self = <pandas.tests.io.sas.test_xport.TestXport object at 0x7f8a0ebf7880>

    def test2_binary(self):
        # Test with SSHSV1_A.xpt, read as a binary file
    
        # Compare to this
        data_csv = pd.read_csv(self.file02.replace(".xpt", ".csv"))
        numeric_as_float(data_csv)
    
>       data = read_sas(self.file02b, format="xport")

pandas/tests/io/sas/test_xport.py:130: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/io/sas/sasreader.py:68: in read_sas
    reader = XportReader(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pandas.io.sas.sas_xport.XportReader object at 0x7f8a22b8dc70>
filepath_or_buffer = <_io.BufferedReader name='/home/user/BugsInPy/temp/projects/pandas/pandas/tests/io/sas/data/SSHSV1_A.xpt'>
index = None, encoding = None, chunksize = None

    def __init__(
        self, filepath_or_buffer, index=None, encoding="ISO-8859-1", chunksize=None
    ):
    
        self._encoding = encoding
        self._lines_read = 0
        self._index = index
        self._chunksize = chunksize
    
        if isinstance(filepath_or_buffer, str):
            (
                filepath_or_buffer,
                encoding,
                compression,
                should_close,
            ) = get_filepath_or_buffer(filepath_or_buffer, encoding=encoding)
    
        if isinstance(filepath_or_buffer, (str, bytes)):
            self.filepath_or_buffer = open(filepath_or_buffer, "rb")
        else:
            # Copy to BytesIO, and ensure no encoding
            contents = filepath_or_buffer.read()
            try:
>               contents = contents.encode(self._encoding)
E               AttributeError: 'bytes' object has no attribute 'encode'

pandas/io/sas/sas_xport.py:269: AttributeError
=========================== short test summary info ============================
FAILED pandas/tests/io/sas/test_xport.py::TestXport::test2_binary - Attribute...
============================== 1 failed in 0.15s ===============================
