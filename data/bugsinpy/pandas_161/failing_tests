coverage run -m pytest pandas/tests/series/test_missing.py::TestSeriesMissingData::test_fillna_categorical_with_new_categories
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.16.0
collected 3 items

pandas/tests/series/test_missing.py FFF                                  [100%]

=================================== FAILURES ===================================
_ TestSeriesMissingData.test_fillna_categorical_with_new_categories[fill_value0-expected_output0] _

self = <pandas.tests.series.test_missing.TestSeriesMissingData object at 0x7fc6bbd6ab20>
fill_value = 0    a
1    b
2    c
3    d
4    e
dtype: object
expected_output = ['a', 'b', 'b', 'd', 'e']

    @pytest.mark.parametrize(
        "fill_value, expected_output",
        [
            (Series(["a", "b", "c", "d", "e"]), ["a", "b", "b", "d", "e"]),
            (Series(["b", "d", "a", "d", "a"]), ["a", "d", "b", "d", "a"]),
            (
                Series(
                    Categorical(
                        ["b", "d", "a", "d", "a"], categories=["b", "c", "d", "e", "a"]
                    )
                ),
                ["a", "d", "b", "d", "a"],
            ),
        ],
    )
    def test_fillna_categorical_with_new_categories(self, fill_value, expected_output):
        # GH 26215
        data = ["a", np.nan, "b", np.nan, np.nan]
        s = Series(Categorical(data, categories=["a", "b", "c", "d", "e"]))
        exp = Series(Categorical(expected_output, categories=["a", "b", "c", "d", "e"]))
>       tm.assert_series_equal(s.fillna(fill_value), exp)

pandas/tests/series/test_missing.py:601: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/_libs/testing.pyx:65: in pandas._libs.testing.assert_almost_equal
    cpdef assert_almost_equal(a, b,
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise_assert_detail(obj, msg, lobj, robj)
E   AssertionError: Series are different
E   
E   Series values are different (20.0 %)
E   [left]:  [a, b, c, d, e]
E   [right]: [a, b, b, d, e]

pandas/_libs/testing.pyx:178: AssertionError
_ TestSeriesMissingData.test_fillna_categorical_with_new_categories[fill_value1-expected_output1] _

self = <pandas.tests.series.test_missing.TestSeriesMissingData object at 0x7fc6bbd72640>
fill_value = 0    b
1    d
2    a
3    d
4    a
dtype: object
expected_output = ['a', 'd', 'b', 'd', 'a']

    @pytest.mark.parametrize(
        "fill_value, expected_output",
        [
            (Series(["a", "b", "c", "d", "e"]), ["a", "b", "b", "d", "e"]),
            (Series(["b", "d", "a", "d", "a"]), ["a", "d", "b", "d", "a"]),
            (
                Series(
                    Categorical(
                        ["b", "d", "a", "d", "a"], categories=["b", "c", "d", "e", "a"]
                    )
                ),
                ["a", "d", "b", "d", "a"],
            ),
        ],
    )
    def test_fillna_categorical_with_new_categories(self, fill_value, expected_output):
        # GH 26215
        data = ["a", np.nan, "b", np.nan, np.nan]
        s = Series(Categorical(data, categories=["a", "b", "c", "d", "e"]))
        exp = Series(Categorical(expected_output, categories=["a", "b", "c", "d", "e"]))
>       tm.assert_series_equal(s.fillna(fill_value), exp)

pandas/tests/series/test_missing.py:601: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/_libs/testing.pyx:65: in pandas._libs.testing.assert_almost_equal
    cpdef assert_almost_equal(a, b,
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise_assert_detail(obj, msg, lobj, robj)
E   AssertionError: Series are different
E   
E   Series values are different (40.0 %)
E   [left]:  [b, d, a, d, a]
E   [right]: [a, d, b, d, a]

pandas/_libs/testing.pyx:178: AssertionError
_ TestSeriesMissingData.test_fillna_categorical_with_new_categories[fill_value2-expected_output2] _

self = <pandas.tests.series.test_missing.TestSeriesMissingData object at 0x7fc6bbd5b760>
fill_value = 0    b
1    d
2    a
3    d
4    a
dtype: category
Categories (5, object): [b, c, d, e, a]
expected_output = ['a', 'd', 'b', 'd', 'a']

    @pytest.mark.parametrize(
        "fill_value, expected_output",
        [
            (Series(["a", "b", "c", "d", "e"]), ["a", "b", "b", "d", "e"]),
            (Series(["b", "d", "a", "d", "a"]), ["a", "d", "b", "d", "a"]),
            (
                Series(
                    Categorical(
                        ["b", "d", "a", "d", "a"], categories=["b", "c", "d", "e", "a"]
                    )
                ),
                ["a", "d", "b", "d", "a"],
            ),
        ],
    )
    def test_fillna_categorical_with_new_categories(self, fill_value, expected_output):
        # GH 26215
        data = ["a", np.nan, "b", np.nan, np.nan]
        s = Series(Categorical(data, categories=["a", "b", "c", "d", "e"]))
        exp = Series(Categorical(expected_output, categories=["a", "b", "c", "d", "e"]))
>       tm.assert_series_equal(s.fillna(fill_value), exp)

pandas/tests/series/test_missing.py:601: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/_libs/testing.pyx:65: in pandas._libs.testing.assert_almost_equal
    cpdef assert_almost_equal(a, b,
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise_assert_detail(obj, msg, lobj, robj)
E   AssertionError: Series are different
E   
E   Series values are different (40.0 %)
E   [left]:  [b, d, a, d, a]
E   [right]: [a, d, b, d, a]

pandas/_libs/testing.pyx:178: AssertionError
=========================== short test summary info ============================
FAILED pandas/tests/series/test_missing.py::TestSeriesMissingData::test_fillna_categorical_with_new_categories[fill_value0-expected_output0]
FAILED pandas/tests/series/test_missing.py::TestSeriesMissingData::test_fillna_categorical_with_new_categories[fill_value1-expected_output1]
FAILED pandas/tests/series/test_missing.py::TestSeriesMissingData::test_fillna_categorical_with_new_categories[fill_value2-expected_output2]
============================== 3 failed in 0.54s ===============================
