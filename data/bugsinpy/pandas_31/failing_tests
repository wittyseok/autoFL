coverage run -m pytest pandas/tests/groupby/test_function.py::test_groupby_quantile_nullable_array
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.2, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.15.1
collected 4 items

pandas/tests/groupby/test_function.py FFFF                               [100%]

=================================== FAILURES ===================================
______________ test_groupby_quantile_nullable_array[0.5-values0] _______________

values = <IntegerArray>
[1, 0, <NA>, 1, 0, <NA>]
Length: 6, dtype: Int64
q = 0.5

    @pytest.mark.parametrize(
        "values",
        [
            pd.array([1, 0, None] * 2, dtype="Int64"),
            pd.array([True, False, None] * 2, dtype="boolean"),
        ],
    )
    @pytest.mark.parametrize("q", [0.5, [0.0, 0.5, 1.0]])
    def test_groupby_quantile_nullable_array(values, q):
        # https://github.com/pandas-dev/pandas/issues/33136
        df = pd.DataFrame({"a": ["x"] * 3 + ["y"] * 3, "b": values})
>       result = df.groupby("a")["b"].quantile(q)

pandas/tests/groupby/test_function.py:1533: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/core/groupby/groupby.py:1890: in quantile
    return self._get_cythonized_result(
pandas/core/groupby/groupby.py:2273: in _get_cythonized_result
    func(**kwargs)  # Call func to modify indexer values in place
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   def group_quantile(ndarray[float64_t] out,
E   TypeError: No matching signature found

pandas/_libs/groupby.pyx:719: TypeError
______________ test_groupby_quantile_nullable_array[0.5-values1] _______________

values = <BooleanArray>
[True, False, <NA>, True, False, <NA>]
Length: 6, dtype: boolean
q = 0.5

    @pytest.mark.parametrize(
        "values",
        [
            pd.array([1, 0, None] * 2, dtype="Int64"),
            pd.array([True, False, None] * 2, dtype="boolean"),
        ],
    )
    @pytest.mark.parametrize("q", [0.5, [0.0, 0.5, 1.0]])
    def test_groupby_quantile_nullable_array(values, q):
        # https://github.com/pandas-dev/pandas/issues/33136
        df = pd.DataFrame({"a": ["x"] * 3 + ["y"] * 3, "b": values})
>       result = df.groupby("a")["b"].quantile(q)

pandas/tests/groupby/test_function.py:1533: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/core/groupby/groupby.py:1890: in quantile
    return self._get_cythonized_result(
pandas/core/groupby/groupby.py:2273: in _get_cythonized_result
    func(**kwargs)  # Call func to modify indexer values in place
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   def group_quantile(ndarray[float64_t] out,
E   TypeError: No matching signature found

pandas/_libs/groupby.pyx:719: TypeError
_______________ test_groupby_quantile_nullable_array[q1-values0] _______________

values = <IntegerArray>
[1, 0, <NA>, 1, 0, <NA>]
Length: 6, dtype: Int64
q = [0.0, 0.5, 1.0]

    @pytest.mark.parametrize(
        "values",
        [
            pd.array([1, 0, None] * 2, dtype="Int64"),
            pd.array([True, False, None] * 2, dtype="boolean"),
        ],
    )
    @pytest.mark.parametrize("q", [0.5, [0.0, 0.5, 1.0]])
    def test_groupby_quantile_nullable_array(values, q):
        # https://github.com/pandas-dev/pandas/issues/33136
        df = pd.DataFrame({"a": ["x"] * 3 + ["y"] * 3, "b": values})
>       result = df.groupby("a")["b"].quantile(q)

pandas/tests/groupby/test_function.py:1533: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/core/groupby/groupby.py:1902: in quantile
    results = [
pandas/core/groupby/groupby.py:1903: in <listcomp>
    self._get_cythonized_result(
pandas/core/groupby/groupby.py:2273: in _get_cythonized_result
    func(**kwargs)  # Call func to modify indexer values in place
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   def group_quantile(ndarray[float64_t] out,
E   TypeError: No matching signature found

pandas/_libs/groupby.pyx:719: TypeError
_______________ test_groupby_quantile_nullable_array[q1-values1] _______________

values = <BooleanArray>
[True, False, <NA>, True, False, <NA>]
Length: 6, dtype: boolean
q = [0.0, 0.5, 1.0]

    @pytest.mark.parametrize(
        "values",
        [
            pd.array([1, 0, None] * 2, dtype="Int64"),
            pd.array([True, False, None] * 2, dtype="boolean"),
        ],
    )
    @pytest.mark.parametrize("q", [0.5, [0.0, 0.5, 1.0]])
    def test_groupby_quantile_nullable_array(values, q):
        # https://github.com/pandas-dev/pandas/issues/33136
        df = pd.DataFrame({"a": ["x"] * 3 + ["y"] * 3, "b": values})
>       result = df.groupby("a")["b"].quantile(q)

pandas/tests/groupby/test_function.py:1533: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/core/groupby/groupby.py:1902: in quantile
    results = [
pandas/core/groupby/groupby.py:1903: in <listcomp>
    self._get_cythonized_result(
pandas/core/groupby/groupby.py:2273: in _get_cythonized_result
    func(**kwargs)  # Call func to modify indexer values in place
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   def group_quantile(ndarray[float64_t] out,
E   TypeError: No matching signature found

pandas/_libs/groupby.pyx:719: TypeError
=========================== short test summary info ============================
FAILED pandas/tests/groupby/test_function.py::test_groupby_quantile_nullable_array[0.5-values0]
FAILED pandas/tests/groupby/test_function.py::test_groupby_quantile_nullable_array[0.5-values1]
FAILED pandas/tests/groupby/test_function.py::test_groupby_quantile_nullable_array[q1-values0]
FAILED pandas/tests/groupby/test_function.py::test_groupby_quantile_nullable_array[q1-values1]
============================== 4 failed in 0.86s ===============================
