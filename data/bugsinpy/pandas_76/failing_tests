coverage run -m pytest pandas/tests/io/json/test_pandas.py::TestPandasContainer::test_frame_int_overflow
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.16.0
collected 1 item

pandas/tests/io/json/test_pandas.py F                                    [100%]

=================================== FAILURES ===================================
_________________ TestPandasContainer.test_frame_int_overflow __________________

self = <pandas.tests.io.json.test_pandas.TestPandasContainer object at 0x7ff05debdfd0>

    def test_frame_int_overflow(self):
        # GH 30320
        encoded_json = json.dumps([{"col": "31900441201190696999"}, {"col": "Text"}])
        expected = DataFrame({"col": ["31900441201190696999", "Text"]})
>       result = read_json(encoded_json)

pandas/tests/io/json/test_pandas.py:1648: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/util/_decorators.py:214: in wrapper
    return func(*args, **kwargs)
pandas/io/json/_json.py:614: in read_json
    result = json_reader.read()
pandas/io/json/_json.py:737: in read
    obj = self._get_object_parser(self.data)
pandas/io/json/_json.py:759: in _get_object_parser
    obj = FrameParser(json, **kwargs).parse()
pandas/io/json/_json.py:869: in parse
    self._try_convert_types()
pandas/io/json/_json.py:1148: in _try_convert_types
    self._process_converter(
pandas/io/json/_json.py:1129: in _process_converter
    new_data, result = f(col, c)
pandas/io/json/_json.py:1149: in <lambda>
    lambda col, c: self._try_convert_data(col, c, convert_dates=False)
pandas/io/json/_json.py:941: in _try_convert_data
    new_data = data.astype("int64")
pandas/core/generic.py:5510: in astype
    new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)
pandas/core/internals/managers.py:559: in astype
    return self.apply("astype", dtype=dtype, copy=copy, errors=errors)
pandas/core/internals/managers.py:419: in apply
    applied = getattr(b, f)(**kwargs)
pandas/core/internals/blocks.py:629: in astype
    values = astype_nansafe(vals1d, dtype, copy=True)
pandas/core/dtypes/cast.py:874: in astype_nansafe
    return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   result[i] = val
E   OverflowError: Python int too large to convert to C long

pandas/_libs/lib.pyx:560: OverflowError
=========================== short test summary info ============================
FAILED pandas/tests/io/json/test_pandas.py::TestPandasContainer::test_frame_int_overflow
============================== 1 failed in 1.01s ===============================
