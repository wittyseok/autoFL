[
    {
        "name": "tornado.test.http1connection_test.HTTP1ConnectionTest.setUp#14",
        "src_path": "tornado/test/http1connection_test.py",
        "class_name": "tornado.test.http1connection_test.HTTP1ConnectionTest",
        "signature": "tornado.test.http1connection_test.HTTP1ConnectionTest.setUp(self)",
        "snippet": "    def setUp(self):\n        super(HTTP1ConnectionTest, self).setUp()\n        self.asyncSetUp()",
        "begin_line": 14,
        "end_line": 16,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tornado.test.http1connection_test.HTTP1ConnectionTest.asyncSetUp#19",
        "src_path": "tornado/test/http1connection_test.py",
        "class_name": "tornado.test.http1connection_test.HTTP1ConnectionTest",
        "signature": "tornado.test.http1connection_test.HTTP1ConnectionTest.asyncSetUp(self)",
        "snippet": "    def asyncSetUp(self):\n        listener, port = bind_unused_port()\n        event = Event()\n\n        def accept_callback(conn, addr):\n            self.server_stream = IOStream(conn)\n            self.addCleanup(self.server_stream.close)\n            event.set()\n\n        add_accept_handler(listener, accept_callback)\n        self.client_stream = IOStream(socket.socket())\n        self.addCleanup(self.client_stream.close)\n        yield [self.client_stream.connect(('127.0.0.1', port)),\n               event.wait()]\n        self.io_loop.remove_handler(listener)\n        listener.close()",
        "begin_line": 19,
        "end_line": 34,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tornado.test.http1connection_test.HTTP1ConnectionTest.accept_callback#23",
        "src_path": "tornado/test/http1connection_test.py",
        "class_name": "tornado.test.http1connection_test.HTTP1ConnectionTest",
        "signature": "tornado.test.http1connection_test.HTTP1ConnectionTest.accept_callback(conn, addr)",
        "snippet": "        def accept_callback(conn, addr):\n            self.server_stream = IOStream(conn)\n            self.addCleanup(self.server_stream.close)\n            event.set()",
        "begin_line": 23,
        "end_line": 26,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tornado.test.http1connection_test.HTTP1ConnectionTest.test_http10_no_content_length#37",
        "src_path": "tornado/test/http1connection_test.py",
        "class_name": "tornado.test.http1connection_test.HTTP1ConnectionTest",
        "signature": "tornado.test.http1connection_test.HTTP1ConnectionTest.test_http10_no_content_length(self)",
        "snippet": "    def test_http10_no_content_length(self):\n        # Regression test for a bug in which can_keep_alive would crash\n        # for an HTTP/1.0 (not 1.1) response with no content-length.\n        conn = HTTP1Connection(self.client_stream, True)\n        self.server_stream.write(b\"HTTP/1.0 200 Not Modified\\r\\n\\r\\nhello\")\n        self.server_stream.close()\n\n        event = Event()\n        test = self\n        body = []\n\n        class Delegate(HTTPMessageDelegate):\n            def headers_received(self, start_line, headers):\n                test.code = start_line.code\n\n            def data_received(self, data):\n                body.append(data)\n\n            def finish(self):\n                event.set()\n\n        yield conn.read_response(Delegate())\n        yield event.wait()\n        self.assertEqual(self.code, 200)\n        self.assertEqual(b''.join(body), b'hello')",
        "begin_line": 37,
        "end_line": 61,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tornado.test.http1connection_test.Delegate.test_http10_no_content_length#37",
        "src_path": "tornado/test/http1connection_test.py",
        "class_name": "tornado.test.http1connection_test.Delegate",
        "signature": "tornado.test.http1connection_test.Delegate.test_http10_no_content_length(self)",
        "snippet": "    def test_http10_no_content_length(self):\n        # Regression test for a bug in which can_keep_alive would crash\n        # for an HTTP/1.0 (not 1.1) response with no content-length.\n        conn = HTTP1Connection(self.client_stream, True)\n        self.server_stream.write(b\"HTTP/1.0 200 Not Modified\\r\\n\\r\\nhello\")\n        self.server_stream.close()\n\n        event = Event()\n        test = self\n        body = []\n\n        class Delegate(HTTPMessageDelegate):\n            def headers_received(self, start_line, headers):\n                test.code = start_line.code\n\n            def data_received(self, data):\n                body.append(data)\n\n            def finish(self):\n                event.set()\n\n        yield conn.read_response(Delegate())\n        yield event.wait()\n        self.assertEqual(self.code, 200)\n        self.assertEqual(b''.join(body), b'hello')",
        "begin_line": 37,
        "end_line": 61,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tornado.test.http1connection_test.Delegate.headers_received#49",
        "src_path": "tornado/test/http1connection_test.py",
        "class_name": "tornado.test.http1connection_test.Delegate",
        "signature": "tornado.test.http1connection_test.Delegate.headers_received(self, start_line, headers)",
        "snippet": "            def headers_received(self, start_line, headers):\n                test.code = start_line.code",
        "begin_line": 49,
        "end_line": 50,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tornado.test.http1connection_test.Delegate.data_received#52",
        "src_path": "tornado/test/http1connection_test.py",
        "class_name": "tornado.test.http1connection_test.Delegate",
        "signature": "tornado.test.http1connection_test.Delegate.data_received(self, data)",
        "snippet": "            def data_received(self, data):\n                body.append(data)",
        "begin_line": 52,
        "end_line": 53,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tornado.test.http1connection_test.Delegate.finish#55",
        "src_path": "tornado/test/http1connection_test.py",
        "class_name": "tornado.test.http1connection_test.Delegate",
        "signature": "tornado.test.http1connection_test.Delegate.finish(self)",
        "snippet": "            def finish(self):\n                event.set()",
        "begin_line": 55,
        "end_line": 56,
        "comment": "",
        "is_bug": false
    }
]