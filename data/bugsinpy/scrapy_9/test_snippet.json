[
    {
        "name": "tests.test_mail.MailSenderTest.test_send#11",
        "src_path": "tests/test_mail.py",
        "class_name": "tests.test_mail.MailSenderTest",
        "signature": "tests.test_mail.MailSenderTest.test_send(self)",
        "snippet": "    def test_send(self):\n        mailsender = MailSender(debug=True)\n        mailsender.send(to=['test@scrapy.org'], subject='subject', body='body',\n                        _callback=self._catch_mail_sent)\n\n        assert self.catched_msg\n\n        self.assertEqual(self.catched_msg['to'], ['test@scrapy.org'])\n        self.assertEqual(self.catched_msg['subject'], 'subject')\n        self.assertEqual(self.catched_msg['body'], 'body')\n\n        msg = self.catched_msg['msg']\n        self.assertEqual(msg['to'], 'test@scrapy.org')\n        self.assertEqual(msg['subject'], 'subject')\n        self.assertEqual(msg.get_payload(), 'body')\n        self.assertEqual(msg.get('Content-Type'), 'text/plain')",
        "begin_line": 11,
        "end_line": 26,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_mail.MailSenderTest.test_send_single_values_to_and_cc#28",
        "src_path": "tests/test_mail.py",
        "class_name": "tests.test_mail.MailSenderTest",
        "signature": "tests.test_mail.MailSenderTest.test_send_single_values_to_and_cc(self)",
        "snippet": "    def test_send_single_values_to_and_cc(self):\n        mailsender = MailSender(debug=True)\n        mailsender.send(to='test@scrapy.org', subject='subject', body='body',\n                        cc='test@scrapy.org', _callback=self._catch_mail_sent)",
        "begin_line": 28,
        "end_line": 31,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_mail.MailSenderTest.test_send_html#33",
        "src_path": "tests/test_mail.py",
        "class_name": "tests.test_mail.MailSenderTest",
        "signature": "tests.test_mail.MailSenderTest.test_send_html(self)",
        "snippet": "    def test_send_html(self):\n        mailsender = MailSender(debug=True)\n        mailsender.send(to=['test@scrapy.org'], subject='subject',\n                        body='<p>body</p>', mimetype='text/html',\n                        _callback=self._catch_mail_sent)\n\n        msg = self.catched_msg['msg']\n        self.assertEqual(msg.get_payload(), '<p>body</p>')\n        self.assertEqual(msg.get('Content-Type'), 'text/html')",
        "begin_line": 33,
        "end_line": 41,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_mail.MailSenderTest.test_send_attach#43",
        "src_path": "tests/test_mail.py",
        "class_name": "tests.test_mail.MailSenderTest",
        "signature": "tests.test_mail.MailSenderTest.test_send_attach(self)",
        "snippet": "    def test_send_attach(self):\n        attach = BytesIO()\n        attach.write(b'content')\n        attach.seek(0)\n        attachs = [('attachment', 'text/plain', attach)]\n\n        mailsender = MailSender(debug=True)\n        mailsender.send(to=['test@scrapy.org'], subject='subject', body='body',\n                       attachs=attachs, _callback=self._catch_mail_sent)\n\n        assert self.catched_msg\n        self.assertEqual(self.catched_msg['to'], ['test@scrapy.org'])\n        self.assertEqual(self.catched_msg['subject'], 'subject')\n        self.assertEqual(self.catched_msg['body'], 'body')\n\n        msg = self.catched_msg['msg']\n        self.assertEqual(msg['to'], 'test@scrapy.org')\n        self.assertEqual(msg['subject'], 'subject')\n\n        payload = msg.get_payload()\n        assert isinstance(payload, list)\n        self.assertEqual(len(payload), 2)\n\n        text, attach = payload\n        self.assertEqual(text.get_payload(decode=True), b'body')\n        self.assertEqual(text.get_charset(), Charset('us-ascii'))\n        self.assertEqual(attach.get_payload(decode=True), b'content')",
        "begin_line": 43,
        "end_line": 69,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_mail.MailSenderTest._catch_mail_sent#71",
        "src_path": "tests/test_mail.py",
        "class_name": "tests.test_mail.MailSenderTest",
        "signature": "tests.test_mail.MailSenderTest._catch_mail_sent(self, **kwargs)",
        "snippet": "    def _catch_mail_sent(self, **kwargs):\n        self.catched_msg = dict(**kwargs)",
        "begin_line": 71,
        "end_line": 72,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_mail.MailSenderTest.test_send_utf8#74",
        "src_path": "tests/test_mail.py",
        "class_name": "tests.test_mail.MailSenderTest",
        "signature": "tests.test_mail.MailSenderTest.test_send_utf8(self)",
        "snippet": "    def test_send_utf8(self):\n        subject = u's\u00fcbj\u00e8\u00e7t'\n        body = u'b\u00f6d\u00ff-\u00e0\u00e9\u00ef\u00f6\u00f1\u00df'\n        mailsender = MailSender(debug=True)\n        mailsender.send(to=['test@scrapy.org'], subject=subject, body=body,\n                        charset='utf-8', _callback=self._catch_mail_sent)\n\n        assert self.catched_msg\n        self.assertEqual(self.catched_msg['subject'], subject)\n        self.assertEqual(self.catched_msg['body'], body)\n\n        msg = self.catched_msg['msg']\n        self.assertEqual(msg['subject'], subject)\n        self.assertEqual(msg.get_payload(), body)\n        self.assertEqual(msg.get_charset(), Charset('utf-8'))\n        self.assertEqual(msg.get('Content-Type'), 'text/plain; charset=\"utf-8\"')",
        "begin_line": 74,
        "end_line": 89,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "tests.test_mail.MailSenderTest.test_send_attach_utf8#91",
        "src_path": "tests/test_mail.py",
        "class_name": "tests.test_mail.MailSenderTest",
        "signature": "tests.test_mail.MailSenderTest.test_send_attach_utf8(self)",
        "snippet": "    def test_send_attach_utf8(self):\n        subject = u's\u00fcbj\u00e8\u00e7t'\n        body = u'b\u00f6d\u00ff-\u00e0\u00e9\u00ef\u00f6\u00f1\u00df'\n        attach = BytesIO()\n        attach.write(body.encode('utf-8'))\n        attach.seek(0)\n        attachs = [('attachment', 'text/plain', attach)]\n\n        mailsender = MailSender(debug=True)\n        mailsender.send(to=['test@scrapy.org'], subject=subject, body=body,\n                        attachs=attachs, charset='utf-8',\n                        _callback=self._catch_mail_sent)\n\n        assert self.catched_msg\n        self.assertEqual(self.catched_msg['subject'], subject)\n        self.assertEqual(self.catched_msg['body'], body)\n\n        msg = self.catched_msg['msg']\n        self.assertEqual(msg['subject'], subject)\n        self.assertEqual(msg.get_charset(), Charset('utf-8'))\n        self.assertEqual(msg.get('Content-Type'),\n                         'multipart/mixed; charset=\"utf-8\"')\n\n        payload = msg.get_payload()\n        assert isinstance(payload, list)\n        self.assertEqual(len(payload), 2)\n\n        text, attach = payload\n        self.assertEqual(text.get_payload(decode=True).decode('utf-8'), body)\n        self.assertEqual(text.get_charset(), Charset('utf-8'))\n        self.assertEqual(attach.get_payload(decode=True).decode('utf-8'), body)",
        "begin_line": 91,
        "end_line": 121,
        "comment": "",
        "is_bug": false
    }
]