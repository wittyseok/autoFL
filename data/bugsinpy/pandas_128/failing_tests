coverage run -m pytest pandas/tests/io/json/test_readlines.py::test_readjson_unicode
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.16.0
collected 1 item

pandas/tests/io/json/test_readlines.py F                                 [100%]

=================================== FAILURES ===================================
____________________________ test_readjson_unicode _____________________________

monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f044f8e5f70>

    def test_readjson_unicode(monkeypatch):
        with tm.ensure_clean("test.json") as path:
            monkeypatch.setattr("_bootlocale.getpreferredencoding", lambda l: "cp949")
            with open(path, "w", encoding="utf-8") as f:
                f.write('{"£©µÀÆÖÞßéöÿ":["АБВГДабвгд가"]}')
    
            result = read_json(path)
            expected = pd.DataFrame({"£©µÀÆÖÞßéöÿ": ["АБВГДабвгд가"]})
>           tm.assert_frame_equal(result, expected)

pandas/tests/io/json/test_readlines.py:186: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/_libs/testing.pyx:65: in pandas._libs.testing.assert_almost_equal
    cpdef assert_almost_equal(a, b,
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise_assert_detail(obj, msg, lobj, robj)
E   AssertionError: DataFrame.columns are different
E   
E   DataFrame.columns values are different (100.0 %)
E   [left]:  Index(['짙짤쨉��횈횜횧횩챕철첼'], dtype='object')
E   [right]: Index(['£©µÀÆÖÞßéöÿ'], dtype='object')

pandas/_libs/testing.pyx:174: AssertionError
=========================== short test summary info ============================
FAILED pandas/tests/io/json/test_readlines.py::test_readjson_unicode - Assert...
============================== 1 failed in 0.26s ===============================
