[
    {
        "name": "test.test_InfoExtractor.TestInfoExtractor.setUp#24",
        "src_path": "test/test_InfoExtractor.py",
        "class_name": "test.test_InfoExtractor.TestInfoExtractor",
        "signature": "test.test_InfoExtractor.TestInfoExtractor.setUp(self)",
        "snippet": "    def setUp(self):\n        self.ie = TestIE(FakeYDL())",
        "begin_line": 24,
        "end_line": 25,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "test.test_InfoExtractor.TestInfoExtractor.test_ie_key#27",
        "src_path": "test/test_InfoExtractor.py",
        "class_name": "test.test_InfoExtractor.TestInfoExtractor",
        "signature": "test.test_InfoExtractor.TestInfoExtractor.test_ie_key(self)",
        "snippet": "    def test_ie_key(self):\n        self.assertEqual(get_info_extractor(YoutubeIE.ie_key()), YoutubeIE)",
        "begin_line": 27,
        "end_line": 28,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "test.test_InfoExtractor.TestInfoExtractor.test_html_search_regex#30",
        "src_path": "test/test_InfoExtractor.py",
        "class_name": "test.test_InfoExtractor.TestInfoExtractor",
        "signature": "test.test_InfoExtractor.TestInfoExtractor.test_html_search_regex(self)",
        "snippet": "    def test_html_search_regex(self):\n        html = '<p id=\"foo\">Watch this <a href=\"http://www.youtube.com/watch?v=BaW_jenozKc\">video</a></p>'\n        search = lambda re, *args: self.ie._html_search_regex(re, html, *args)\n        self.assertEqual(search(r'<p id=\"foo\">(.+?)</p>', 'foo'), 'Watch this video')",
        "begin_line": 30,
        "end_line": 33,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "test.test_InfoExtractor.TestInfoExtractor.test_opengraph#35",
        "src_path": "test/test_InfoExtractor.py",
        "class_name": "test.test_InfoExtractor.TestInfoExtractor",
        "signature": "test.test_InfoExtractor.TestInfoExtractor.test_opengraph(self)",
        "snippet": "    def test_opengraph(self):\n        ie = self.ie\n        html = '''\n            <meta name=\"og:title\" content='Foo'/>\n            <meta content=\"Some video's description \" name=\"og:description\"/>\n            <meta property='og:image' content='http://domain.com/pic.jpg?key1=val1&amp;key2=val2'/>\n            <meta content='application/x-shockwave-flash' property='og:video:type'>\n            <meta content='Foo' property=og:foobar>\n            <meta name=\"og:test1\" content='foo > < bar'/>\n            <meta name=\"og:test2\" content=\"foo >//< bar\"/>\n            '''\n        self.assertEqual(ie._og_search_title(html), 'Foo')\n        self.assertEqual(ie._og_search_description(html), 'Some video\\'s description ')\n        self.assertEqual(ie._og_search_thumbnail(html), 'http://domain.com/pic.jpg?key1=val1&key2=val2')\n        self.assertEqual(ie._og_search_video_url(html, default=None), None)\n        self.assertEqual(ie._og_search_property('foobar', html), 'Foo')\n        self.assertEqual(ie._og_search_property('test1', html), 'foo > < bar')\n        self.assertEqual(ie._og_search_property('test2', html), 'foo >//< bar')\n        self.assertEqual(ie._og_search_property(('test0', 'test1'), html), 'foo > < bar')\n        self.assertRaises(RegexNotFoundError, ie._og_search_property, 'test0', html, None, fatal=True)\n        self.assertRaises(RegexNotFoundError, ie._og_search_property, ('test0', 'test00'), html, None, fatal=True)",
        "begin_line": 35,
        "end_line": 55,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "test.test_InfoExtractor.TestInfoExtractor.test_html_search_meta#57",
        "src_path": "test/test_InfoExtractor.py",
        "class_name": "test.test_InfoExtractor.TestInfoExtractor",
        "signature": "test.test_InfoExtractor.TestInfoExtractor.test_html_search_meta(self)",
        "snippet": "    def test_html_search_meta(self):\n        ie = self.ie\n        html = '''\n            <meta name=\"a\" content=\"1\" />\n            <meta name='b' content='2'>\n            <meta name=\"c\" content='3'>\n            <meta name=d content='4'>\n            <meta property=\"e\" content='5' >\n            <meta content=\"6\" name=\"f\">\n        '''\n\n        self.assertEqual(ie._html_search_meta('a', html), '1')\n        self.assertEqual(ie._html_search_meta('b', html), '2')\n        self.assertEqual(ie._html_search_meta('c', html), '3')\n        self.assertEqual(ie._html_search_meta('d', html), '4')\n        self.assertEqual(ie._html_search_meta('e', html), '5')\n        self.assertEqual(ie._html_search_meta('f', html), '6')\n        self.assertEqual(ie._html_search_meta(('a', 'b', 'c'), html), '1')\n        self.assertEqual(ie._html_search_meta(('c', 'b', 'a'), html), '3')\n        self.assertEqual(ie._html_search_meta(('z', 'x', 'c'), html), '3')\n        self.assertRaises(RegexNotFoundError, ie._html_search_meta, 'z', html, None, fatal=True)\n        self.assertRaises(RegexNotFoundError, ie._html_search_meta, ('z', 'x'), html, None, fatal=True)",
        "begin_line": 57,
        "end_line": 78,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "test.test_InfoExtractor.TestInfoExtractor.test_download_json#80",
        "src_path": "test/test_InfoExtractor.py",
        "class_name": "test.test_InfoExtractor.TestInfoExtractor",
        "signature": "test.test_InfoExtractor.TestInfoExtractor.test_download_json(self)",
        "snippet": "    def test_download_json(self):\n        uri = encode_data_uri(b'{\"foo\": \"blah\"}', 'application/json')\n        self.assertEqual(self.ie._download_json(uri, None), {'foo': 'blah'})\n        uri = encode_data_uri(b'callback({\"foo\": \"blah\"})', 'application/javascript')\n        self.assertEqual(self.ie._download_json(uri, None, transform_source=strip_jsonp), {'foo': 'blah'})\n        uri = encode_data_uri(b'{\"foo\": invalid}', 'application/json')\n        self.assertRaises(ExtractorError, self.ie._download_json, uri, None)\n        self.assertEqual(self.ie._download_json(uri, None, fatal=False), None)",
        "begin_line": 80,
        "end_line": 87,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "test.test_InfoExtractor.TestInfoExtractor.test_extract_jwplayer_data_realworld#89",
        "src_path": "test/test_InfoExtractor.py",
        "class_name": "test.test_InfoExtractor.TestInfoExtractor",
        "signature": "test.test_InfoExtractor.TestInfoExtractor.test_extract_jwplayer_data_realworld(self)",
        "snippet": "    def test_extract_jwplayer_data_realworld(self):\n        # from http://www.suffolk.edu/sjc/\n        expect_dict(\n            self,\n            self.ie._extract_jwplayer_data(r'''\n                <script type='text/javascript'>\n                    jwplayer('my-video').setup({\n                        file: 'rtmp://192.138.214.154/live/sjclive',\n                        fallback: 'true',\n                        width: '95%',\n                      aspectratio: '16:9',\n                      primary: 'flash',\n                      mediaid:'XEgvuql4'\n                    });\n                </script>\n                ''', None, require_title=False),\n            {\n                'id': 'XEgvuql4',\n                'formats': [{\n                    'url': 'rtmp://192.138.214.154/live/sjclive',\n                    'ext': 'flv'\n                }]\n            })\n\n        # from https://www.pornoxo.com/videos/7564/striptease-from-sexy-secretary/\n        expect_dict(\n            self,\n            self.ie._extract_jwplayer_data(r'''\n<script type=\"text/javascript\">\n    jwplayer(\"mediaplayer\").setup({\n        'videoid': \"7564\",\n        'width': \"100%\",\n        'aspectratio': \"16:9\",\n        'stretching': \"exactfit\",\n        'autostart': 'false',\n        'flashplayer': \"https://t04.vipstreamservice.com/jwplayer/v5.10/player.swf\",\n        'file': \"https://cdn.pornoxo.com/key=MF+oEbaxqTKb50P-w9G3nA,end=1489689259,ip=104.199.146.27/ip=104.199.146.27/speed=6573765/buffer=3.0/2009-12/4b2157147afe5efa93ce1978e0265289c193874e02597.flv\",\n        'image': \"https://t03.vipstreamservice.com/thumbs/pxo-full/2009-12/14/a4b2157147afe5efa93ce1978e0265289c193874e02597.flv-full-13.jpg\",\n        'filefallback': \"https://cdn.pornoxo.com/key=9ZPsTR5EvPLQrBaak2MUGA,end=1489689259,ip=104.199.146.27/ip=104.199.146.27/speed=6573765/buffer=3.0/2009-12/m_4b2157147afe5efa93ce1978e0265289c193874e02597.mp4\",\n        'logo.hide': true,\n        'skin': \"https://t04.vipstreamservice.com/jwplayer/skin/modieus-blk.zip\",\n        'plugins': \"https://t04.vipstreamservice.com/jwplayer/dock/dockableskinnableplugin.swf\",\n        'dockableskinnableplugin.piclink': \"/index.php?key=ajax-videothumbsn&vid=7564&data=2009-12--14--4b2157147afe5efa93ce1978e0265289c193874e02597.flv--17370\",\n        'controlbar': 'bottom',\n        'modes': [\n            {type: 'flash', src: 'https://t04.vipstreamservice.com/jwplayer/v5.10/player.swf'}\n        ],\n        'provider': 'http'\n    });\n    //noinspection JSAnnotator\n    invideo.setup({\n        adsUrl: \"/banner-iframe/?zoneId=32\",\n        adsUrl2: \"\",\n        autostart: false\n    });\n</script>\n            ''', 'dummy', require_title=False),\n            {\n                'thumbnail': 'https://t03.vipstreamservice.com/thumbs/pxo-full/2009-12/14/a4b2157147afe5efa93ce1978e0265289c193874e02597.flv-full-13.jpg',\n                'formats': [{\n                    'url': 'https://cdn.pornoxo.com/key=MF+oEbaxqTKb50P-w9G3nA,end=1489689259,ip=104.199.146.27/ip=104.199.146.27/speed=6573765/buffer=3.0/2009-12/4b2157147afe5efa93ce1978e0265289c193874e02597.flv',\n                    'ext': 'flv'\n                }]\n            })\n\n        # from http://www.indiedb.com/games/king-machine/videos\n        expect_dict(\n            self,\n            self.ie._extract_jwplayer_data(r'''\n<script>\njwplayer(\"mediaplayer\").setup({\"abouttext\":\"Visit Indie DB\",\"aboutlink\":\"http:\\/\\/www.indiedb.com\\/\",\"displaytitle\":false,\"autostart\":false,\"repeat\":false,\"title\":\"king machine trailer 1\",\"sharing\":{\"link\":\"http:\\/\\/www.indiedb.com\\/games\\/king-machine\\/videos\\/king-machine-trailer-1\",\"code\":\"<iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"http:\\/\\/www.indiedb.com\\/media\\/iframe\\/1522983\\\" frameborder=\\\"0\\\" allowfullscreen><\\/iframe><br><a href=\\\"http:\\/\\/www.indiedb.com\\/games\\/king-machine\\/videos\\/king-machine-trailer-1\\\">king machine trailer 1 - Indie DB<\\/a>\"},\"related\":{\"file\":\"http:\\/\\/rss.indiedb.com\\/media\\/recommended\\/1522983\\/feed\\/rss.xml\",\"dimensions\":\"160x120\",\"onclick\":\"link\"},\"sources\":[{\"file\":\"http:\\/\\/cdn.dbolical.com\\/cache\\/videos\\/games\\/1\\/50\\/49678\\/encode_mp4\\/king-machine-trailer.mp4\",\"label\":\"360p SD\",\"default\":\"true\"},{\"file\":\"http:\\/\\/cdn.dbolical.com\\/cache\\/videos\\/games\\/1\\/50\\/49678\\/encode720p_mp4\\/king-machine-trailer.mp4\",\"label\":\"720p HD\"}],\"image\":\"http:\\/\\/media.indiedb.com\\/cache\\/images\\/games\\/1\\/50\\/49678\\/thumb_620x2000\\/king-machine-trailer.mp4.jpg\",\"advertising\":{\"client\":\"vast\",\"tag\":\"http:\\/\\/ads.intergi.com\\/adrawdata\\/3.0\\/5205\\/4251742\\/0\\/1013\\/ADTECH;cors=yes;width=560;height=315;referring_url=http:\\/\\/www.indiedb.com\\/games\\/king-machine\\/videos\\/king-machine-trailer-1;content_url=http:\\/\\/www.indiedb.com\\/games\\/king-machine\\/videos\\/king-machine-trailer-1;media_id=1522983;title=king+machine+trailer+1;device=__DEVICE__;model=__MODEL__;os=Windows+OS;osversion=__OSVERSION__;ua=__UA__;ip=109.171.17.81;uniqueid=1522983;tags=__TAGS__;number=58cac25928151;time=1489683033\"},\"width\":620,\"height\":349}).once(\"play\", function(event) {\n            videoAnalytics(\"play\");\n}).once(\"complete\", function(event) {\n    videoAnalytics(\"completed\");\n});\n</script>\n                ''', 'dummy'),\n            {\n                'title': 'king machine trailer 1',\n                'thumbnail': 'http://media.indiedb.com/cache/images/games/1/50/49678/thumb_620x2000/king-machine-trailer.mp4.jpg',\n                'formats': [{\n                    'url': 'http://cdn.dbolical.com/cache/videos/games/1/50/49678/encode_mp4/king-machine-trailer.mp4',\n                    'height': 360,\n                    'ext': 'mp4'\n                }, {\n                    'url': 'http://cdn.dbolical.com/cache/videos/games/1/50/49678/encode720p_mp4/king-machine-trailer.mp4',\n                    'height': 720,\n                    'ext': 'mp4'\n                }]\n            })",
        "begin_line": 89,
        "end_line": 178,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "test.test_InfoExtractor.TestInfoExtractor.test_parse_m3u8_formats#180",
        "src_path": "test/test_InfoExtractor.py",
        "class_name": "test.test_InfoExtractor.TestInfoExtractor",
        "signature": "test.test_InfoExtractor.TestInfoExtractor.test_parse_m3u8_formats(self)",
        "snippet": "    def test_parse_m3u8_formats(self):\n        _TEST_CASES = [\n            (\n                # https://github.com/rg3/youtube-dl/issues/11507\n                # http://pluzz.francetv.fr/videos/le_ministere.html\n                'pluzz_francetv_11507',\n                'http://replayftv-vh.akamaihd.net/i/streaming-adaptatif_france-dom-tom/2017/S16/J2/156589847-58f59130c1f52-,standard1,standard2,standard3,standard4,standard5,.mp4.csmil/master.m3u8?caption=2017%2F16%2F156589847-1492488987.m3u8%3Afra%3AFrancais&audiotrack=0%3Afra%3AFrancais',\n                [{\n                    'url': 'http://replayftv-vh.akamaihd.net/i/streaming-adaptatif_france-dom-tom/2017/S16/J2/156589847-58f59130c1f52-,standard1,standard2,standard3,standard4,standard5,.mp4.csmil/index_0_av.m3u8?null=0',\n                    'manifest_url': 'http://replayftv-vh.akamaihd.net/i/streaming-adaptatif_france-dom-tom/2017/S16/J2/156589847-58f59130c1f52-,standard1,standard2,standard3,standard4,standard5,.mp4.csmil/master.m3u8?caption=2017%2F16%2F156589847-1492488987.m3u8%3Afra%3AFrancais&audiotrack=0%3Afra%3AFrancais',\n                    'ext': 'mp4',\n                    'format_id': '180',\n                    'protocol': 'm3u8',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc1.66.30',\n                    'tbr': 180,\n                    'width': 256,\n                    'height': 144,\n                }, {\n                    'url': 'http://replayftv-vh.akamaihd.net/i/streaming-adaptatif_france-dom-tom/2017/S16/J2/156589847-58f59130c1f52-,standard1,standard2,standard3,standard4,standard5,.mp4.csmil/index_1_av.m3u8?null=0',\n                    'manifest_url': 'http://replayftv-vh.akamaihd.net/i/streaming-adaptatif_france-dom-tom/2017/S16/J2/156589847-58f59130c1f52-,standard1,standard2,standard3,standard4,standard5,.mp4.csmil/master.m3u8?caption=2017%2F16%2F156589847-1492488987.m3u8%3Afra%3AFrancais&audiotrack=0%3Afra%3AFrancais',\n                    'ext': 'mp4',\n                    'format_id': '303',\n                    'protocol': 'm3u8',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc1.66.30',\n                    'tbr': 303,\n                    'width': 320,\n                    'height': 180,\n                }, {\n                    'url': 'http://replayftv-vh.akamaihd.net/i/streaming-adaptatif_france-dom-tom/2017/S16/J2/156589847-58f59130c1f52-,standard1,standard2,standard3,standard4,standard5,.mp4.csmil/index_2_av.m3u8?null=0',\n                    'manifest_url': 'http://replayftv-vh.akamaihd.net/i/streaming-adaptatif_france-dom-tom/2017/S16/J2/156589847-58f59130c1f52-,standard1,standard2,standard3,standard4,standard5,.mp4.csmil/master.m3u8?caption=2017%2F16%2F156589847-1492488987.m3u8%3Afra%3AFrancais&audiotrack=0%3Afra%3AFrancais',\n                    'ext': 'mp4',\n                    'format_id': '575',\n                    'protocol': 'm3u8',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc1.66.30',\n                    'tbr': 575,\n                    'width': 512,\n                    'height': 288,\n                }, {\n                    'url': 'http://replayftv-vh.akamaihd.net/i/streaming-adaptatif_france-dom-tom/2017/S16/J2/156589847-58f59130c1f52-,standard1,standard2,standard3,standard4,standard5,.mp4.csmil/index_3_av.m3u8?null=0',\n                    'manifest_url': 'http://replayftv-vh.akamaihd.net/i/streaming-adaptatif_france-dom-tom/2017/S16/J2/156589847-58f59130c1f52-,standard1,standard2,standard3,standard4,standard5,.mp4.csmil/master.m3u8?caption=2017%2F16%2F156589847-1492488987.m3u8%3Afra%3AFrancais&audiotrack=0%3Afra%3AFrancais',\n                    'ext': 'mp4',\n                    'format_id': '831',\n                    'protocol': 'm3u8',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc1.77.30',\n                    'tbr': 831,\n                    'width': 704,\n                    'height': 396,\n                }, {\n                    'url': 'http://replayftv-vh.akamaihd.net/i/streaming-adaptatif_france-dom-tom/2017/S16/J2/156589847-58f59130c1f52-,standard1,standard2,standard3,standard4,standard5,.mp4.csmil/index_4_av.m3u8?null=0',\n                    'manifest_url': 'http://replayftv-vh.akamaihd.net/i/streaming-adaptatif_france-dom-tom/2017/S16/J2/156589847-58f59130c1f52-,standard1,standard2,standard3,standard4,standard5,.mp4.csmil/master.m3u8?caption=2017%2F16%2F156589847-1492488987.m3u8%3Afra%3AFrancais&audiotrack=0%3Afra%3AFrancais',\n                    'ext': 'mp4',\n                    'protocol': 'm3u8',\n                    'format_id': '1467',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc1.77.30',\n                    'tbr': 1467,\n                    'width': 1024,\n                    'height': 576,\n                }]\n            ),\n            (\n                # https://github.com/rg3/youtube-dl/issues/11995\n                # http://teamcoco.com/video/clueless-gamer-super-bowl-for-honor\n                'teamcoco_11995',\n                'http://ak.storage-w.teamcococdn.com/cdn/2017-02/98599/ed8f/main.m3u8',\n                [{\n                    'url': 'http://ak.storage-w.teamcococdn.com/cdn/2017-02/98599/ed8f/hls/CONAN_020217_Highlight_show-audio-160k_v4.m3u8',\n                    'manifest_url': 'http://ak.storage-w.teamcococdn.com/cdn/2017-02/98599/ed8f/main.m3u8',\n                    'ext': 'mp4',\n                    'format_id': 'audio-0-Default',\n                    'protocol': 'm3u8',\n                    'vcodec': 'none',\n                }, {\n                    'url': 'http://ak.storage-w.teamcococdn.com/cdn/2017-02/98599/ed8f/hls/CONAN_020217_Highlight_show-audio-64k_v4.m3u8',\n                    'manifest_url': 'http://ak.storage-w.teamcococdn.com/cdn/2017-02/98599/ed8f/main.m3u8',\n                    'ext': 'mp4',\n                    'format_id': 'audio-1-Default',\n                    'protocol': 'm3u8',\n                    'vcodec': 'none',\n                }, {\n                    'url': 'http://ak.storage-w.teamcococdn.com/cdn/2017-02/98599/ed8f/hls/CONAN_020217_Highlight_show-audio-64k_v4.m3u8',\n                    'manifest_url': 'http://ak.storage-w.teamcococdn.com/cdn/2017-02/98599/ed8f/main.m3u8',\n                    'ext': 'mp4',\n                    'format_id': '71',\n                    'protocol': 'm3u8',\n                    'acodec': 'mp4a.40.5',\n                    'vcodec': 'none',\n                    'tbr': 71,\n                }, {\n                    'url': 'http://ak.storage-w.teamcococdn.com/cdn/2017-02/98599/ed8f/hls/CONAN_020217_Highlight_show-400k_v4.m3u8',\n                    'manifest_url': 'http://ak.storage-w.teamcococdn.com/cdn/2017-02/98599/ed8f/main.m3u8',\n                    'ext': 'mp4',\n                    'format_id': '413',\n                    'protocol': 'm3u8',\n                    'acodec': 'none',\n                    'vcodec': 'avc1.42001e',\n                    'tbr': 413,\n                    'width': 400,\n                    'height': 224,\n                }, {\n                    'url': 'http://ak.storage-w.teamcococdn.com/cdn/2017-02/98599/ed8f/hls/CONAN_020217_Highlight_show-400k_v4.m3u8',\n                    'manifest_url': 'http://ak.storage-w.teamcococdn.com/cdn/2017-02/98599/ed8f/main.m3u8',\n                    'ext': 'mp4',\n                    'format_id': '522',\n                    'protocol': 'm3u8',\n                    'acodec': 'none',\n                    'vcodec': 'avc1.42001e',\n                    'tbr': 522,\n                    'width': 400,\n                    'height': 224,\n                }, {\n                    'url': 'http://ak.storage-w.teamcococdn.com/cdn/2017-02/98599/ed8f/hls/CONAN_020217_Highlight_show-1m_v4.m3u8',\n                    'manifest_url': 'http://ak.storage-w.teamcococdn.com/cdn/2017-02/98599/ed8f/main.m3u8',\n                    'ext': 'mp4',\n                    'format_id': '1205',\n                    'protocol': 'm3u8',\n                    'acodec': 'none',\n                    'vcodec': 'avc1.4d001e',\n                    'tbr': 1205,\n                    'width': 640,\n                    'height': 360,\n                }, {\n                    'url': 'http://ak.storage-w.teamcococdn.com/cdn/2017-02/98599/ed8f/hls/CONAN_020217_Highlight_show-2m_v4.m3u8',\n                    'manifest_url': 'http://ak.storage-w.teamcococdn.com/cdn/2017-02/98599/ed8f/main.m3u8',\n                    'ext': 'mp4',\n                    'format_id': '2374',\n                    'protocol': 'm3u8',\n                    'acodec': 'none',\n                    'vcodec': 'avc1.4d001f',\n                    'tbr': 2374,\n                    'width': 1024,\n                    'height': 576,\n                }]\n            ),\n            (\n                # https://github.com/rg3/youtube-dl/issues/12211\n                # http://video.toggle.sg/en/series/whoopie-s-world/ep3/478601\n                'toggle_mobile_12211',\n                'http://cdnapi.kaltura.com/p/2082311/sp/208231100/playManifest/protocol/http/entryId/0_89q6e8ku/format/applehttp/tags/mobile_sd/f/a.m3u8',\n                [{\n                    'url': 'http://k.toggle.sg/fhls/p/2082311/sp/208231100/serveFlavor/entryId/0_89q6e8ku/v/2/pv/1/flavorId/0_sa2ntrdg/name/a.mp4/index.m3u8',\n                    'manifest_url': 'http://cdnapi.kaltura.com/p/2082311/sp/208231100/playManifest/protocol/http/entryId/0_89q6e8ku/format/applehttp/tags/mobile_sd/f/a.m3u8',\n                    'ext': 'mp4',\n                    'format_id': 'audio-English',\n                    'protocol': 'm3u8',\n                    'language': 'eng',\n                    'vcodec': 'none',\n                }, {\n                    'url': 'http://k.toggle.sg/fhls/p/2082311/sp/208231100/serveFlavor/entryId/0_89q6e8ku/v/2/pv/1/flavorId/0_r7y0nitg/name/a.mp4/index.m3u8',\n                    'manifest_url': 'http://cdnapi.kaltura.com/p/2082311/sp/208231100/playManifest/protocol/http/entryId/0_89q6e8ku/format/applehttp/tags/mobile_sd/f/a.m3u8',\n                    'ext': 'mp4',\n                    'format_id': 'audio-Undefined',\n                    'protocol': 'm3u8',\n                    'language': 'und',\n                    'vcodec': 'none',\n                }, {\n                    'url': 'http://k.toggle.sg/fhls/p/2082311/sp/208231100/serveFlavor/entryId/0_89q6e8ku/v/2/pv/1/flavorId/0_qlk9hlzr/name/a.mp4/index.m3u8',\n                    'manifest_url': 'http://cdnapi.kaltura.com/p/2082311/sp/208231100/playManifest/protocol/http/entryId/0_89q6e8ku/format/applehttp/tags/mobile_sd/f/a.m3u8',\n                    'ext': 'mp4',\n                    'format_id': '155',\n                    'protocol': 'm3u8',\n                    'tbr': 155.648,\n                    'width': 320,\n                    'height': 180,\n                }, {\n                    'url': 'http://k.toggle.sg/fhls/p/2082311/sp/208231100/serveFlavor/entryId/0_89q6e8ku/v/2/pv/1/flavorId/0_oefackmi/name/a.mp4/index.m3u8',\n                    'manifest_url': 'http://cdnapi.kaltura.com/p/2082311/sp/208231100/playManifest/protocol/http/entryId/0_89q6e8ku/format/applehttp/tags/mobile_sd/f/a.m3u8',\n                    'ext': 'mp4',\n                    'format_id': '502',\n                    'protocol': 'm3u8',\n                    'tbr': 502.784,\n                    'width': 480,\n                    'height': 270,\n                }, {\n                    'url': 'http://k.toggle.sg/fhls/p/2082311/sp/208231100/serveFlavor/entryId/0_89q6e8ku/v/12/pv/1/flavorId/0_vyg9pj7k/name/a.mp4/index.m3u8',\n                    'manifest_url': 'http://cdnapi.kaltura.com/p/2082311/sp/208231100/playManifest/protocol/http/entryId/0_89q6e8ku/format/applehttp/tags/mobile_sd/f/a.m3u8',\n                    'ext': 'mp4',\n                    'format_id': '827',\n                    'protocol': 'm3u8',\n                    'tbr': 827.392,\n                    'width': 640,\n                    'height': 360,\n                }, {\n                    'url': 'http://k.toggle.sg/fhls/p/2082311/sp/208231100/serveFlavor/entryId/0_89q6e8ku/v/12/pv/1/flavorId/0_50n4psvx/name/a.mp4/index.m3u8',\n                    'manifest_url': 'http://cdnapi.kaltura.com/p/2082311/sp/208231100/playManifest/protocol/http/entryId/0_89q6e8ku/format/applehttp/tags/mobile_sd/f/a.m3u8',\n                    'ext': 'mp4',\n                    'format_id': '1396',\n                    'protocol': 'm3u8',\n                    'tbr': 1396.736,\n                    'width': 854,\n                    'height': 480,\n                }]\n            ),\n            (\n                # http://www.twitch.tv/riotgames/v/6528877\n                'twitch_vod',\n                'https://usher.ttvnw.net/vod/6528877?allow_source=true&allow_audio_only=true&allow_spectre=true&player=twitchweb&nauth=%7B%22user_id%22%3Anull%2C%22vod_id%22%3A6528877%2C%22expires%22%3A1492887874%2C%22chansub%22%3A%7B%22restricted_bitrates%22%3A%5B%5D%7D%2C%22privileged%22%3Afalse%2C%22https_required%22%3Afalse%7D&nauthsig=3e29296a6824a0f48f9e731383f77a614fc79bee',\n                [{\n                    'url': 'https://vod.edgecast.hls.ttvnw.net/e5da31ab49_riotgames_15001215120_261543898/audio_only/index-muted-HM49I092CC.m3u8',\n                    'manifest_url': 'https://usher.ttvnw.net/vod/6528877?allow_source=true&allow_audio_only=true&allow_spectre=true&player=twitchweb&nauth=%7B%22user_id%22%3Anull%2C%22vod_id%22%3A6528877%2C%22expires%22%3A1492887874%2C%22chansub%22%3A%7B%22restricted_bitrates%22%3A%5B%5D%7D%2C%22privileged%22%3Afalse%2C%22https_required%22%3Afalse%7D&nauthsig=3e29296a6824a0f48f9e731383f77a614fc79bee',\n                    'ext': 'mp4',\n                    'format_id': 'Audio Only',\n                    'protocol': 'm3u8',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'none',\n                    'tbr': 182.725,\n                }, {\n                    'url': 'https://vod.edgecast.hls.ttvnw.net/e5da31ab49_riotgames_15001215120_261543898/mobile/index-muted-HM49I092CC.m3u8',\n                    'manifest_url': 'https://usher.ttvnw.net/vod/6528877?allow_source=true&allow_audio_only=true&allow_spectre=true&player=twitchweb&nauth=%7B%22user_id%22%3Anull%2C%22vod_id%22%3A6528877%2C%22expires%22%3A1492887874%2C%22chansub%22%3A%7B%22restricted_bitrates%22%3A%5B%5D%7D%2C%22privileged%22%3Afalse%2C%22https_required%22%3Afalse%7D&nauthsig=3e29296a6824a0f48f9e731383f77a614fc79bee',\n                    'ext': 'mp4',\n                    'format_id': 'Mobile',\n                    'protocol': 'm3u8',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc1.42C00D',\n                    'tbr': 280.474,\n                    'width': 400,\n                    'height': 226,\n                }, {\n                    'url': 'https://vod.edgecast.hls.ttvnw.net/e5da31ab49_riotgames_15001215120_261543898/low/index-muted-HM49I092CC.m3u8',\n                    'manifest_url': 'https://usher.ttvnw.net/vod/6528877?allow_source=true&allow_audio_only=true&allow_spectre=true&player=twitchweb&nauth=%7B%22user_id%22%3Anull%2C%22vod_id%22%3A6528877%2C%22expires%22%3A1492887874%2C%22chansub%22%3A%7B%22restricted_bitrates%22%3A%5B%5D%7D%2C%22privileged%22%3Afalse%2C%22https_required%22%3Afalse%7D&nauthsig=3e29296a6824a0f48f9e731383f77a614fc79bee',\n                    'ext': 'mp4',\n                    'format_id': 'Low',\n                    'protocol': 'm3u8',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc1.42C01E',\n                    'tbr': 628.347,\n                    'width': 640,\n                    'height': 360,\n                }, {\n                    'url': 'https://vod.edgecast.hls.ttvnw.net/e5da31ab49_riotgames_15001215120_261543898/medium/index-muted-HM49I092CC.m3u8',\n                    'manifest_url': 'https://usher.ttvnw.net/vod/6528877?allow_source=true&allow_audio_only=true&allow_spectre=true&player=twitchweb&nauth=%7B%22user_id%22%3Anull%2C%22vod_id%22%3A6528877%2C%22expires%22%3A1492887874%2C%22chansub%22%3A%7B%22restricted_bitrates%22%3A%5B%5D%7D%2C%22privileged%22%3Afalse%2C%22https_required%22%3Afalse%7D&nauthsig=3e29296a6824a0f48f9e731383f77a614fc79bee',\n                    'ext': 'mp4',\n                    'format_id': 'Medium',\n                    'protocol': 'm3u8',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc1.42C01E',\n                    'tbr': 893.387,\n                    'width': 852,\n                    'height': 480,\n                }, {\n                    'url': 'https://vod.edgecast.hls.ttvnw.net/e5da31ab49_riotgames_15001215120_261543898/high/index-muted-HM49I092CC.m3u8',\n                    'manifest_url': 'https://usher.ttvnw.net/vod/6528877?allow_source=true&allow_audio_only=true&allow_spectre=true&player=twitchweb&nauth=%7B%22user_id%22%3Anull%2C%22vod_id%22%3A6528877%2C%22expires%22%3A1492887874%2C%22chansub%22%3A%7B%22restricted_bitrates%22%3A%5B%5D%7D%2C%22privileged%22%3Afalse%2C%22https_required%22%3Afalse%7D&nauthsig=3e29296a6824a0f48f9e731383f77a614fc79bee',\n                    'ext': 'mp4',\n                    'format_id': 'High',\n                    'protocol': 'm3u8',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc1.42C01F',\n                    'tbr': 1603.789,\n                    'width': 1280,\n                    'height': 720,\n                }, {\n                    'url': 'https://vod.edgecast.hls.ttvnw.net/e5da31ab49_riotgames_15001215120_261543898/chunked/index-muted-HM49I092CC.m3u8',\n                    'manifest_url': 'https://usher.ttvnw.net/vod/6528877?allow_source=true&allow_audio_only=true&allow_spectre=true&player=twitchweb&nauth=%7B%22user_id%22%3Anull%2C%22vod_id%22%3A6528877%2C%22expires%22%3A1492887874%2C%22chansub%22%3A%7B%22restricted_bitrates%22%3A%5B%5D%7D%2C%22privileged%22%3Afalse%2C%22https_required%22%3Afalse%7D&nauthsig=3e29296a6824a0f48f9e731383f77a614fc79bee',\n                    'ext': 'mp4',\n                    'format_id': 'Source',\n                    'protocol': 'm3u8',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc1.100.31',\n                    'tbr': 3214.134,\n                    'width': 1280,\n                    'height': 720,\n                }]\n            ),\n            (\n                # http://www.vidio.com/watch/165683-dj_ambred-booyah-live-2015\n                # EXT-X-STREAM-INF tag with NAME attribute that is not defined\n                # in HLS specification\n                'vidio',\n                'https://www.vidio.com/videos/165683/playlist.m3u8',\n                [{\n                    'url': 'https://cdn1-a.production.vidio.static6.com/uploads/165683/dj_ambred-4383-b300.mp4.m3u8',\n                    'manifest_url': 'https://www.vidio.com/videos/165683/playlist.m3u8',\n                    'ext': 'mp4',\n                    'format_id': '270p 3G',\n                    'protocol': 'm3u8',\n                    'tbr': 300,\n                    'width': 480,\n                    'height': 270,\n                }, {\n                    'url': 'https://cdn1-a.production.vidio.static6.com/uploads/165683/dj_ambred-4383-b600.mp4.m3u8',\n                    'manifest_url': 'https://www.vidio.com/videos/165683/playlist.m3u8',\n                    'ext': 'mp4',\n                    'format_id': '360p SD',\n                    'protocol': 'm3u8',\n                    'tbr': 600,\n                    'width': 640,\n                    'height': 360,\n                }, {\n                    'url': 'https://cdn1-a.production.vidio.static6.com/uploads/165683/dj_ambred-4383-b1200.mp4.m3u8',\n                    'manifest_url': 'https://www.vidio.com/videos/165683/playlist.m3u8',\n                    'ext': 'mp4',\n                    'format_id': '720p HD',\n                    'protocol': 'm3u8',\n                    'tbr': 1200,\n                    'width': 1280,\n                    'height': 720,\n                }]\n            )\n        ]\n\n        for m3u8_file, m3u8_url, expected_formats in _TEST_CASES:\n            with io.open('./test/testdata/m3u8/%s.m3u8' % m3u8_file,\n                         mode='r', encoding='utf-8') as f:\n                formats = self.ie._parse_m3u8_formats(\n                    f.read(), m3u8_url, ext='mp4')\n                self.ie._sort_formats(formats)\n                expect_value(self, formats, expected_formats, None)",
        "begin_line": 180,
        "end_line": 490,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "test.test_InfoExtractor.TestInfoExtractor.test_parse_mpd_formats#492",
        "src_path": "test/test_InfoExtractor.py",
        "class_name": "test.test_InfoExtractor.TestInfoExtractor",
        "signature": "test.test_InfoExtractor.TestInfoExtractor.test_parse_mpd_formats(self)",
        "snippet": "    def test_parse_mpd_formats(self):\n        _TEST_CASES = [\n            (\n                # https://github.com/rg3/youtube-dl/issues/13919\n                # Also tests duplicate representation ids, see\n                # https://github.com/rg3/youtube-dl/issues/15111\n                'float_duration',\n                'http://unknown/manifest.mpd',\n                [{\n                    'manifest_url': 'http://unknown/manifest.mpd',\n                    'ext': 'm4a',\n                    'format_id': '318597',\n                    'format_note': 'DASH audio',\n                    'protocol': 'http_dash_segments',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'none',\n                    'tbr': 61.587,\n                }, {\n                    'manifest_url': 'http://unknown/manifest.mpd',\n                    'ext': 'mp4',\n                    'format_id': '318597',\n                    'format_note': 'DASH video',\n                    'protocol': 'http_dash_segments',\n                    'acodec': 'none',\n                    'vcodec': 'avc1.42001f',\n                    'tbr': 318.597,\n                    'width': 340,\n                    'height': 192,\n                }, {\n                    'manifest_url': 'http://unknown/manifest.mpd',\n                    'ext': 'mp4',\n                    'format_id': '638590',\n                    'format_note': 'DASH video',\n                    'protocol': 'http_dash_segments',\n                    'acodec': 'none',\n                    'vcodec': 'avc1.42001f',\n                    'tbr': 638.59,\n                    'width': 512,\n                    'height': 288,\n                }, {\n                    'manifest_url': 'http://unknown/manifest.mpd',\n                    'ext': 'mp4',\n                    'format_id': '1022565',\n                    'format_note': 'DASH video',\n                    'protocol': 'http_dash_segments',\n                    'acodec': 'none',\n                    'vcodec': 'avc1.4d001f',\n                    'tbr': 1022.565,\n                    'width': 688,\n                    'height': 384,\n                }, {\n                    'manifest_url': 'http://unknown/manifest.mpd',\n                    'ext': 'mp4',\n                    'format_id': '2046506',\n                    'format_note': 'DASH video',\n                    'protocol': 'http_dash_segments',\n                    'acodec': 'none',\n                    'vcodec': 'avc1.4d001f',\n                    'tbr': 2046.506,\n                    'width': 1024,\n                    'height': 576,\n                }, {\n                    'manifest_url': 'http://unknown/manifest.mpd',\n                    'ext': 'mp4',\n                    'format_id': '3998017',\n                    'format_note': 'DASH video',\n                    'protocol': 'http_dash_segments',\n                    'acodec': 'none',\n                    'vcodec': 'avc1.640029',\n                    'tbr': 3998.017,\n                    'width': 1280,\n                    'height': 720,\n                }, {\n                    'manifest_url': 'http://unknown/manifest.mpd',\n                    'ext': 'mp4',\n                    'format_id': '5997485',\n                    'format_note': 'DASH video',\n                    'protocol': 'http_dash_segments',\n                    'acodec': 'none',\n                    'vcodec': 'avc1.640032',\n                    'tbr': 5997.485,\n                    'width': 1920,\n                    'height': 1080,\n                }]\n            ), (\n                # https://github.com/rg3/youtube-dl/pull/14844\n                'urls_only',\n                'http://unknown/manifest.mpd',\n                [{\n                    'manifest_url': 'http://unknown/manifest.mpd',\n                    'ext': 'mp4',\n                    'format_id': 'h264_aac_144p_m4s',\n                    'format_note': 'DASH video',\n                    'protocol': 'http_dash_segments',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc3.42c01e',\n                    'tbr': 200,\n                    'width': 256,\n                    'height': 144,\n                }, {\n                    'manifest_url': 'http://unknown/manifest.mpd',\n                    'ext': 'mp4',\n                    'format_id': 'h264_aac_240p_m4s',\n                    'format_note': 'DASH video',\n                    'protocol': 'http_dash_segments',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc3.42c01e',\n                    'tbr': 400,\n                    'width': 424,\n                    'height': 240,\n                }, {\n                    'manifest_url': 'http://unknown/manifest.mpd',\n                    'ext': 'mp4',\n                    'format_id': 'h264_aac_360p_m4s',\n                    'format_note': 'DASH video',\n                    'protocol': 'http_dash_segments',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc3.42c01e',\n                    'tbr': 800,\n                    'width': 640,\n                    'height': 360,\n                }, {\n                    'manifest_url': 'http://unknown/manifest.mpd',\n                    'ext': 'mp4',\n                    'format_id': 'h264_aac_480p_m4s',\n                    'format_note': 'DASH video',\n                    'protocol': 'http_dash_segments',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc3.42c01e',\n                    'tbr': 1200,\n                    'width': 856,\n                    'height': 480,\n                }, {\n                    'manifest_url': 'http://unknown/manifest.mpd',\n                    'ext': 'mp4',\n                    'format_id': 'h264_aac_576p_m4s',\n                    'format_note': 'DASH video',\n                    'protocol': 'http_dash_segments',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc3.42c01e',\n                    'tbr': 1600,\n                    'width': 1024,\n                    'height': 576,\n                }, {\n                    'manifest_url': 'http://unknown/manifest.mpd',\n                    'ext': 'mp4',\n                    'format_id': 'h264_aac_720p_m4s',\n                    'format_note': 'DASH video',\n                    'protocol': 'http_dash_segments',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc3.42c01e',\n                    'tbr': 2400,\n                    'width': 1280,\n                    'height': 720,\n                }, {\n                    'manifest_url': 'http://unknown/manifest.mpd',\n                    'ext': 'mp4',\n                    'format_id': 'h264_aac_1080p_m4s',\n                    'format_note': 'DASH video',\n                    'protocol': 'http_dash_segments',\n                    'acodec': 'mp4a.40.2',\n                    'vcodec': 'avc3.42c01e',\n                    'tbr': 4400,\n                    'width': 1920,\n                    'height': 1080,\n                }]\n            )\n        ]\n\n        for mpd_file, mpd_url, expected_formats in _TEST_CASES:\n            with io.open('./test/testdata/mpd/%s.mpd' % mpd_file,\n                         mode='r', encoding='utf-8') as f:\n                formats = self.ie._parse_mpd_formats(\n                    compat_etree_fromstring(f.read().encode('utf-8')),\n                    mpd_url=mpd_url)\n                self.ie._sort_formats(formats)\n                expect_value(self, formats, expected_formats, None)",
        "begin_line": 492,
        "end_line": 668,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "test.test_InfoExtractor.TestInfoExtractor.test_parse_f4m_formats#670",
        "src_path": "test/test_InfoExtractor.py",
        "class_name": "test.test_InfoExtractor.TestInfoExtractor",
        "signature": "test.test_InfoExtractor.TestInfoExtractor.test_parse_f4m_formats(self)",
        "snippet": "    def test_parse_f4m_formats(self):\n        _TEST_CASES = [\n            (\n                # https://github.com/rg3/youtube-dl/issues/14660\n                'custom_base_url',\n                'http://api.new.livestream.com/accounts/6115179/events/6764928/videos/144884262.f4m',\n                [{\n                    'manifest_url': 'http://api.new.livestream.com/accounts/6115179/events/6764928/videos/144884262.f4m',\n                    'ext': 'flv',\n                    'format_id': '2148',\n                    'protocol': 'f4m',\n                    'tbr': 2148,\n                    'width': 1280,\n                    'height': 720,\n                }]\n            ),\n        ]\n\n        for f4m_file, f4m_url, expected_formats in _TEST_CASES:\n            with io.open('./test/testdata/f4m/%s.f4m' % f4m_file,\n                         mode='r', encoding='utf-8') as f:\n                formats = self.ie._parse_f4m_formats(\n                    compat_etree_fromstring(f.read().encode('utf-8')),\n                    f4m_url, None)\n                self.ie._sort_formats(formats)\n                expect_value(self, formats, expected_formats, None)",
        "begin_line": 670,
        "end_line": 695,
        "comment": "",
        "is_bug": false
    }
]