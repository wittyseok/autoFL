coverage run -m pytest tests/test_types.py::test_update_settings
============================= test session starts ==============================
platform linux -- Python 3.7.0, pytest-3.10.1, py-1.8.1, pluggy-0.13.1
benchmark: 3.2.3 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /home/user/BugsInPy/temp/projects/thefuck, inifile:
plugins: benchmark-3.2.3, mock-3.1.0, docker-pexpect-0.9
collected 1 item

tests/test_types.py F                                                    [100%]

=================================== FAILURES ===================================
_____________________________ test_update_settings _____________________________

    def test_update_settings():
        settings = Settings({'key': 'val'})
        new_settings = settings.update(key='new-val', unset='unset-value')
>       assert new_settings.key == 'val'
E       AssertionError: assert 'new-val' == 'val'
E         - new-val
E         + val

tests/test_types.py:15: AssertionError
=========================== 1 failed in 0.06 seconds ===========================

coverage run -m pytest tests/test_utils.py::test_wrap_settings
============================= test session starts ==============================
platform linux -- Python 3.7.0, pytest-3.10.1, py-1.8.1, pluggy-0.13.1
benchmark: 3.2.3 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /home/user/BugsInPy/temp/projects/thefuck, inifile:
plugins: benchmark-3.2.3, mock-3.1.0, docker-pexpect-0.9
collected 3 items

tests/test_utils.py .FF                                                  [100%]

=================================== FAILURES ===================================
___________________ test_wrap_settings[override1-old1-new1] ____________________

override = {'key': 'new-val'}, old = {'key': 'val'}, new = {'key': 'val'}

    @pytest.mark.parametrize('override, old, new', [
        ({'key': 'val'}, {}, {'key': 'val'}),
        ({'key': 'new-val'}, {'key': 'val'}, {'key': 'val'}),
        ({'key': 'new-val', 'unset': 'unset'}, {'key': 'val'}, {'key': 'val', 'unset': 'unset'})])
    def test_wrap_settings(override, old, new):
        fn = lambda _, settings: settings
>       assert wrap_settings(override)(fn)(None, Settings(old)) == new
E       AssertionError: assert {'key': 'new-val'} == {'key': 'val'}
E         Differing items:
E         {'key': 'new-val'} != {'key': 'val'}
E         Use -v to get the full diff

tests/test_utils.py:16: AssertionError
___________________ test_wrap_settings[override2-old2-new2] ____________________

override = {'key': 'new-val', 'unset': 'unset'}, old = {'key': 'val'}
new = {'key': 'val', 'unset': 'unset'}

    @pytest.mark.parametrize('override, old, new', [
        ({'key': 'val'}, {}, {'key': 'val'}),
        ({'key': 'new-val'}, {'key': 'val'}, {'key': 'val'}),
        ({'key': 'new-val', 'unset': 'unset'}, {'key': 'val'}, {'key': 'val', 'unset': 'unset'})])
    def test_wrap_settings(override, old, new):
        fn = lambda _, settings: settings
>       assert wrap_settings(override)(fn)(None, Settings(old)) == new
E       AssertionError: assert {'key': 'new-...set': 'unset'} == {'key': 'val',...set': 'unset'}
E         Omitting 1 identical items, use -vv to show
E         Differing items:
E         {'key': 'new-val'} != {'key': 'val'}
E         Use -v to get the full diff

tests/test_utils.py:16: AssertionError
====================== 2 failed, 1 passed in 0.10 seconds ======================
