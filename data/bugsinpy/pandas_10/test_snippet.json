[
    {
        "name": "pandas.tests.series.methods.test_update.TestUpdate.test_update#9",
        "src_path": "pandas/tests/series/methods/test_update.py",
        "class_name": "pandas.tests.series.methods.test_update.TestUpdate",
        "signature": "pandas.tests.series.methods.test_update.TestUpdate.test_update(self)",
        "snippet": "    def test_update(self):\n        s = Series([1.5, np.nan, 3.0, 4.0, np.nan])\n        s2 = Series([np.nan, 3.5, np.nan, 5.0])\n        s.update(s2)\n\n        expected = Series([1.5, 3.5, 3.0, 5.0, np.nan])\n        tm.assert_series_equal(s, expected)\n\n        # GH 3217\n        df = DataFrame([{\"a\": 1}, {\"a\": 3, \"b\": 2}])\n        df[\"c\"] = np.nan\n\n        df[\"c\"].update(Series([\"foo\"], index=[0]))\n        expected = DataFrame(\n            [[1, np.nan, \"foo\"], [3, 2.0, np.nan]], columns=[\"a\", \"b\", \"c\"]\n        )\n        tm.assert_frame_equal(df, expected)",
        "begin_line": 9,
        "end_line": 25,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.series.methods.test_update.TestUpdate.test_update_dtypes#52",
        "src_path": "pandas/tests/series/methods/test_update.py",
        "class_name": "pandas.tests.series.methods.test_update.TestUpdate",
        "signature": "pandas.tests.series.methods.test_update.TestUpdate.test_update_dtypes(self, other, dtype, expected)",
        "snippet": "    def test_update_dtypes(self, other, dtype, expected):\n\n        ser = Series([10, 11, 12], dtype=dtype)\n        other = Series(other, index=[1, 3])\n        ser.update(other)\n\n        tm.assert_series_equal(ser, expected)",
        "begin_line": 52,
        "end_line": 58,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.series.methods.test_update.TestUpdate.test_update_from_non_series#73",
        "src_path": "pandas/tests/series/methods/test_update.py",
        "class_name": "pandas.tests.series.methods.test_update.TestUpdate",
        "signature": "pandas.tests.series.methods.test_update.TestUpdate.test_update_from_non_series(self, series, other, expected)",
        "snippet": "    def test_update_from_non_series(self, series, other, expected):\n        # GH 33215\n        series.update(other)\n        tm.assert_series_equal(series, expected)",
        "begin_line": 73,
        "end_line": 76,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.series.methods.test_update.TestUpdate.test_update_extension_array_series#98",
        "src_path": "pandas/tests/series/methods/test_update.py",
        "class_name": "pandas.tests.series.methods.test_update.TestUpdate",
        "signature": "pandas.tests.series.methods.test_update.TestUpdate.test_update_extension_array_series(self, result, target, expected)",
        "snippet": "    def test_update_extension_array_series(self, result, target, expected):\n        result.update(target)\n        tm.assert_series_equal(result, expected)",
        "begin_line": 98,
        "end_line": 100,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.series.conftest.string_series#7",
        "src_path": "pandas/tests/series/conftest.py",
        "class_name": "pandas.tests.series.conftest",
        "signature": "pandas.tests.series.conftest.string_series()",
        "snippet": "def string_series():\n    \"\"\"\n    Fixture for Series of floats with Index of unique strings\n    \"\"\"\n    s = tm.makeStringSeries()\n    s.name = \"series\"\n    return s",
        "begin_line": 7,
        "end_line": 13,
        "comment": "",
        "is_bug": false
    },
    {
        "name": "pandas.tests.series.conftest.object_series#17",
        "src_path": "pandas/tests/series/conftest.py",
        "class_name": "pandas.tests.series.conftest",
        "signature": "pandas.tests.series.conftest.object_series()",
        "snippet": "def object_series():\n    \"\"\"\n    Fixture for Series of dtype object with Index of unique strings\n    \"\"\"\n    s = tm.makeObjectSeries()\n    s.name = \"objects\"\n    return s",
        "begin_line": 17,
        "end_line": 23,
        "comment": "",
        "is_bug": false
    }
]