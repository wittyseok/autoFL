coverage run -m pytest tests/keras/utils/generic_utils_test.py::test_progbar
============================= test session starts ==============================
platform linux -- Python 3.7.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1 -- /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/bin/python
cachedir: .pytest_cache
rootdir: /home/user/BugsInPy/temp/projects/keras, inifile: pytest.ini
plugins: forked-1.1.3, flaky-3.6.1, xdist-1.32.0, httpbin-1.0.0
gw0 I / gw1 I

[gw0] linux Python 3.7.3 cwd: /home/user/BugsInPy/temp/projects/keras

[gw1] linux Python 3.7.3 cwd: /home/user/BugsInPy/temp/projects/keras

[gw0] Python 3.7.3 (default, Mar 27 2019, 22:11:17)  -- [GCC 7.3.0]

[gw1] Python 3.7.3 (default, Mar 27 2019, 22:11:17)  -- [GCC 7.3.0]
gw0 [1] / gw1 [1]

scheduling tests via LoadScheduling

tests/keras/utils/generic_utils_test.py::test_progbar 
[gw0] [100%] FAILED tests/keras/utils/generic_utils_test.py::test_progbar 

=================================== FAILURES ===================================
_________________________________ test_progbar _________________________________
[gw0] linux -- Python 3.7.3 /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/bin/python

    @keras_test
    def test_progbar():
        n = 2
        input_arr = np.random.random((n, n, n))
    
        bar = Progbar(n)
        for i, arr in enumerate(input_arr):
            bar.update(i, list(arr))
    
        bar = Progbar(None)
        for i, arr in enumerate(input_arr):
>           bar.update(i, list(arr))

tests/keras/utils/generic_utils_test.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <keras.utils.generic_utils.Progbar object at 0x7f292a6582b0>, current = 1
values = [array([0.95847855, 0.69596235]), array([0.58122929, 0.12481705])]
force = False

    def update(self, current, values=None, force=False):
        """Updates the progress bar.
    
        # Arguments
            current: Index of current step.
            values: List of tuples (name, value_for_last_step).
                The progress bar will display averages for these values.
            force: Whether to force visual progress update.
        """
        values = values or []
        for k, v in values:
            if k not in self.sum_values:
                self.sum_values[k] = [v * (current - self.seen_so_far),
                                      current - self.seen_so_far]
                self.unique_values.append(k)
            else:
                self.sum_values[k][0] += v * (current - self.seen_so_far)
                self.sum_values[k][1] += (current - self.seen_so_far)
        self.seen_so_far = current
    
        now = time.time()
        info = ' - %.0fs' % (now - self.start)
        if self.verbose == 1:
            if (not force and (now - self.last_update) < self.interval and
>                   current < self.target):
E                   TypeError: '<' not supported between instances of 'int' and 'NoneType'

keras/utils/generic_utils.py:330: TypeError
----------------------------- Captured stdout call -----------------------------

0/2 [..............................] - ETA: 0s - 0.3595113644624941: 0.0000e+00 - 0.5910893024342985: 0.0000e+00
      0/Unknown - 0s 0us/step - 0.3595113644624941: 0.0000e+00 - 0.5910893024342985: 0.0000e+00
=============================== warnings summary ===============================
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/h5py/__init__.py:46
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/h5py/__init__.py:46
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/h5py/__init__.py:46: DeprecationWarning: `np.typeDict` is a deprecated alias for `np.sctypeDict`.
    from ._conv import register_converters as _register_converters

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/pywrap_tensorflow_internal.py:15
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/pywrap_tensorflow_internal.py:15
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/pywrap_tensorflow_internal.py:15: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
    import imp

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:597
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:597
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:597: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.object,

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:605
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:605
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:605: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.bool,

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:639
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:639
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:639: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.object,

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:649
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:649
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:649: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.bool,

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:106
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:106
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:106: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.object:

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:108
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:108
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:108: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.bool:

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:10
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:10
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:10: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _nlv = LooseVersion(_np_version)

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:11
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:11
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:11: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p14 = _nlv < LooseVersion("1.14")

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:12
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:12
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:12: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p15 = _nlv < LooseVersion("1.15")

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:13
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:13
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:13: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p16 = _nlv < LooseVersion("1.16")

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:14
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:14
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:14: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p17 = _nlv < LooseVersion("1.17")

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:15
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:15
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:15: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p18 = _nlv < LooseVersion("1.18")

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/setuptools/_distutils/version.py:346
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/setuptools/_distutils/version.py:346
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/setuptools/_distutils/version.py:346: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    other = LooseVersion(other)

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if LooseVersion(_np_version) >= LooseVersion("1.17.0"):

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/_testing.py:24
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/_testing.py:24
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/pandas/_testing.py:24: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    import pandas._libs.testing as _testing

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:568
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:568
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:568: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    (np.object, string),

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:569
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:569
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:569: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    (np.bool, bool),

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:593
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:593
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:593: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    types_pb2.DT_STRING: np.object,

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:597
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:597
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:597: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    types_pb2.DT_BOOL: np.bool,

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:614
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:614
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:614: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    types_pb2.DT_STRING_REF: np.object,

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:619
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:619
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:619: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    types_pb2.DT_BOOL_REF: np.bool,

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:100
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:100
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:100: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.object: SlowAppendObjectArrayToTensorProto,

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:101
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:101
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:101: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.bool: SlowAppendBoolArrayToTensorProto,

keras/callbacks.py:18
keras/callbacks.py:18
  /home/user/BugsInPy/temp/projects/keras/keras/callbacks.py:18: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
    from collections import Iterable

/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/contrib/learn/python/learn/learn_io/generator_io.py:26
  /opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/tensorflow_core/contrib/learn/python/learn/learn_io/generator_io.py:26: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
    from collections import Container

-- Docs: https://docs.pytest.org/en/latest/warnings.html
========================== slowest 10 test durations ===========================

(0.00 durations hidden.  Use -vv to show these durations.)
=========================== short test summary info ============================
FAILED tests/keras/utils/generic_utils_test.py::test_progbar - TypeError: '<'...
======================== 1 failed, 55 warnings in 2.94s ========================
/opt/conda/envs/66f557d45597d0371c1c7f7e137dee51/lib/python3.7/site-packages/coverage/control.py:793: CoverageWarning: No data was collected. (no-data-collected)
  self._warn("No data was collected.", slug="no-data-collected")
