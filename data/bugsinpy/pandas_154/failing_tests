coverage run -m pytest pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.16.0
collected 42 items

pandas/tests/groupby/test_groupby.py ...FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF [ 83%]
FFFFFFF                                                                  [100%]

=================================== FAILURES ===================================
_______________ test_shift_bfill_ffill_tz['UTC'-shift-expected0] _______________

tz_naive_fixture = 'UTC', op = 'shift'
expected =                        time
0                       NaT
1                       NaT
2 2019-01-01 12:00:00+00:00
3 2019-01-01 12:30:00+00:00
4                       NaT
5                       NaT

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, UTC]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_______________ test_shift_bfill_ffill_tz['UTC'-bfill-expected1] _______________

tz_naive_fixture = 'UTC', op = 'bfill'
expected =                        time
0 2019-01-01 12:00:00+00:00
1 2019-01-01 12:30:00+00:00
2 2019-01-01 14:00:00+00:00
3 2019-01-01 14:30:00+00:00
4 2019-01-01 14:00:00+00:00
5 2019-01-01 14:30:00+00:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, UTC]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_______________ test_shift_bfill_ffill_tz['UTC'-ffill-expected2] _______________

tz_naive_fixture = 'UTC', op = 'ffill'
expected =                        time
0 2019-01-01 12:00:00+00:00
1 2019-01-01 12:30:00+00:00
2 2019-01-01 12:00:00+00:00
3 2019-01-01 12:30:00+00:00
4 2019-01-01 14:00:00+00:00
5 2019-01-01 14:30:00+00:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, UTC]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
___________ test_shift_bfill_ffill_tz['US/Eastern'-shift-expected0] ____________

tz_naive_fixture = 'US/Eastern', op = 'shift'
expected =                        time
0                       NaT
1                       NaT
2 2019-01-01 12:00:00-05:00
3 2019-01-01 12:30:00-05:00
4                       NaT
5                       NaT

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, US/Eastern]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
___________ test_shift_bfill_ffill_tz['US/Eastern'-bfill-expected1] ____________

tz_naive_fixture = 'US/Eastern', op = 'bfill'
expected =                        time
0 2019-01-01 12:00:00-05:00
1 2019-01-01 12:30:00-05:00
2 2019-01-01 14:00:00-05:00
3 2019-01-01 14:30:00-05:00
4 2019-01-01 14:00:00-05:00
5 2019-01-01 14:30:00-05:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, US/Eastern]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
___________ test_shift_bfill_ffill_tz['US/Eastern'-ffill-expected2] ____________

tz_naive_fixture = 'US/Eastern', op = 'ffill'
expected =                        time
0 2019-01-01 12:00:00-05:00
1 2019-01-01 12:30:00-05:00
2 2019-01-01 12:00:00-05:00
3 2019-01-01 12:30:00-05:00
4 2019-01-01 14:00:00-05:00
5 2019-01-01 14:30:00-05:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, US/Eastern]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
___________ test_shift_bfill_ffill_tz['Asia/Tokyo'-shift-expected0] ____________

tz_naive_fixture = 'Asia/Tokyo', op = 'shift'
expected =                        time
0                       NaT
1                       NaT
2 2019-01-01 12:00:00+09:00
3 2019-01-01 12:30:00+09:00
4                       NaT
5                       NaT

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, Asia/Tokyo]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
___________ test_shift_bfill_ffill_tz['Asia/Tokyo'-bfill-expected1] ____________

tz_naive_fixture = 'Asia/Tokyo', op = 'bfill'
expected =                        time
0 2019-01-01 12:00:00+09:00
1 2019-01-01 12:30:00+09:00
2 2019-01-01 14:00:00+09:00
3 2019-01-01 14:30:00+09:00
4 2019-01-01 14:00:00+09:00
5 2019-01-01 14:30:00+09:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, Asia/Tokyo]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
___________ test_shift_bfill_ffill_tz['Asia/Tokyo'-ffill-expected2] ____________

tz_naive_fixture = 'Asia/Tokyo', op = 'ffill'
expected =                        time
0 2019-01-01 12:00:00+09:00
1 2019-01-01 12:30:00+09:00
2 2019-01-01 12:00:00+09:00
3 2019-01-01 12:30:00+09:00
4 2019-01-01 14:00:00+09:00
5 2019-01-01 14:30:00+09:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, Asia/Tokyo]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_______ test_shift_bfill_ffill_tz['dateutil/US/Pacific'-shift-expected0] _______

tz_naive_fixture = 'dateutil/US/Pacific', op = 'shift'
expected =                        time
0                       NaT
1                       NaT
2 2019-01-01 12:00:00-08:00
3 2019-01-01 12:30:00-08:00
4                       NaT
5                       NaT

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_______ test_shift_bfill_ffill_tz['dateutil/US/Pacific'-bfill-expected1] _______

tz_naive_fixture = 'dateutil/US/Pacific', op = 'bfill'
expected =                        time
0 2019-01-01 12:00:00-08:00
1 2019-01-01 12:30:00-08:00
2 2019-01-01 14:00:00-08:00
3 2019-01-01 14:30:00-08:00
4 2019-01-01 14:00:00-08:00
5 2019-01-01 14:30:00-08:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_______ test_shift_bfill_ffill_tz['dateutil/US/Pacific'-ffill-expected2] _______

tz_naive_fixture = 'dateutil/US/Pacific', op = 'ffill'
expected =                        time
0 2019-01-01 12:00:00-08:00
1 2019-01-01 12:30:00-08:00
2 2019-01-01 12:00:00-08:00
3 2019-01-01 12:30:00-08:00
4 2019-01-01 14:00:00-08:00
5 2019-01-01 14:30:00-08:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_____ test_shift_bfill_ffill_tz['dateutil/Asia/Singapore'-shift-expected0] _____

tz_naive_fixture = 'dateutil/Asia/Singapore', op = 'shift'
expected =                        time
0                       NaT
1                       NaT
2 2019-01-01 12:00:00+08:00
3 2019-01-01 12:30:00+08:00
4                       NaT
5                       NaT

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_____ test_shift_bfill_ffill_tz['dateutil/Asia/Singapore'-bfill-expected1] _____

tz_naive_fixture = 'dateutil/Asia/Singapore', op = 'bfill'
expected =                        time
0 2019-01-01 12:00:00+08:00
1 2019-01-01 12:30:00+08:00
2 2019-01-01 14:00:00+08:00
3 2019-01-01 14:30:00+08:00
4 2019-01-01 14:00:00+08:00
5 2019-01-01 14:30:00+08:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_____ test_shift_bfill_ffill_tz['dateutil/Asia/Singapore'-ffill-expected2] _____

tz_naive_fixture = 'dateutil/Asia/Singapore', op = 'ffill'
expected =                        time
0 2019-01-01 12:00:00+08:00
1 2019-01-01 12:30:00+08:00
2 2019-01-01 12:00:00+08:00
3 2019-01-01 12:30:00+08:00
4 2019-01-01 14:00:00+08:00
5 2019-01-01 14:30:00+08:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
______________ test_shift_bfill_ffill_tz[tzutc()-shift-expected0] ______________

tz_naive_fixture = tzutc(), op = 'shift'
expected =                        time
0                       NaT
1                       NaT
2 2019-01-01 12:00:00+00:00
3 2019-01-01 12:30:00+00:00
4                       NaT
5                       NaT

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, tzutc()]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
______________ test_shift_bfill_ffill_tz[tzutc()-bfill-expected1] ______________

tz_naive_fixture = tzutc(), op = 'bfill'
expected =                        time
0 2019-01-01 12:00:00+00:00
1 2019-01-01 12:30:00+00:00
2 2019-01-01 14:00:00+00:00
3 2019-01-01 14:30:00+00:00
4 2019-01-01 14:00:00+00:00
5 2019-01-01 14:30:00+00:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, tzutc()]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
______________ test_shift_bfill_ffill_tz[tzutc()-ffill-expected2] ______________

tz_naive_fixture = tzutc(), op = 'ffill'
expected =                        time
0 2019-01-01 12:00:00+00:00
1 2019-01-01 12:30:00+00:00
2 2019-01-01 12:00:00+00:00
3 2019-01-01 12:30:00+00:00
4 2019-01-01 14:00:00+00:00
5 2019-01-01 14:30:00+00:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, tzutc()]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_____________ test_shift_bfill_ffill_tz[tzlocal()-shift-expected0] _____________

tz_naive_fixture = tzlocal(), op = 'shift'
expected =                        time
0                       NaT
1                       NaT
2 2019-01-01 12:00:00+00:00
3 2019-01-01 12:30:00+00:00
4                       NaT
5                       NaT

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, tzlocal()]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_____________ test_shift_bfill_ffill_tz[tzlocal()-bfill-expected1] _____________

tz_naive_fixture = tzlocal(), op = 'bfill'
expected =                        time
0 2019-01-01 12:00:00+00:00
1 2019-01-01 12:30:00+00:00
2 2019-01-01 14:00:00+00:00
3 2019-01-01 14:30:00+00:00
4 2019-01-01 14:00:00+00:00
5 2019-01-01 14:30:00+00:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, tzlocal()]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_____________ test_shift_bfill_ffill_tz[tzlocal()-ffill-expected2] _____________

tz_naive_fixture = tzlocal(), op = 'ffill'
expected =                        time
0 2019-01-01 12:00:00+00:00
1 2019-01-01 12:30:00+00:00
2 2019-01-01 12:00:00+00:00
3 2019-01-01 12:30:00+00:00
4 2019-01-01 14:00:00+00:00
5 2019-01-01 14:30:00+00:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, tzlocal()]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_______ test_shift_bfill_ffill_tz[pytz.FixedOffset(300)-shift-expected0] _______

tz_naive_fixture = pytz.FixedOffset(300), op = 'shift'
expected =                        time
0                       NaT
1                       NaT
2 2019-01-01 12:00:00+05:00
3 2019-01-01 12:30:00+05:00
4                       NaT
5                       NaT

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, pytz.FixedOffset(300)]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_______ test_shift_bfill_ffill_tz[pytz.FixedOffset(300)-bfill-expected1] _______

tz_naive_fixture = pytz.FixedOffset(300), op = 'bfill'
expected =                        time
0 2019-01-01 12:00:00+05:00
1 2019-01-01 12:30:00+05:00
2 2019-01-01 14:00:00+05:00
3 2019-01-01 14:30:00+05:00
4 2019-01-01 14:00:00+05:00
5 2019-01-01 14:30:00+05:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, pytz.FixedOffset(300)]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_______ test_shift_bfill_ffill_tz[pytz.FixedOffset(300)-ffill-expected2] _______

tz_naive_fixture = pytz.FixedOffset(300), op = 'ffill'
expected =                        time
0 2019-01-01 12:00:00+05:00
1 2019-01-01 12:30:00+05:00
2 2019-01-01 12:00:00+05:00
3 2019-01-01 12:30:00+05:00
4 2019-01-01 14:00:00+05:00
5 2019-01-01 14:30:00+05:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, pytz.FixedOffset(300)]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_______________ test_shift_bfill_ffill_tz[<UTC>-shift-expected0] _______________

tz_naive_fixture = <UTC>, op = 'shift'
expected =                        time
0                       NaT
1                       NaT
2 2019-01-01 12:00:00+00:00
3 2019-01-01 12:30:00+00:00
4                       NaT
5                       NaT

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, UTC]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_______________ test_shift_bfill_ffill_tz[<UTC>-bfill-expected1] _______________

tz_naive_fixture = <UTC>, op = 'bfill'
expected =                        time
0 2019-01-01 12:00:00+00:00
1 2019-01-01 12:30:00+00:00
2 2019-01-01 14:00:00+00:00
3 2019-01-01 14:30:00+00:00
4 2019-01-01 14:00:00+00:00
5 2019-01-01 14:30:00+00:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, UTC]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_______________ test_shift_bfill_ffill_tz[<UTC>-ffill-expected2] _______________

tz_naive_fixture = <UTC>, op = 'ffill'
expected =                        time
0 2019-01-01 12:00:00+00:00
1 2019-01-01 12:30:00+00:00
2 2019-01-01 12:00:00+00:00
3 2019-01-01 12:30:00+00:00
4 2019-01-01 14:00:00+00:00
5 2019-01-01 14:30:00+00:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, UTC]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
______ test_shift_bfill_ffill_tz[pytz.FixedOffset(-300)-shift-expected0] _______

tz_naive_fixture = pytz.FixedOffset(-300), op = 'shift'
expected =                        time
0                       NaT
1                       NaT
2 2019-01-01 12:00:00-05:00
3 2019-01-01 12:30:00-05:00
4                       NaT
5                       NaT

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, pytz.FixedOffset(-300)]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
______ test_shift_bfill_ffill_tz[pytz.FixedOffset(-300)-bfill-expected1] _______

tz_naive_fixture = pytz.FixedOffset(-300), op = 'bfill'
expected =                        time
0 2019-01-01 12:00:00-05:00
1 2019-01-01 12:30:00-05:00
2 2019-01-01 14:00:00-05:00
3 2019-01-01 14:30:00-05:00
4 2019-01-01 14:00:00-05:00
5 2019-01-01 14:30:00-05:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, pytz.FixedOffset(-300)]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
______ test_shift_bfill_ffill_tz[pytz.FixedOffset(-300)-ffill-expected2] _______

tz_naive_fixture = pytz.FixedOffset(-300), op = 'ffill'
expected =                        time
0 2019-01-01 12:00:00-05:00
1 2019-01-01 12:30:00-05:00
2 2019-01-01 12:00:00-05:00
3 2019-01-01 12:30:00-05:00
4 2019-01-01 14:00:00-05:00
5 2019-01-01 14:30:00-05:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, pytz.FixedOffset(-300)]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_______ test_shift_bfill_ffill_tz[datetime.timezone.utc-shift-expected0] _______

tz_naive_fixture = datetime.timezone.utc, op = 'shift'
expected =                        time
0                       NaT
1                       NaT
2 2019-01-01 12:00:00+00:00
3 2019-01-01 12:30:00+00:00
4                       NaT
5                       NaT

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, UTC]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_______ test_shift_bfill_ffill_tz[datetime.timezone.utc-bfill-expected1] _______

tz_naive_fixture = datetime.timezone.utc, op = 'bfill'
expected =                        time
0 2019-01-01 12:00:00+00:00
1 2019-01-01 12:30:00+00:00
2 2019-01-01 14:00:00+00:00
3 2019-01-01 14:30:00+00:00
4 2019-01-01 14:00:00+00:00
5 2019-01-01 14:30:00+00:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, UTC]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_______ test_shift_bfill_ffill_tz[datetime.timezone.utc-ffill-expected2] _______

tz_naive_fixture = datetime.timezone.utc, op = 'ffill'
expected =                        time
0 2019-01-01 12:00:00+00:00
1 2019-01-01 12:30:00+00:00
2 2019-01-01 12:00:00+00:00
3 2019-01-01 12:30:00+00:00
4 2019-01-01 14:00:00+00:00
5 2019-01-01 14:30:00+00:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, UTC]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_ test_shift_bfill_ffill_tz[datetime.timezone(datetime.timedelta(seconds=3600))-shift-expected0] _

tz_naive_fixture = datetime.timezone(datetime.timedelta(seconds=3600))
op = 'shift'
expected =                        time
0                       NaT
1                       NaT
2 2019-01-01 12:00:00+01:00
3 2019-01-01 12:30:00+01:00
4                       NaT
5                       NaT

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, UTC+01:00]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_ test_shift_bfill_ffill_tz[datetime.timezone(datetime.timedelta(seconds=3600))-bfill-expected1] _

tz_naive_fixture = datetime.timezone(datetime.timedelta(seconds=3600))
op = 'bfill'
expected =                        time
0 2019-01-01 12:00:00+01:00
1 2019-01-01 12:30:00+01:00
2 2019-01-01 14:00:00+01:00
3 2019-01-01 14:30:00+01:00
4 2019-01-01 14:00:00+01:00
5 2019-01-01 14:30:00+01:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, UTC+01:00]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_ test_shift_bfill_ffill_tz[datetime.timezone(datetime.timedelta(seconds=3600))-ffill-expected2] _

tz_naive_fixture = datetime.timezone(datetime.timedelta(seconds=3600))
op = 'ffill'
expected =                        time
0 2019-01-01 12:00:00+01:00
1 2019-01-01 12:30:00+01:00
2 2019-01-01 12:00:00+01:00
3 2019-01-01 12:30:00+01:00
4 2019-01-01 14:00:00+01:00
5 2019-01-01 14:30:00+01:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, UTC+01:00]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_ test_shift_bfill_ffill_tz[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-shift-expected0] _

tz_naive_fixture = datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')
op = 'shift'
expected =                        time
0                       NaT
1                       NaT
2 2019-01-01 12:00:00-01:00
3 2019-01-01 12:30:00-01:00
4                       NaT
5                       NaT

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, foo]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_ test_shift_bfill_ffill_tz[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-bfill-expected1] _

tz_naive_fixture = datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')
op = 'bfill'
expected =                        time
0 2019-01-01 12:00:00-01:00
1 2019-01-01 12:30:00-01:00
2 2019-01-01 14:00:00-01:00
3 2019-01-01 14:30:00-01:00
4 2019-01-01 14:00:00-01:00
5 2019-01-01 14:30:00-01:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, foo]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
_ test_shift_bfill_ffill_tz[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-ffill-expected2] _

tz_naive_fixture = datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')
op = 'ffill'
expected =                        time
0 2019-01-01 12:00:00-01:00
1 2019-01-01 12:30:00-01:00
2 2019-01-01 12:00:00-01:00
3 2019-01-01 12:30:00-01:00
4 2019-01-01 14:00:00-01:00
5 2019-01-01 14:30:00-01:00

    @pytest.mark.parametrize(
        "op, expected",
        [
            (
                "shift",
                {
                    "time": [
                        None,
                        None,
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        None,
                        None,
                    ]
                },
            ),
            (
                "bfill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
            (
                "ffill",
                {
                    "time": [
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 12:00:00"),
                        Timestamp("2019-01-01 12:30:00"),
                        Timestamp("2019-01-01 14:00:00"),
                        Timestamp("2019-01-01 14:30:00"),
                    ]
                },
            ),
        ],
    )
    def test_shift_bfill_ffill_tz(tz_naive_fixture, op, expected):
        # GH19995, GH27992: Check that timezone does not drop in shift, bfill, and ffill
        tz = tz_naive_fixture
        data = {
            "id": ["A", "B", "A", "B", "A", "B"],
            "time": [
                Timestamp("2019-01-01 12:00:00"),
                Timestamp("2019-01-01 12:30:00"),
                None,
                None,
                Timestamp("2019-01-01 14:00:00"),
                Timestamp("2019-01-01 14:30:00"),
            ],
        }
        df = DataFrame(data).assign(time=lambda x: x.time.dt.tz_localize(tz))
    
        grouped = df.groupby("id")
        result = getattr(grouped, op)()
        expected = DataFrame(expected).assign(time=lambda x: x.time.dt.tz_localize(tz))
>       assert_frame_equal(result, expected)
E       AssertionError: Attributes are different
E       
E       Attribute "dtype" are different
E       [left]:  datetime64[ns]
E       [right]: datetime64[ns, foo]

pandas/tests/groupby/test_groupby.py:1950: AssertionError
=========================== short test summary info ============================
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz['UTC'-shift-expected0]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz['UTC'-bfill-expected1]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz['UTC'-ffill-expected2]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz['US/Eastern'-shift-expected0]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz['US/Eastern'-bfill-expected1]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz['US/Eastern'-ffill-expected2]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz['Asia/Tokyo'-shift-expected0]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz['Asia/Tokyo'-bfill-expected1]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz['Asia/Tokyo'-ffill-expected2]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz['dateutil/US/Pacific'-shift-expected0]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz['dateutil/US/Pacific'-bfill-expected1]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz['dateutil/US/Pacific'-ffill-expected2]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz['dateutil/Asia/Singapore'-shift-expected0]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz['dateutil/Asia/Singapore'-bfill-expected1]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz['dateutil/Asia/Singapore'-ffill-expected2]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[tzutc()-shift-expected0]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[tzutc()-bfill-expected1]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[tzutc()-ffill-expected2]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[tzlocal()-shift-expected0]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[tzlocal()-bfill-expected1]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[tzlocal()-ffill-expected2]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[pytz.FixedOffset(300)-shift-expected0]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[pytz.FixedOffset(300)-bfill-expected1]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[pytz.FixedOffset(300)-ffill-expected2]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[<UTC>-shift-expected0]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[<UTC>-bfill-expected1]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[<UTC>-ffill-expected2]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[pytz.FixedOffset(-300)-shift-expected0]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[pytz.FixedOffset(-300)-bfill-expected1]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[pytz.FixedOffset(-300)-ffill-expected2]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[datetime.timezone.utc-shift-expected0]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[datetime.timezone.utc-bfill-expected1]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[datetime.timezone.utc-ffill-expected2]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[datetime.timezone(datetime.timedelta(seconds=3600))-shift-expected0]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[datetime.timezone(datetime.timedelta(seconds=3600))-bfill-expected1]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[datetime.timezone(datetime.timedelta(seconds=3600))-ffill-expected2]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-shift-expected0]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-bfill-expected1]
FAILED pandas/tests/groupby/test_groupby.py::test_shift_bfill_ffill_tz[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-ffill-expected2]
========================= 39 failed, 3 passed in 5.18s =========================
